{"version":3,"sources":["lib/TranscriptEditor/Settings/index.module.css","lib/TranscriptEditor/MediaPlayer/PlayerControls.module.css","lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/SpeakerLabel.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/padTimeToTimecode.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.js","lib/Util/adapters/generate-entities-ranges/index.js","lib/Util/adapters/bbc-kaldi/index.js","lib/Util/adapters/autoEdit2/index.js","lib/Util/adapters/index.js","lib/Util/export-adapters/index.js","lib/Util/export-adapters/txt/index.js","lib/TranscriptEditor/MediaPlayer/VideoPlayer.js","lib/TranscriptEditor/MediaPlayer/Select.js","lib/TranscriptEditor/MediaPlayer/PlayerControls.js","lib/TranscriptEditor/MediaPlayer/ProgressBar.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/Settings/Toggle/index.js","lib/TranscriptEditor/Settings/TimecodeOffset/index.js","lib/TranscriptEditor/Settings/index.js","lib/TranscriptEditor/KeyboardShortcutHelp/index.js","lib/TranscriptEditor/index.js","select-stt-json-type.js","select-export-format.js","index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","lib/TranscriptEditor/index.module.css","index.module.css","lib/TranscriptEditor/KeyboardShortcutHelp/index.module.css","lib/TranscriptEditor/MediaPlayer/ProgressBar.module.css","lib/TranscriptEditor/Settings/Toggle/index.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/Select.module.css"],"names":["module","exports","settings","controlsContainer","settingElement","color-darkest-grey","color-light-grey","color-labs-red","playerControls","playerButton","playBackRate","timeBox","currentTime","separator","duration","mutability","Word","generateConfidence","data","confidence","generatePreviousTimes","prevTimes","i","start","concat","dec","Math","floor","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","data-end","end","data-confidence","data-prev-times","data-entity-key","key","className","children","PureComponent","SpeakerLabel","style","speaker","EditLabel","onClick","handleOnClickEdit","role","aria-label","name","secondsToTimecode","seconds","framePerSeconds","fps","undefined","normalisedSeconds","Number","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","isOneDigit","str","length","padTimeToTimecode","time","timecode","includes","includesFullStop","replace","timecodeToSeconds","resultPadded","parseFloat","WrapperBlock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newSpeakerName","prompt","setState","keyForCurrentCurrentBlock","block","getKey","currentBlockSelection","SelectionState","createEmpty","currentBlockSelectionState","EditorState","acceptSelection","blockProps","editorState","getSelection","newBlockDataWithSpeakerName","newContentState","Modifier","mergeBlockData","setEditorNewContentState","handleTimecodeClick","onWordClick","state","timecodeOffset","prevProps","prevState","console","log","get","startTimecode","speakerElement","TimedTextEditor_SpeakerLabel","timecodeElement","slice","markers","showSpeakers","showTimecodes","text","Draft","nextProps","React","Component","generateEntitiesRanges","words","wordAttributeName","position","map","word","result","offset","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","test","punct","push","groupWordsInParagraphs","retval","draftJsContentBlockParagraph","join","type","entityRanges","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","endTime","createEntityMap","blocks","flatEntityRanges","flatten","list","reduce","b","Array","isArray","entityMap","sttJsonAdapter","transcriptData","sttJsonType","error","exportAdapter","blockData","exportFormat","JSON","stringify","ext","x","draftToTxt","TimedTextEditor","onChange","getCurrentContent","isPauseWhileTypingOn","isPlaying","playMedia","clearTimeout","plauseWhileTypingTimeOut","setTimeout","bind","assertThisInitialized","isEditable","inputCount","localSave","mediaUrl","handleDoubleClick","event","element","nativeEvent","target","hasAttribute","parentElement","t","getAttribute","convertToRaw","localStorage","setItem","newLastLocalSavedDate","Date","setEditorContentState","convertFromRaw","createWithContent","decorator","forceRenderDecorator","getDecorator","newState","newEditorState","customKeyBindingFn","e","keyCode","getDefaultKeyBinding","handleKeyCommand","command","splitParagraph","currentSelection","isCollapsed","currentContent","splitBlock","splitState","targetSelection","originalBlock","blockMap","selectionBefore","getStartKey","blockSpeaker","wordStartTime","isEndOfParagraph","getEntityAt","getStartOffset","closestEntityToSelection","findClosestEntityKeyToSelectionPoint","entityData","afterMergeContentState","startSelectionOffsetKey","lengthPlainTextForTheBlock","getLength","remainingCharNumber","j","initialSelectionOffset","renderBlockWithTimecodes","component","editable","getCurrentWord","currentWord","isScrollIntoViewOn","document","querySelector","scrollIntoView","inline","loadData","format","getItem","parse","lastLocalSavedDate","_this2","round","editor","onDoubleClick","scoped","stripPastedStyles","blockRendererFn","keyBindingFn","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","VideoPlayer","id","playsInline","src","onTimeUpdate","data-testid","ref","videoRef","Select","options","option","index","value","label","selectPlayerControl","defaultValue","currentValue","handleChange","PlayerControls","setIntervalHelperBackward","interval","setInterval","skipBackward","setIntervalHelperForward","skipForward","clearIntervalHelper","clearInterval","rollback","onMouseDown","onMouseUp","MediaPlayer_Select","playbackRateOptions","setPlayBackRate","promptSetCurrentTime","ProgressBar","progress","bar","buttonClick","min","max","returnHotKeys","self","esc","priority","handler","togglePlayMedia","helperText","ctrl+k","ctrl+1","ctrl+2","ctrl+3","decreasePlaybackRate","ctrl+4","increasePlaybackRate","ctrl+5","rollBack","MediaPlayer","hot_keys","setCurrentTime","newCurrentTime","newCurrentTimeInSeconds","current","readyState","setTimeCodeOffset","newTimeCodeOffSet","tmpDesiredCurrentTime","rollBackValueInSeconds","handleTimeUpdate","hookOnTimeUpdate","handlePlayBackRateChange","getCurrentPlaybackRate","playbackRate","speedValue","currentPlaybackRate","playbackRateOption","find","indexPlaybackRateOption","indexOf","newPlaybackRateValue","handleChangeReplayRollbackValue","handleMuteVolume","volume","paused","pauseMedia","pause","play","handleProgressBarClick","getMediaCurrentTime","getMediaDuration","createRef","hotKeys","hookSeek","hookPlayMedia","hookIsPlaying","player","MediaPlayer_VideoPlayer","playerControlsSection","styles","controlsSection","titleBox","title","MediaPlayer_PlayerControls","onSetCurrentTime","onSetTimecodeOffset","progressBar","MediaPlayer_ProgressBar","topSection","playerSection","hotkeys","Toggle","switch","defaultChecked","handleToggle","slider","TimecodeOffset","resetTimecodeOffset","handleSetTimecodeOffset","setTimecodeOffset","Settings","Settings_Toggle","defaultValuePauseWhileTyping","handlePauseWhileTyping","defaultvalueScrollSync","handleIsScrollIntoViewChange","defaultRollBackValueInSeconds","handleRollBackValueInSeconds","handleShowTimecodes","handleShowSpeakers","Settings_TimecodeOffset","KeyboardShortcutHelp","hotKeysCheatsheet","keys","listStyle","TranscriptEditor","handleWordClick","handlePlayMedia","bool","handleIsPlaying","isChecked","checked","rollBackValue","refs","timedTextEditor","forceUpdate","getEditorContent","handleSettingsToggle","showSettings","handleKeyboardShortcutsHelpToggle","showKeyboardShortcutsHelp","lastLocalSavedTime","isPresentInLocalStorage","loadLocalSavedData","mediaPlayer","TranscriptEditor_MediaPlayer","foo","styleSettings","TranscriptEditor_Settings","KeyboardShortcutHelpElement","KeyboardShortcutHelpSettings","TranscriptEditor_KeyboardShortcutHelp","container","aside","settingsButton","main","TranscriptEditor_TimedTextEditor","SttTypeSelect","disabled","ExportFormatSelect","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","handleExportFormatChange","exportTranscript","_this$refs$transcript","transcriptEditor","download","content","filename","contentType","blob","Blob","href","window","URL","createObjectURL","click","clearLocalStorage","clear","info","sttType","kaldiTedTalkTranscript","files","file","canPlayType","fileURL","fr","FileReader","onload","readAsText","rel","loadDemo","select_stt_json_type","handleChangeLoadTranscriptJson","handleChangeLoadMedia","handleChangeLoadMediaUrl","select_export_format","lib_TranscriptEditor","render","src_App","getElementById","color-mid-grey","color-dark-grey","helpText","hideInMobile","color-subt-green","switchContainer","DraftEditor-root"],"mappings":"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","file":"static/js/main.b6f7466b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3UPB5\",\"controlsContainer\":\"Settings_controlsContainer__2E90Z\",\"settingElement\":\"Settings_settingElement__2ZeKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-darkest-grey\":\"#282828\",\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"playerControls\":\"PlayerControls_playerControls__3emd7\",\"playerButton\":\"PlayerControls_playerButton___xv7e\",\"playBackRate\":\"PlayerControls_playBackRate__2IcvZ\",\"timeBox\":\"PlayerControls_timeBox__2T0JQ\",\"currentTime\":\"PlayerControls_currentTime__QZjCv\",\"separator\":\"PlayerControls_separator__f03Pz\",\"duration\":\"PlayerControls_duration__l__Bv\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Editor,\n  EditorState,\n  CompositeDecorator,\n  convertFromRaw,\n  convertToRaw,\n  getDefaultKeyBinding,\n  Modifier\n} from 'draft-js';\n\nimport Word from './Word';\nimport WrapperBlock from './WrapperBlock';\n\nimport sttJsonAdapter from '../../Util/adapters/index.js';\nimport exportAdapter from '../../Util/export-adapters/index.js';\nimport style from './index.module.css';\nimport { throws } from 'assert';\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType,\n      timecodeOffset: this.props.timecodeOffset,\n      showSpeakers: this.props.showSpeakers,\n      showTimecodes: this.props.showTimecodes,\n      inputCount: 0,\n      currentWord: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.transcriptData !== null) {\n      console.log('TimedTextEditor getDerivedStateFromProps', nextProps);\n      \n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable,\n        timecodeOffset: nextProps.timecodeOffset,\n        showSpeakers: nextProps.showSpeakers,\n        showTimecodes: nextProps.showTimecodes\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.transcriptData !== this.state.transcriptData) {\n      this.loadData();\n    }\n    if (prevState.timecodeOffset !== this.state.timecodeOffset\n      || prevState.showSpeakers !== this.state.showSpeakers\n      || prevState.showTimecodes !== this.state.showTimecodes) {\n      // forcing a re-render is an expensive operation and \n      // there might be a way of optimising this at a later refactor (?)\n      // the issue is that WrapperBlock is not update on TimedTextEditor \n      // state change otherwise.\n      // for now compromising on this, as setting timecode offset, and \n      // display preferences for speakers and timecodes are not expected to \n      // be very frequent operations but rather one time setup in most cases.\n      this.forceRenderDecorator();\n    }\n  }\n\n  onChange = (editorState) => {\n    // https://draftjs.org/docs/api-reference-editor-state#lastchangetype\n    // https://draftjs.org/docs/api-reference-editor-change-type\n    // doing editorStateChangeType === 'insert-characters'  is triggered even\n    // outside of draftJS eg when clicking play button so using this instead\n    // see issue https://github.com/facebook/draft-js/issues/1060\n    if (this.state.editorState.getCurrentContent() !== editorState.getCurrentContent()) {\n      if (this.props.isPauseWhileTypingOn) {\n        if (this.props.isPlaying()) {\n          this.props.playMedia(false);\n          // Pause video for X seconds\n          const pauseWhileTypingIntervalInMilliseconds = 3000;\n          // resets timeout\n          clearTimeout(this.plauseWhileTypingTimeOut);\n          this.plauseWhileTypingTimeOut = setTimeout(function() {\n            // after timeout starts playing again\n            this.props.playMedia(true);\n          }.bind(this), pauseWhileTypingIntervalInMilliseconds);\n        }\n      }\n    }\n\n    if (this.state.isEditable) {\n      this.setState((prevState, props) => ({\n        editorState,\n        inputCount: prevState.inputCount + 1,\n      }), () => {\n        // Saving every 5 keystrokes\n        if (this.state.inputCount > 5) {\n          this.setState({\n            inputCount: 0,\n          });\n\n          this.localSave(this.props.mediaUrl);\n        }\n      });\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      this.setEditorContentState(blocks);\n    }\n  }\n\n  getEditorContent(exportFormat) {\n    const format = exportFormat || 'draftjs';\n    \n    return exportAdapter(convertToRaw(this.state.editorState.getCurrentContent()), format);\n  }\n\n  // click on words - for navigation\n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event) => {\n    // nativeEvent --> React giving you the DOM event\n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      this.props.onWordClick(t);\n    }\n  }\n\n  localSave = () => {\n    const mediaUrl = this.props.mediaUrl;\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n    localStorage.setItem(`draftJs-${ mediaUrl }`, JSON.stringify(data));\n    const newLastLocalSavedDate = new Date().toString();\n    localStorage.setItem(`timestamp-${ mediaUrl }`, newLastLocalSavedDate);\n\n    return newLastLocalSavedDate;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isPresentInLocalStorage(mediaUrl) {\n    const data = localStorage.getItem(`draftJs-${ mediaUrl }`);\n    if (data !== null) {\n      return true;\n    }\n\n    return false;\n  }\n\n  loadLocalSavedData(mediaUrl) {\n    const data = JSON.parse(localStorage.getItem(`draftJs-${ mediaUrl }`));\n    if (data !== null) {\n      const lastLocalSavedDate = localStorage.getItem(`timestamp-${ mediaUrl }`);\n      this.setEditorContentState(data);\n\n      return lastLocalSavedDate;\n    }\n\n    return '';\n  }\n\n  /**\n  * @param {object} data.entityMap - draftJs entity maps - used by convertFromRaw\n  * @param {object} data.blocks - draftJs blocks - used by convertFromRaw\n  * set DraftJS Editor content state from blocks\n  * contains blocks and entityMap\n  */\n  setEditorContentState = (data) => {\n    const contentState = convertFromRaw(data);\n    // eslint-disable-next-line no-use-before-define\n    const editorState = EditorState.createWithContent(contentState, decorator);\n    this.setState({ editorState });\n  }\n\n  // Helper function to re-render this component\n  // used to re-render WrapperBlock on timecode offset change\n  // or when show / hide preferences for speaker labels and timecodes change\n  forceRenderDecorator= () => {\n    // const { editorState, updateEditorState } = this.props;\n    const contentState =   this.state.editorState.getCurrentContent();\n    const decorator =   this.state.editorState.getDecorator();\n  \n    const newState = EditorState.createWithContent(\n      contentState,\n      decorator\n    );\n  \n    // this.setEditorNewContentState(newState);\n    const newEditorState = EditorState.push(newState, contentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n  * Update Editor content state\n  */\n  setEditorNewContentState = (newContentState) => {\n    const newEditorState = EditorState.push(this.state.editorState, newContentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n   * Listen for draftJs custom key bindings\n   */\n  customKeyBindingFn = ( e) => {\n    const enterKey = 13;\n    if (e.keyCode === enterKey ) {\n      return 'split-paragraph';\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  /**\n   * Handle draftJs custom key commands\n   */\n  handleKeyCommand = (command) => {\n    if (command === 'split-paragraph') {\n      this.splitParagraph();\n    }\n    \n    return 'not-handled';\n  }\n\n  /**\n   * Helper function to handle splitting paragraphs with return key\n   * on enter key, perform split paragraph at selection point.\n   * Add timecode of next word after split to paragraph\n   * as well as speaker name to new paragraph\n   */\n  splitParagraph = () => {\n    // https://github.com/facebook/draft-js/issues/723#issuecomment-367918580\n    // https://draftjs.org/docs/api-reference-selection-state#start-end-vs-anchor-focus\n    const currentSelection = this.state.editorState.getSelection();\n    // only perform if selection is not selecting a range of words\n    // in that case, we'd expect delete + enter to achieve same result.\n    if (currentSelection.isCollapsed()) {\n      const currentContent = this.state.editorState.getCurrentContent();\n      // https://draftjs.org/docs/api-reference-modifier#splitblock\n      const newContentState = Modifier.splitBlock(currentContent, currentSelection);\n      // https://draftjs.org/docs/api-reference-editor-state#push\n      const splitState = EditorState.push(this.state.editorState, newContentState, 'split-block');\n      const targetSelection = splitState.getSelection();\n\n      const originalBlock = currentContent.blockMap.get(newContentState.selectionBefore.getStartKey());\n      const originalBlockData = originalBlock.getData();\n      const blockSpeaker = originalBlockData.get('speaker');\n\n      let wordStartTime = 'NA';\n      // eslint-disable-next-line prefer-const\n      let isEndOfParagraph = false;\n      // identify the entity (word) at the selection/cursor point on split.\n      // eslint-disable-next-line prefer-const\n      let entityKey = originalBlock.getEntityAt(currentSelection.getStartOffset());\n      // if there is no word entity associated with a char then there is no entity key \n      // at that selection point\n      if (entityKey === null) {\n        const closestEntityToSelection = this.findClosestEntityKeyToSelectionPoint(currentSelection,originalBlock);\n        entityKey = closestEntityToSelection.entityKey;\n        isEndOfParagraph = closestEntityToSelection.isEndOfParagraph;\n        // handle edge case when it doesn't find a closest entity (word) \n        // eg pres enter on an empty line\n        if (entityKey === null) {\n          return 'not-handled';\n        }\n      }\n      // if there is an entityKey at or close to the selection point\n      // can get the word startTime. for the new paragraph.\n      const entityInstance = currentContent.getEntity(entityKey);\n      const entityData = entityInstance.getData();\n      if (isEndOfParagraph) {\n        // if it's end of paragraph use end time of word for new paragraph\n        wordStartTime = entityData.end;\n      }\n      else {\n        wordStartTime = entityData.start;\n      }\n      // split paragraph\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const afterMergeContentState = Modifier.mergeBlockData(\n        splitState.getCurrentContent(),\n        targetSelection,\n        {\n          'start': wordStartTime,\n          'speaker': blockSpeaker\n        }\n      );\n      this.setEditorNewContentState(afterMergeContentState);\n  \n      return 'handled';\n    }\n  \n    return 'not-handled';\n  }\n  \n  /**\n   * Helper function for splitParagraph \n   * to find the closest entity (word) to a selection point \n   * that does not fall on an entity to begin with\n   * Looks before if it's last char in a paragraph block.\n   * After for everything else.\n   */\n  findClosestEntityKeyToSelectionPoint = (currentSelection,originalBlock) => {\n    // set defaults\n    let entityKey = null;\n    let isEndOfParagraph = false;\n  \n    // selection offset from beginning of the paragraph block\n    const startSelectionOffsetKey = currentSelection.getStartOffset();\n    // length of the plain text for the ContentBlock\n    const lengthPlainTextForTheBlock = originalBlock.getLength();\n    // number of char from selection point to end of paragraph\n    const remainingCharNumber = lengthPlainTextForTheBlock - startSelectionOffsetKey;\n    // if it's the last char in the paragraph - get previous entity\n    if (remainingCharNumber === 0 ) {\n      isEndOfParagraph = true;\n      for (let j = lengthPlainTextForTheBlock; j >0 ; j--) {\n        entityKey = originalBlock.getEntityAt(j);\n        if (entityKey!== null) {\n          // if it finds it then return \n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n    // if it's first char or another within the block - get next entity \n    else {\n      console.log('Main part of paragraph');\n      let initialSelectionOffset = currentSelection.getStartOffset();\n      for (let i = 0; i < remainingCharNumber ; i++) {\n        initialSelectionOffset +=i;\n        entityKey = originalBlock.getEntityAt(initialSelectionOffset);\n        // if it finds it then return \n        if (entityKey !== null) {\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n\n    // cover edge cases where it doesn't find it\n    return { entityKey, isEndOfParagraph }; \n  }\n\n  renderBlockWithTimecodes = () => {\n    console.log('this.props.timecodeOffset',this.props.timecodeOffset);\n    \n    return {\n      component: WrapperBlock,\n      editable: true,\n      props: {\n        showSpeakers: this.state.showSpeakers,\n        showTimecodes: this.state.showTimecodes,\n        timecodeOffset: this.state.timecodeOffset,\n        editorState: this.state.editorState,\n        setEditorNewContentState: this.setEditorNewContentState,\n        onWordClick: this.props.onWordClick\n      }\n    };\n  }\n\n  getCurrentWord = () => {\n    const currentWord = {\n      start: 'NA',\n      end: 'NA'\n    };\n\n    if (this.state.transcriptData) {\n      const contentState = this.state.editorState.getCurrentContent();\n      // TODO: using convertToRaw here might be slowing down performance(?) \n      const contentStateConvertEdToRaw = convertToRaw(contentState);\n      const entityMap = contentStateConvertEdToRaw.entityMap;\n\n      for (var entityKey in entityMap) {\n        const entity = entityMap[entityKey];\n        const word = entity.data;\n\n        if (word.start <= this.props.currentTime && word.end >= this.props.currentTime) {\n          currentWord.start = word.start;\n          currentWord.end = word.end;\n        }\n      }\n    }\n    \n    if (currentWord.start !== 'NA') {\n      if (this.props.isScrollIntoViewOn) {\n        const currentWordElement = document.querySelector(`span.Word[data-start=\"${ currentWord.start }\"]`);\n        currentWordElement.scrollIntoView({ block: 'center', inline: 'center' });\n      }\n    }\n\n    return currentWord;\n  }\n\n  render() {\n    const currentWord = this.getCurrentWord();\n    const highlightColour = '#69e3c2';\n    const unplayedColor = '#767676';\n    const correctionBorder = '1px dotted blue';\n\n    // Time to the nearest half second\n    const time = Math.round(this.props.currentTime * 4.0) / 4.0;\n\n    const editor = (\n      <section\n        className={ style.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }>\n\n        <style scoped>\n          {`span.Word[data-start=\"${ currentWord.start }\"] { background-color: ${ highlightColour }; text-shadow: 0 0 0.01px black }`}\n          {`span.Word[data-start=\"${ currentWord.start }\"]+span { background-color: ${ highlightColour } }`}\n          {`span.Word[data-prev-times~=\"${ Math.floor(time) }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-prev-times~=\"${ time }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-confidence=\"low\"] { border-bottom: ${ correctionBorder } }`}\n        </style>\n\n        <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n          blockRendererFn={ this.renderBlockWithTimecodes }\n          handleKeyCommand={ command => this.handleKeyCommand(command) }\n          keyBindingFn={ e => this.customKeyBindingFn(e) }\n        />\n      </section>\n    );\n\n    return (\n      <section>\n        { this.props.transcriptData !== null ? editor : null }\n      </section>\n    );\n  }\n}\n\n// DraftJs decorator to recognize which entity is which\n// and know what to apply to what component\nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs\n// defines what to use to render the entity\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word,\n  },\n]);\n\nTimedTextEditor.propTypes = {\n  transcriptData: PropTypes.object,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  onWordClick: PropTypes.func,\n  sttJsonType: PropTypes.string,\n  isPlaying: PropTypes.func,\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.number,\n  isScrollIntoViewOn: PropTypes.bool,\n  isPauseWhileTypingOn: PropTypes.bool,\n  timecodeOffset: PropTypes.number\n};\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return  data.confidence > 0.6 ? 'high' : 'low';\n    }\n    // if confidence score not present then mark all as high\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <span\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { this.generateConfidence(data) }\n        data-prev-times = { this.generatePreviousTimes(data) }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './WrapperBlock.module.css';\n\nclass SpeakerLabel extends PureComponent {\n  render() {\n    return (\n      <span className={ style.speaker }>\n        <span\n          className={ style.EditLabel }\n          onClick={ this.props.handleOnClickEdit }\n          role='img'\n          aria-label='Pencil'> ✏️\n        </span>\n        {this.props.name}\n      </span>\n    );\n  }\n}\n\nSpeakerLabel.propTypes = {\n  name: PropTypes.string,\n  handleOnClickEdit: PropTypes.func\n};\n\nexport default SpeakerLabel;\n","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames,\n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff`\n*/\n\n/**\n * Helper function\n * Rounds to the 14milliseconds boundaries\n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds\n * @param {*} fps\n */\nconst normalisePlayerTime = function (seconds, fps) {\n  return Number((1.0 / fps * Math.floor(Number((fps * seconds).toPrecision(12)))).toFixed(2));\n};\n\n/*\n* @param {*} seconds\n* @param {*} fps\n*/\nconst secondsToTimecode = function (seconds, framePerSeconds) {\n  // written for PAL non-drop timecode\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n\n  const normalisedSeconds = normalisePlayerTime(seconds, fps);\n\n  const wholeSeconds = Math.floor(normalisedSeconds);\n  const frames = ((normalisedSeconds - wholeSeconds) * fps).toFixed(2);\n\n  // prepends zero - example pads 3 to 03\n  function _padZero(n) {\n    if (n < 10) return `0${ parseInt(n) }`;\n\n    return parseInt(n);\n  }\n\n  return `${ _padZero((wholeSeconds / 60 / 60) % 60)\n  }:${\n    _padZero((wholeSeconds / 60) % 60)\n  }:${\n    _padZero(wholeSeconds % 60)\n  }:${\n    _padZero(frames) }`;\n};\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction\n * @param {*} tc\n * @param {*} fps\n */\nconst timecodeToFrames = function (tc, fps) {\n  // TODO make 29.97 fps drop-frame aware - works for 25 only.\n\n  const s = tc.split(':');\n  let frames = parseInt(s[3]);\n  frames += parseInt(s[2]) * fps;\n  frames += parseInt(s[1]) * (fps * 60);\n  frames += parseInt(s[0]) * (fps * 60 * 60);\n\n  return frames;\n};\n\n/**\n * Convert broadcast timecodes to seconds\n * @param {*} tc - `hh:mm:ss:ff`\n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function (tc, framePerSeconds) {\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n  const frames = timecodeToFrames(tc, fps);\n\n  return Number(Number(frames / fps).toFixed(2));\n};\n\nexport default timecodeToSecondsHelper;\n","const countColon = timecode => timecode.split(':').length;\n\nconst includesFullStop = timecode => timecode.includes('.');\n\nconst isOneDigit = str => str.length === 1;\n\nconst padTimeToTimecode = (time) => {\n  if (typeof time === 'string') {\n    switch (countColon(time)) {\n    case 4:\n      // is already in timecode format\n      // hh:mm:ss:ff\n      return time;\n    case 2:\n      // m:ss\n      if (isOneDigit(time.split(':')[0])) {\n        return `00:0${ time }:00`;\n      }\n\n      return `00:${ time }:00`;\n    case 3:\n      // hh:mm:ss\n      return `${ time }:00`;\n    default:\n      // mm.ss\n      if (includesFullStop(time)) {\n        // m.ss\n        if (isOneDigit(time.split('.')[0])) {\n          return `00:0${ time.split('.')[0] }:${ time.split('.')[1] }:00`;\n        }\n\n        return `00:${ time.replace('.', ':') }:00`;\n      }\n\n      // if just int, then it's seconds\n      // s\n      if (isOneDigit(time)) {\n        return `00:00:0${ time }:00`;\n      }\n      \n      return `00:00:${ time }:00`;\n    }\n    // edge case if it's number return a number coz cannot refactor\n    // TODO: might need to refactor and move this elsewhere\n  } else {\n    return time;\n  }\n};\n\nexport default padTimeToTimecode;\n","/**\n * Wrapping around \"time stamps\" and timecode conversion modules\n * To provide more support for variety of formats.\n */\nimport secondsToTimecode from './secondsToTimecode';\nimport timecodeToSecondsHelper from './timecodeToSeconds';\nimport padTimeToTimecode from './padTimeToTimecode';\n\n/**\n * @param {*} time\n * Can take as input timecodes in the following formats\n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds\n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity\n */\nconst timecodeToSeconds = (time) => {\n  if (typeof time === 'string') {\n    const resultPadded = padTimeToTimecode(time);\n    const resultConverted = timecodeToSecondsHelper(resultPadded);\n\n    return resultConverted;\n  }\n\n  // assuming it receive timecode as seconds as string '600'\n  return parseFloat(time);\n};\n\nconst shortTimecode = (time) => {\n  const timecode = secondsToTimecode(time);\n\n  return timecode.slice(0, -3);\n};\n\nexport { secondsToTimecode, timecodeToSeconds, shortTimecode };\n","import React from 'react';\nimport { EditorBlock, Modifier, EditorState, SelectionState } from 'draft-js';\n\nimport SpeakerLabel from './SpeakerLabel';\nimport { shortTimecode } from '../../Util/timecode-converter/';\n\nimport style from './WrapperBlock.module.css';\n\nclass WrapperBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      speaker: '',\n      start: 0,\n      timecodeOffset: this.props.blockProps.timecodeOffset\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log('getDerivedStateFromProps',nextProps.blockProps );\n    if (nextProps.blockProps.timecodeOffset !== null) {\n      return {\n        timecodeOffset: nextProps.blockProps.timecodeOffset\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate ',prevProps, this.state.timecodeOffset);\n    if (prevProps.blockProps.timecodeOffset !== prevState.timecodeOffset) {\n      // this.setState({ timecodeOffset: this.prevProps.blockProps.timecodeOffset });\n      return true; \n    }\n \n  }\n\n  componentDidMount() {\n    const { block } = this.props;\n    const speaker = block.getData().get('speaker');\n\n    const start = block.getData().get('start');\n    \n    this.setState({\n      speaker: speaker,\n      start: start \n    });\n  }\n\n  handleOnClickEdit = () => {\n    const newSpeakerName = prompt('New Speaker Name?');\n    if (newSpeakerName !== '' && newSpeakerName !== null) {\n      this.setState({ speaker: newSpeakerName });\n\n      // From docs: https://draftjs.org/docs/api-reference-selection-state#keys-and-offsets\n      // selection points are tracked as key/offset pairs,\n      // where the key value is the key of the ContentBlock where the point is positioned\n      // and the offset value is the character offset within the block.\n\n      // Get key of the currentBlock\n      const keyForCurrentCurrentBlock = this.props.block.getKey();\n      // create empty selection for current block\n      // https://draftjs.org/docs/api-reference-selection-state#createempty\n      const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n      // move selection to current block\n      const EditorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n      const currentBlockSelectionState = EditorStateWithSelectedCurrentBlock.getSelection();\n      // set new speaker data for block\n      const newBlockDataWithSpeakerName = { speaker: newSpeakerName };\n      // merge data\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const newContentState = Modifier.mergeBlockData(\n        this.props.contentState,\n        currentBlockSelectionState,\n        newBlockDataWithSpeakerName\n      );\n      // cb for saving editorState in TimedTextEditor\n      this.props.blockProps.setEditorNewContentState(newContentState);\n    }\n  }\n\n  handleTimecodeClick = () => {\n    this.props.blockProps.onWordClick(this.state.start);\n  }\n\n  render() {\n    let startTimecode = this.state.start; \n    if ( this.props.blockProps.timecodeOffset) {\n      // console.log(' this.props.blockProps.timecodeOffset: ', this.props.blockProps.timecodeOffset);\n      startTimecode +=  this.props.blockProps.timecodeOffset;\n    }\n    // console.log('startTimecode: ',startTimecode);\n    const speakerElement = <SpeakerLabel\n      name={ this.state.speaker }\n      handleOnClickEdit={ this.handleOnClickEdit }\n    />;\n\n    const timecodeElement =  <span className={ style.time } onClick={ this.handleTimecodeClick }>{shortTimecode(startTimecode)}</span>;\n\n    return (\n      <div className={ style.WrapperBlock }>\n        <div className={ style.markers }>\n          {this.props.blockProps.showSpeakers? speakerElement: ''}\n         \n          {this.props.blockProps.showTimecodes? timecodeElement: ''}\n        </div>\n        <div className={ style.text }>\n          <EditorBlock { ...this.props } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WrapperBlock;\n","/**\n * Helper function to generate draft.js entities,\n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n  let position = 0;\n\n  return words.map((word) => {\n    const result = {\n      start: word.start,\n      end: word.end,\n      confidence: word.confidence,\n      text: word[wordAttributeName],\n      offset: position,\n      length: word[wordAttributeName].length,\n      key: Math.random()\n        .toString(36)\n        .substring(6),\n    };\n    // increase position counter - to determine word offset in paragraph\n    position = position + word[wordAttributeName].length + 1;\n\n    return result;\n  });\n};\n\nexport default generateEntitiesRanges;\n","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        ...\n```\n *\n * into\n *\n ```\n const blocks = [\n  {\n    \"text\": \"There is a day.\",\n    \"type\": \"paragraph\",\n    \"data\": {\n      \"speaker\": \"TBC 0\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        {\n          \"start\": 13.38,\n          \"confidence\": 0.99,\n          \"end\": 13.44,\n          \"word\": \"a\",\n          \"punct\": \"a\",\n          \"index\": 2\n        },\n        {\n          \"start\": 13.44,\n          \"confidence\": 1,\n          \"end\": 13.86,\n          \"word\": \"day\",\n          \"punct\": \"day.\",\n          \"index\": 3\n        }\n      ],\n      \"start\": 13.02\n    },\n    \"entityRanges\": [\n      {\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"confidence\": 0.68,\n        \"text\": \"There\",\n        \"offset\": 0,\n        \"length\": 5,\n        \"key\": \"li6c6ld\"\n      },\n      {\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"confidence\": 0.61,\n        \"text\": \"is\",\n        \"offset\": 6,\n        \"length\": 2,\n        \"key\": \"pcgzkp6\"\n      },\n      {\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"confidence\": 0.99,\n        \"text\": \"a\",\n        \"offset\": 9,\n        \"length\": 1,\n        \"key\": \"ngomd9\"\n      },\n      {\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"confidence\": 1,\n        \"text\": \"day.\",\n        \"offset\": 11,\n        \"length\": 4,\n        \"key\": \"sgmfl4f\"\n      }\n    ]\n  },\n  ...\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach((word) => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = (bbcKaldiJson) => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Convert autoEdit2 Json\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n * See samples folder and test file\n * for reference data structures\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index';\n\n/**\n * groups words list from autoEdit transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words objects from autoEdit transcript\n */\n\nconst groupWordsInParagraphs = (autoEditText) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach((autoEditparagraph) => {\n    autoEditparagraph.paragraph.forEach((autoEditLine) => {\n      autoEditLine.line.forEach((word) => {\n        // adjusting time reference attributes from\n        // `startTime` `endTime` to `start` `end`\n        // for word object\n        const tmpWord = {\n          text: word.text,\n          start: word.startTime,\n          end: word.endTime,\n        };\n        //  if word contains punctuation\n        if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      });\n    });\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = (autoEdit2Json) => {\n  const results = [];\n  const tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words, \n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text'),\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;\n","import bbcKaldiToDraft from './bbc-kaldi/index';\nimport autoEdit2ToDraft from './autoEdit2/index';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\n\n// converts nested arrays into one dimensional array\nconst flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\nconst createEntityMap = (blocks) => {\n  const entityRanges = blocks.map(block => block.entityRanges);\n  // eslint-disable-next-line no-use-before-define\n  const flatEntityRanges = flatten(entityRanges);\n\n  const entityMap = {};\n\n  flatEntityRanges.forEach((data) => {\n    entityMap[data.key] = {\n      type: 'WORD',\n      mutability: 'MUTABLE',\n      data,\n    };\n  });\n\n  return entityMap;\n};\n\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n  let blocks;\n  switch (sttJsonType) {\n  case 'bbckaldi':\n    blocks = bbcKaldiToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'autoedit2':\n    blocks = autoEdit2ToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'draftjs':\n    return transcriptData; // (typeof transcriptData === 'string')? JSON.parse(transcriptData): transcriptData;\n  default:\n    // code block\n    console.error('not recognised the stt enginge');\n  }\n};\n\nexport default sttJsonAdapter;\n","import draftToTxt from './txt/index';\n/**\n * Adapters for Draft.js conversion\n * @param {json} blockData - Draft.js blocks\n * @param {string} exportFormat - the type of file supported by the available adapters\n */\n\nconst exportAdapter = (blockData, exportFormat) => {\n  switch (exportFormat) {\n  case 'draftjs':\n    return { data: JSON.stringify(blockData, null,2), ext: 'json' };\n  case 'txt':\n    return { data: draftToTxt(blockData), ext: 'txt' };\n  default:\n    // code block\n    console.error('Did not recognise the export format');\n  }\n};\n\nexport default exportAdapter;\n","export default (blockData) => {\n  const lines = blockData.blocks.map(x => x.text);\n\n  return lines.join('\\n\\n');\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass VideoPlayer extends React.Component {\n  render() {\n    return (\n      <video\n        id=\"video\"\n        playsInline\n        src={ this.props.mediaUrl }\n        onTimeUpdate={ this.props.onTimeUpdate }\n        type=\"video/mp4\"\n        data-testid=\"media-player-id\"\n        onClick={ this.props.onClick }\n        ref={ this.props.videoRef }\n      />\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n  mediaUrl: PropTypes.string,\n  onTimeUpdate: PropTypes.func,\n  onClick: PropTypes.func,\n  videoRef: PropTypes.object\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Select.module.css';\nclass Select extends React.Component {\n\n  render() {\n    const options = this.props.options.map((option, index) => {\n      // eslint-disable-next-line react/no-array-index-key\n      return <option key={ index } value={ option.value }>{option.label}</option>;\n    });\n    \n    return (\n      <select className={ style.selectPlayerControl }name={ this.props.name } defaultValue={ this.props.currentValue } value={ this.props.currentValue }  onChange={ this.props.handleChange }>\n        {options}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  currentValue: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import VolumeControl from './VolumeControl';\nimport Select from './Select';\nimport style from './PlayerControls.module.css';\n\nclass PlayerControls extends React.Component {\n  // to handle backward and forward mouse pressed on btn\n  // set a 300 ms  interval to repeat the\n  // backward or forward function\n  // on mouseUp the interval is cleared\n  setIntervalHelperBackward = () => {\n    this.interval = setInterval(() => {\n      this.props.skipBackward();\n    }, 300);\n  }\n\n  setIntervalHelperForward = () => {\n    this.interval = setInterval(() => {\n      this.props.skipForward();\n    }, 300);\n  }\n\n  clearIntervalHelper = () => {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className={ style.playerControls }>\n        <button\n          className={ style.playerButton }\n          onClick={ this.props.rollback }>\n          {'↺'}\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperBackward }\n          onMouseUp={ this.clearIntervalHelper }>\n          {'◀◀'}\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onClick={ this.props.playMedia }>\n          {this.props.isPlaying ? '❚❚' : '▶'}\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperForward }\n          onMouseUp={ this.clearIntervalHelper }>\n          {'▶▶'}\n        </button>\n\n        <button\n          className={ style.playBackRate }>\n          x<Select\n            options={ this.props.playbackRateOptions }\n            currentValue={ this.props.playBackRate.toString() }\n            name={ 'playbackRate' }\n            handleChange={ this.props.setPlayBackRate }\n          />\n         \n        </button>\n\n        <div className={ style.timeBox }>\n          <span className={ style.currentTime } \n            onClick={ this.props.promptSetCurrentTime }\n          >{ this.props.currentTime }</span>\n          <span className={ style.separator }>|</span>\n          <span className={ style.duration }>{this.props.duration}</span>\n        </div>\n\n        {/* <VolumeControl\n          handleMuteVolume={ this.props.handleMuteVolume }\n        /> */}\n      </div>\n    );\n  }\n}\n\nPlayerControls.propTypes = {\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.string,\n  timecodeOffset: PropTypes.string,\n  promptSetCurrentTime: PropTypes.func,\n  rollback: PropTypes.func,\n  handleMuteVolume: PropTypes.func,\n  duration: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  skipBackward: PropTypes.func,\n  skipForward: PropTypes.func\n};\n\nexport default PlayerControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './ProgressBar.module.css';\n\nclass ProgressBar extends React.Component {\n\n  render() {\n    return (\n      <div className={ style.progress }>\n        <input\n          type='range'\n          className={ style.bar }\n          onChange={ this.props.buttonClick }\n          value={ this.props.value }\n          min='0'\n          max={ this.props.max }\n        />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.number,\n  buttonClick: PropTypes.func\n};\n\nexport default ProgressBar;\n","function returnHotKeys(self) {\n  return {\n    'esc': {\n      priority: 1,\n      handler: () => { self.togglePlayMedia(); },\n      helperText: 'Play Media',\n    },\n    'ctrl+k': { // combo from mousetrap\n      priority: 1,\n      handler: () => { self.promptSetCurrentTime(); },\n      helperText: 'set current time',\n    },\n    'ctrl+1': {\n      priority: 1,\n      handler: () => { self.skipForward(); console.log('Skip Forward'); },\n      helperText: 'Skip Forward',\n    },\n    'ctrl+2': {\n      priority: 1,\n      handler: () => { self.skipBackward(); console.log('Skip Backward'); },\n      helperText: 'Skip Backward',\n    },\n    'ctrl+3': {\n      priority: 1,\n      handler: () => { self.decreasePlaybackRate(); },\n      helperText: 'Speed Down ',\n    },\n    'ctrl+4': {\n      priority: 1,\n      handler: () => { self.increasePlaybackRate(); },\n      helperText: 'Speed Up',\n    },\n    'ctrl+5': {\n      priority: 1,\n      handler: () => { self.rollBack(); },\n      helperText: 'Roll Back',\n    }\n    // ,'ctrl+/': {\n    //     priority: 1,\n    //     handler: (event) => { console.log('show hide shortcuts');},\n    //     helperText: 'Show/Hide shortcuts'\n    // }\n    // ,'ctrl+s': {\n    //     priority: 1,\n    //     handler: (event) => { console.log('save');},\n    //     helperText: 'Save'\n    // }\n  };\n}\nexport default returnHotKeys;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hotkeys } from 'react-keyboard-shortcuts';\n\nimport VideoPlayer from './VideoPlayer';\nimport PlayerControls from './PlayerControls';\nimport ProgressBar from './ProgressBar';\n\nimport returnHotKeys from './defaultHotKeys';\nimport styles from './index.module.css';\n\nimport { secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/index';\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      playBackRate: 1,\n      rollBackValueInSeconds: this.props.rollBackValueInSeconds,\n      timecodeOffset: this.props.timecodeOffset,\n      hotKeys: returnHotKeys(this),\n      isPlaying: false,\n      playbackRateOptions: [ { value:'0.2',label:'0.2' },\n        { value:'0.25',label:'0.25' },\n        { value:'0.5',label:'0.5' },\n        { value:'0.75',label:'0.75' },\n        { value:'1',label:'1' },\n        { value:'1.25',label:'1.25' },\n        { value:'1.5',label:'1.5' },\n        { value:'1.75',label:'1.75' },\n        { value:'2',label:'2' },\n        { value:'2.5',label:'2.5' },\n        { value:'3',label:'3' },\n        { value:'3.5',label:'3.5' } ]\n    };\n  }\n  /*eslint-disable camelcase */\n  hot_keys = returnHotKeys(this);\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.timecodeOffset !== null) {\n      let newCurrentTimeInSeconds = nextProps.timecodeOffset ;\n      if (typeof newCurrentTimeInSeconds ==='string' \n        && newCurrentTimeInSeconds.includes(':')\n        && !newCurrentTimeInSeconds.includes('NaN')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(nextProps.timecodeOffset );\n      }\n      \n      return {\n        timecodeOffset: newCurrentTimeInSeconds,\n        rollBackValueInSeconds: nextProps.rollBackValueInSeconds\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.timecodeOffset !== this.state.timecodeOffset) {\n      //   this.loadData();\n      // this.setTimeCodeOffset(this.statetimecodeOffset);\n    }\n  }\n\n  componentDidMount() {\n    this.props.hookSeek(this.setCurrentTime);\n    this.props.hookPlayMedia(this.togglePlayMedia);\n    this.props.hookIsPlaying(this.isPlaying);\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (newCurrentTime !== '' && newCurrentTime !== null) {\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime);\n      if (this.videoRef.current !== null) {\n        const videoRef = this.videoRef.current;\n\n        if (videoRef.readyState === 4) {\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          this.playMedia();\n        }\n      }\n    }\n  }\n\n  promptSetCurrentTime = () => {\n    console.log('promptSetCurrentTime');\n    this.setCurrentTime( prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds'));\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet) => {\n    if (newTimeCodeOffSet !== '' && newTimeCodeOffSet !== null) {\n      // use similar helper function from above to convert\n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if (newTimeCodeOffSet.includes(':')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds });\n      }\n    }\n  }\n\n  rollBack = () => {\n    if (this.videoRef.current !== null) {\n      // get video duration\n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video\n      this.setCurrentTime(tmpDesiredCurrentTime);\n    }\n  }\n\n  handleTimeUpdate = (e) => {\n    // eslint-disable-next-line react/prop-types\n    this.props.hookOnTimeUpdate(e.target.currentTime);\n  }\n\n  handlePlayBackRateChange = (e) => {\n    this.setPlayBackRate(e.target.value);\n  }\n\n  getCurrentPlaybackRate = () => {\n    if (this.videoRef.current !== null) {\n      return this.videoRef.current.playbackRate;\n    }\n  }\n\n  setPlayBackRate = (speedValue) => {\n    console.log(speedValue);\n    // value between 0.2 and 3.5\n    if (this.videoRef.current !== null) {\n      if (speedValue >= 0.2 && speedValue <= 3.5) {\n        this.setState({\n          playBackRate: speedValue,\n        }, () => {\n          this.videoRef.current.playbackRate = speedValue;\n        });\n      }\n    }\n  }\n\n  decreasePlaybackRate = () => {\n    const currentPlaybackRate = this.getCurrentPlaybackRate();\n    const playbackRateOption = this.state.playbackRateOptions.find((playbackRateOption) => {\n      return playbackRateOption.value === currentPlaybackRate.toString();\n    });\n    const indexPlaybackRateOption = this.state.playbackRateOptions.indexOf(playbackRateOption);\n    if (currentPlaybackRate > 0.2 && currentPlaybackRate <= 3.5) {\n      const newPlaybackRateValue = this.state.playbackRateOptions[indexPlaybackRateOption-1].value;\n      this.setPlayBackRate(newPlaybackRateValue);\n    }\n  }\n\n  increasePlaybackRate = () => {\n    const currentPlaybackRate = this.getCurrentPlaybackRate();\n    const playbackRateOption = this.state.playbackRateOptions.find((playbackRateOption) => {\n      return playbackRateOption.value === currentPlaybackRate.toString();\n    });\n    const indexPlaybackRateOption = this.state.playbackRateOptions.indexOf(playbackRateOption);\n    if (currentPlaybackRate >= 0.2 && currentPlaybackRate < 3.5) {\n      const newPlaybackRateValue = this.state.playbackRateOptions[indexPlaybackRateOption+1].value;\n      console.log(newPlaybackRateValue);\n      this.setPlayBackRate(newPlaybackRateValue);\n    }\n  }\n\n  handleChangeReplayRollbackValue = (e) => {\n    if (this.videoRef.current !== null) {\n      this.setState({\n        rollBackValueInSeconds: e.target.value,\n      });\n    }\n  }\n\n  handleMuteVolume = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.volume > 0) {\n        this.videoRef.current.volume = 0;\n      } else {\n        this.videoRef.current.volume = 1;\n      }\n    }\n  }\n\n  // TEMP: keeping this in for now. Might be replaced by state\n  // The pauseWhileTyping logic (in TimedTextEditor) currently uses this\n  isPlaying = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.paused) return false;\n\n      return true;\n    }\n  }\n\n  pauseMedia = () => {\n    this.setState({ isPlaying: false }, () => this.videoRef.current.pause());\n  }\n\n  playMedia = () => {\n    this.setState({ isPlaying: true }, () => this.videoRef.current.play());\n  }\n\n  // Sets isPlaying state and toggles modes on the video player\n  // TODO: modularise these / enable specific play / pause action\n  togglePlayMedia = () => {\n    if (this.videoRef.current !== null) {\n      if (this.state.isPlaying) {\n        this.pauseMedia();\n      }\n      else {\n        this.playMedia();\n      }\n    }\n  }\n\n  skipForward = () => {\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime + 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () => {\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime - 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) => {\n    const time = e.target.value;\n    this.setCurrentTime(time);\n  }\n\n  getMediaCurrentTime = () => {\n    if (this.videoRef.current !== null) {\n      return secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n\n  getMediaDuration = () => {\n    if (this.videoRef.current !== null) {\n      return secondsToTimecode(this.videoRef.current.duration + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n\n  render() {\n    const player = <VideoPlayer\n      mediaUrl={ this.props.mediaUrl }\n      onTimeUpdate= { this.handleTimeUpdate }\n      onClick= { this.togglePlayMedia.bind(this) }\n      videoRef={ this.videoRef }\n    />;\n\n    const playerControlsSection = (\n      <div className={ styles.controlsSection }>\n        <div className={ styles.titleBox }>\n          <h1 className={ styles.title }>{ this.props.mediaUrl }</h1>\n        </div>\n        <PlayerControls\n          playMedia={ this.togglePlayMedia.bind(this) }\n          isPlaying={ this.state.isPlaying }\n          playBackRate={ this.state.playBackRate }\n          skipBackward={ this.skipBackward.bind(this) }\n          skipForward={ this.skipForward.bind(this) }\n          rollback={ this.rollBack }\n          currentTime={ this.getMediaCurrentTime() }\n          duration={ this.getMediaDuration() }\n          onSetCurrentTime={ '' }\n          onSetTimecodeOffset={ '' }\n          promptSetCurrentTime={ this.promptSetCurrentTime.bind(this) }\n          setTimeCodeOffset={ this.setTimeCodeOffset.bind(this) }\n          timecodeOffset={ secondsToTimecode(this.state.timecodeOffset) }\n          handleMuteVolume={ this.handleMuteVolume.bind(this) }\n          setPlayBackRate={ this.handlePlayBackRateChange.bind(this) }\n          playbackRateOptions={ this.state.playbackRateOptions }\n        />\n      </div>\n    );\n\n    const progressBar = <ProgressBar\n      max={ this.videoRef.current !== null ? parseInt(this.videoRef.current.duration) : 100 }\n      value={ this.videoRef.current !== null ? parseInt(this.videoRef.current.currentTime) : 0 }\n      buttonClick={ this.handleProgressBarClick.bind(this) }\n    />;\n\n    return (\n      <section className={ styles.topSection }>\n        <div className={ styles.playerSection }>\n          { this.props.mediaUrl !== null ? player : null }\n          { this.props.mediaUrl !== null ? playerControlsSection : null }\n        </div>\n        { this.props.mediaUrl !== null ? progressBar : null }\n      </section>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  hookSeek: PropTypes.func,\n  hookPlayMedia: PropTypes.func,\n  hookIsPlaying: PropTypes.func,\n  mediaUrl: PropTypes.string,\n  hookOnTimeUpdate: PropTypes.func,\n};\n\nexport default hotkeys(MediaPlayer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './index.module.css';\nimport style from '../index.module.css';\nclass Toggle extends React.Component {\n\n  render() {\n    return (\n      <div className={  style.settingElement  }>\n        <label className={ styles.switch }>\n          <input type=\"checkbox\"\n            defaultChecked={ this.props.defaultValue }\n            onChange={ this.props.handleToggle }\n          />\n          <span className={ styles.slider }></span>\n        </label>\n        {/* <label className={ styles.label }>{this.props.label}</label> */}\n      </div>\n    );\n  }\n}\n\nToggle.propTypes = {\n  handleToggle: PropTypes.func,\n  label: PropTypes.string\n};\n\nexport default Toggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import styles from '../index.module.css';\nimport { timecodeToSeconds, secondsToTimecode } from '../../../Util/timecode-converter/index';\n\nclass TimecodeOffset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timecodeOffset: secondsToTimecode(this.props.timecodeOffset)\n    };\n  }\n    handleChange = (e) => {\n      console.log( e.target.value);\n     \n      this.setState({\n        timecodeOffset: e.target.value\n      });\n    }\n\n    resetTimecodeOffset = () => {\n      const resetTimecodeOffsetValue = 0;\n      this.setState({\n        timecodeOffset: secondsToTimecode(resetTimecodeOffsetValue)\n      },() => {\n        this.props.handleSetTimecodeOffset(resetTimecodeOffsetValue);\n      });\n    }\n\n    setTimecodeOffset = () => {\n      console.log(this.state.timecodeOffset);\n      let newCurrentTimeInSeconds = this.state.timecodeOffset;\n      if (typeof newCurrentTimeInSeconds ==='string' \n      && newCurrentTimeInSeconds.includes(':')\n      && !newCurrentTimeInSeconds.includes('NaN')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTimeInSeconds );\n      }\n      this.props.handleSetTimecodeOffset(newCurrentTimeInSeconds);\n    }\n\n    render() {\n      return (\n        <div >\n          <label>Timecode Offset ℹ </label>\n          <input \n            type=\"text\" \n            value={ this.state.timecodeOffset } \n            onChange={ this.handleChange }\n            name=\"lname\"/>\n          <small onClick={ this.resetTimecodeOffset }><u>Reset</u></small> | \n          <small onClick={ this.setTimecodeOffset }><u>Save</u></small>\n        </div>\n      );\n    }\n}\n\nTimecodeOffset.propTypes = {\n  handleSetTimecodeOffset: PropTypes.func,\n  onChange: PropTypes.func\n};\n\nexport default TimecodeOffset;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport Toggle from './Toggle/index.js';\nimport style from './index.module.css';\nimport TimecodeOffset from './TimecodeOffset/index.js';\n\nclass Settings extends React.Component {\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return (\n      <div>\n        <span>Settings Panel</span>\n        <div className={ style.controlsContainer }>\n          <section className={ style.settingElement }>\n            <label>Pause While Typing</label>\n            <Toggle \n              defaultValue={ this.props.defaultValuePauseWhileTyping }\n              label={ 'Pause while typing' } \n              handleToggle={ this.props.handlePauseWhileTyping }\n            />\n          </section>\n          <section className={ style.settingElement }>\n            <label> Scroll Sync</label>\n            <Toggle \n              defaultValue={ this.props.defaultvalueScrollSync }\n              label={ 'ScrollSync' } \n              handleToggle={ this.props.handleIsScrollIntoViewChange }\n            />\n          </section>\n          <section className={ style.settingElement }>\n            <label>RollBack Interval, seconds</label>\n            <input \n              type=\"text\" \n              value={ this.props.defaultRollBackValueInSeconds } \n              onChange={ this.props.handleRollBackValueInSeconds }\n              name=\"lname\"/>\n            {/* <input type=\"range\" value=\"15\" min=\"1\" max=\"60\" step=\"1\"/> */}\n          </section>\n          <section className={ style.settingElement }>\n            <label>Hide Timecodes</label>\n            <Toggle \n              defaultValue={ this.props.showTimecodes }\n              label={ 'Hide Timecodes' } \n              handleToggle={ this.props.handleShowTimecodes }\n            />\n          </section>\n          <section className={ style.settingElement }>\n            <label>Hide Speaker Labels</label>\n            <Toggle \n              defaultValue={ this.props.showSpeakers }\n              label={ 'Hide Speaker Labels' } \n              handleToggle={ this.props.handleShowSpeakers }\n            />\n          </section>\n          <TimecodeOffset \n            timecodeOffset={ this.props.timecodeOffset }\n            handleSetTimecodeOffset={ this.props.handleSetTimecodeOffset }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {};\n\nexport default Settings;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\n// import Toggle from './Toggle/index.js';\nimport style from './index.module.css';\n// import TimecodeOffset from './TimecodeOffset/index.js';\n\nimport returnHotKeys from '../MediaPlayer/defaultHotKeys';\n\nclass KeyboardShortcutHelp extends React.Component {\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const hotKeys = returnHotKeys(this);\n    const hotKeysCheatsheet = Object.keys(hotKeys).map((key,index ) => { \n    \tconst value = hotKeys[key];\n\n      return <li key={ index } className={ style.settingElement }><mark><code>{key}</code></mark> {value.helperText}</li>;\n    });\n    \n    return (\n      <div>\n        <span>ℹ Keyboard Shortcuts Help</span>\n        <br/>\n        <ul style={ { listStyle: 'none' } }>\n          {hotKeysCheatsheet}\n        </ul>\n      </div>\n    );\n  }\n}\n\nKeyboardShortcutHelp.propTypes = {};\n\nexport default KeyboardShortcutHelp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TimedTextEditor from './TimedTextEditor';\nimport MediaPlayer from './MediaPlayer';\nimport Settings from './Settings';\nimport KeyboardShortcutHelp from './KeyboardShortcutHelp';\nimport style from './index.module.css';\nimport styleSettings from './Settings/index.module.css';\nimport KeyboardShortcutHelpSettings from './KeyboardShortcutHelp/index.module.css';\n// import { timecodeToSeconds } from '../Util/timecode-converter/index';\n\nclass TranscriptEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTime: 0,\n      lastLocalSavedTime: '',\n      transcriptData: null,\n      isScrollIntoViewOn: false,\n      showSettings: false,\n      showKeyboardShortcutsHelp: false,\n      isPauseWhileTypingOn: true,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0,\n      showTimecodes: true,\n      showSpeakers: true\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.transcriptData !== this.state.transcriptData) {\n      //   this.loadData();\n      if (this.refs.timedTextEditor.isPresentInLocalStorage(this.props.mediaUrl)) {\n        console.log('was already present in local storage');\n        this.refs.timedTextEditor.loadLocalSavedData(this.props.mediaUrl);\n      } else {\n        console.log('not present in local storage');\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleWordClick = (startTime) => {\n    this.setCurrentTime(startTime);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleTimeUpdate = (currentTime) => {\n    this.setState({\n      currentTime,\n    });\n  }\n\n  handlePlayMedia = (bool) => {\n    this.playMedia(bool);\n  }\n\n  handleIsPlaying = () => {\n    return this.isPlaying();\n  }\n\n  handleIsScrollIntoViewChange = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isScrollIntoViewOn: isChecked });\n  }\n  handlePauseWhileTyping = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isPauseWhileTypingOn: isChecked });\n  }\n\n  handleRollBackValueInSeconds = (e) => {\n    const rollBackValue = e.target.value;\n    console.log(rollBackValue);\n    this.setState({ rollBackValueInSeconds: rollBackValue });\n  }\n\n  handleSetTimecodeOffset = (timecodeOffset) => {\n    console.log('TranscriptEditor',timecodeOffset );\n    \n    this.setState({ timecodeOffset: timecodeOffset },\n      () => {\n        // eslint-disable-next-line react/no-string-refs\n        this.refs.timedTextEditor.forceUpdate();\n      });\n    // this.refs.MediaPlayer.setTimeCodeOffset('01:00:00:00');\n  }\n\n  handleShowTimecodes = (e) => {\n    console.log(e);\n    const isChecked = e.target.checked;\n    this.setState({ showTimecodes: isChecked },() => {\n      // eslint-disable-next-line react/no-string-refs\n      // this.refs.timedTextEditor.forceUpdate();\n    });\n  }\n\n  handleShowSpeakers = (e) => {\n    console.log(e);\n    const isChecked = e.target.checked;\n    this.setState({ showSpeakers: isChecked },() => {\n      // eslint-disable-next-line react/no-string-refs\n      // this.refs.timedTextEditor.forceUpdate();\n    });\n  }\n\n  getEditorContent = (exportFormat) => {\n    // eslint-disable-next-line react/no-string-refs\n    // return this.refs.timedTextEditor.getEditorContent(exportFormat);\n  }\n\n  handleSettingsToggle = () => {\n    this.setState(prevState => ({\n      showSettings: !prevState.showSettings\n    }));\n  }\n\n  handleKeyboardShortcutsHelpToggle = () => {\n    this.setState(prevState => ({\n      showKeyboardShortcutsHelp: !prevState.showKeyboardShortcutsHelp\n    }));\n  }\n\n  render() {\n    const mediaPlayer = <MediaPlayer\n      ref={ 'MediaPlayer' }\n      // eslint-disable-next-line no-return-assign\n      rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      hookSeek={ foo => this.setCurrentTime = foo }\n      hookPlayMedia={ foo => this.playMedia = foo }\n      hookIsPlaying={ foo => this.isPlaying = foo }\n      hookOnTimeUpdate={ this.handleTimeUpdate }\n      mediaUrl={ this.props.mediaUrl }\n    />;\n    const settings = <div className={ styleSettings.settings }>\n      <span  onClick={ this.handleSettingsToggle }>X</span>\n      <Settings \n        defaultValuePauseWhileTyping={ this.state.isPauseWhileTypingOn }\n        defaultvalueScrollSync={ this.state.isScrollIntoViewOn }\n        defaultRollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n        timecodeOffset={ this.state.timecodeOffset }\n        showTimecodes={ this.state.showTimecodes }\n        showSpeakers={ this.state.showSpeakers }\n        handlePauseWhileTyping={ this.handlePauseWhileTyping }\n        handleIsScrollIntoViewChange={ this.handleIsScrollIntoViewChange }\n        handleRollBackValueInSeconds={ this.handleRollBackValueInSeconds }\n        handleSetTimecodeOffset={ this.handleSetTimecodeOffset }\n        handleShowTimecodes={ this.handleShowTimecodes }\n        handleShowSpeakers={ this.handleShowSpeakers }\n      /> \n    </div>;\n\n    const KeyboardShortcutHelpElement = <div className={ KeyboardShortcutHelpSettings.settings }>\n      <span  onClick={ this.handleKeyboardShortcutsHelpToggle }>X</span>\n      <KeyboardShortcutHelp />\n    </div>;\n    \n    return (\n      <div className={ style.container }>\n        <aside className={ style.aside }>\n          { this.props.mediaUrl ? mediaPlayer : null }\n        </aside>\n\n        <button className={ style.settingsButton } onClick={ this.handleSettingsToggle }> ⚙ </button>\n        { this.state.showSettings? settings : null }\n        <button className={ style.settingsButton } onClick={ this.handleKeyboardShortcutsHelpToggle }> ℹ </button>\n        { this.state.showKeyboardShortcutsHelp? KeyboardShortcutHelpElement : null }\n\n        <main className={ style.main }>\n          <TimedTextEditor\n            transcriptData={ this.state.transcriptData }\n            timecodeOffset={ this.state.timecodeOffset }\n            onWordClick={ this.handleWordClick }\n            playMedia={ this.handlePlayMedia }\n            isPlaying={ this.handleIsPlaying }\n            currentTime={ this.state.currentTime }\n            isEditable={ this.props.isEditable }\n            sttJsonType={ this.props.sttJsonType }\n            ref={ 'timedTextEditor' }\n            mediaUrl={ this.props.mediaUrl }\n            isScrollIntoViewOn={ this.state.isScrollIntoViewOn }\n            isPauseWhileTypingOn={ this.state.isPauseWhileTypingOn }\n            showTimecodes={ this.state.showTimecodes }\n            showSpeakers={ this.state.showSpeakers }\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  sttJsonType: PropTypes.string,\n};\n\nexport default TranscriptEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SttTypeSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"bbckaldi\">BBC Kaldi</option>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n  <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n  <option value=\"iiif\" disabled>IIIF</option>\n  <option value=\"autoedit2\">autoEdit 2</option>\n  <option value=\"ibm\" disabled>IBM Watson STT</option>\n  <option value=\"speechmatics\" disabled>Speechmatics</option>\n  <option value=\"assemblyai\" disabled>AssemblyAI</option>\n  <option value=\"rev\" disabled>Rev</option>\n  <option value=\"srt\" disabled>Srt</option>\n  <option value=\"vtt\" disabled>VTT</option>\n  <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n</select>);\n\nSttTypeSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default SttTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExportFormatSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"txt\">Text file</option>\n  <option value=\"html\" disabled>HTML</option>\n  <option value=\"word\" disabled>MS Word</option>\n</select>);\n\nExportFormatSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default ExportFormatSelect;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { TranscriptEditor } from './lib';\n\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport style from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type';\nimport ExportFormatSelect from './select-export-format';\n\nconst tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi',\n    };\n    // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n  }\n\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl,\n      sttType: 'bbckaldi',\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[0];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      const fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL,\n      });\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL,\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const self = this;\n    const file = files[0];\n    // let type = file.type;\n    // TODO: add checks\n    // let transcriptJsonContent = FileReader.readAsText(file)\n    const fr = new FileReader();\n    fr.onload = function (e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result));\n      self.setState({\n        transcriptData: JSON.parse(e.target.result),\n        // mediaUrl: tedTalkVideoUrl\n      });\n    };\n    fr.readAsText(file);\n  }\n\n  handleIsTextEditable = () => {\n    this.setState((prevState) => ({ isTextEditable: (prevState.isTextEditable) !== true }));\n  }\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleExportFormatChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  exportTranscript = () => {\n    // eslint-disable-next-line react/no-string-refs\n    const { data, ext } = this.refs.transcriptEditor.getEditorContent(this.state.exportFormat);\n    this.download(data, `${ this.state.mediaUrl }.${ ext }`);\n  }\n\n  // https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\n   download = (content, filename, contentType) => {\n     const type = contentType || 'application/octet-stream';\n     const a = document.createElement('a');\n     const blob = new Blob([ content ], { type: type });\n\n     a.href = window.URL.createObjectURL(blob);\n     a.download = filename;\n     a.click();\n   }\n\n   clearLocalStorage = () => {\n     localStorage.clear();\n     console.info('cleared local storage');\n   }\n\n   render() {\n     return (\n       <div className={ style.container }>\n         <span className={ style.title }>\n            Demo page for <mark>React Transcript Editor</mark> - Component |{' '}\n           <a\n             href=\"https://github.com/bbc/react-transcript-editor\"\n             rel=\"noopener noreferrer\"\n             target=\"_blank\"\n           >\n            Github Repo\n           </a>\n         </span>\n         <br />\n         <button onClick={ () => this.loadDemo() }>load demo</button>\n         <hr />\n         <label>open Transcript Json</label>\n         <SttTypeSelect\n           name={ 'sttType' }\n           value={ this.state.sttType }\n           handleChange={ this.handleSttTypeChange }\n         />\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n         />\n\n         <br />\n         <label>Load Local Media</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n         />\n         or \n         <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n         </button>\n\n         <br />\n         <label>Export transcript</label>\n         <button onClick={ () => this.exportTranscript() }>Export file</button>\n\n         <ExportFormatSelect\n           name={ 'exportFormat' }\n           value={ this.state.exportFormat }\n           handleChange={ this.handleExportFormatChange }\n         />\n         <br />\n         <label>Text Is Editable</label>\n         <label className={ style.switch }>\n           <input type=\"checkbox\"\n             defaultChecked=\"true\"\n             onChange={ this.handleIsTextEditable }\n           />\n           <span className={ style.slider }></span>\n         </label>\n         <br />\n         <button onClick={ () => this.clearLocalStorage() }>Clear Local Storage</button>\n         <hr/>\n\n         <TranscriptEditor\n           transcriptData={ this.state.transcriptData }\n           mediaUrl={ this.state.mediaUrl }\n           isEditable={ this.state.isTextEditable }\n           sttJsonType={ this.state.sttType }\n           // eslint-disable-next-line react/no-string-refs\n           ref={ 'transcriptEditor' }\n         />\n       </div>\n     );\n   }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"color-light-grey\":\"#767676\",\"color-mid-grey\":\"#696969\",\"color-dark-grey\":\"#4a4a4a\",\"WrapperBlock\":\"WrapperBlock_WrapperBlock__KRhEE\",\"markers\":\"WrapperBlock_markers__oOsnW\",\"text\":\"WrapperBlock_text__1lDVY\",\"speaker\":\"WrapperBlock_speaker__3Jk4j\",\"time\":\"WrapperBlock_time__3Eatw\",\"EditLabel\":\"WrapperBlock_EditLabel__3cJzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"topSection\":\"MediaPlayer_topSection__1gJAM\",\"playerSection\":\"MediaPlayer_playerSection__y0g8M\",\"controlsSection\":\"MediaPlayer_controlsSection__wk446\",\"titleBox\":\"MediaPlayer_titleBox__2Hfgg\",\"title\":\"MediaPlayer_title__h7Ojg\",\"helpText\":\"MediaPlayer_helpText__2cZmN\",\"hideInMobile\":\"MediaPlayer_hideInMobile__GbrMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"container\":\"TranscriptEditor_container__28OEI\",\"main\":\"TranscriptEditor_main__2aOzn\",\"aside\":\"TranscriptEditor_aside__1f7EK\",\"settingsButton\":\"TranscriptEditor_settingsButton__2_TCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"KeyboardShortcutHelp_settings__a0pAo\",\"controlsContainer\":\"KeyboardShortcutHelp_controlsContainer__2tm8g\",\"settingElement\":\"KeyboardShortcutHelp_settingElement__3lsM3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"bar\":\"ProgressBar_bar__xe2el\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"Toggle_switchContainer__2oMzU\",\"label\":\"Toggle_label__ewLfb\",\"switch\":\"Toggle_switch__39TJz\",\"slider\":\"Toggle_slider__1Lgir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DraftEditor-root\":\"TimedTextEditor_DraftEditor-root__28YV4\",\"editor\":\"TimedTextEditor_editor__2M5RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPlayerControl\":\"Select_selectPlayerControl__H_co4\"};"],"sourceRoot":""}