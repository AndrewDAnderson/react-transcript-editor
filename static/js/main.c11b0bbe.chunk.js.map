{"version":3,"sources":["lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/adapters/generate-entities-ranges/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/bbc-kaldi/index.js","lib/TranscriptEditor/ProgressBar/index.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/index.js","index.js","lib/TranscriptEditor/index.module.css","index.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css"],"names":["mutability","Word","data","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","start","data-entity-key","key","className","children","PureComponent","generateEntitiesRanges","words","position","map","word","result","end","confidence","text","punct","offset","length","Math","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","test","push","groupWordsInParagraphs","undefined","retval","draftJsContentBlockParagraph","join","type","speaker","entityRanges","TimedTextEditor","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDoubleClick","event","element","nativeEvent","target","hasAttribute","parentElement","t","parseFloat","getAttribute","onWordClick","state","editorState","EditorState","createEmpty","transcriptData","onChange","setState","loadData","prevProps","prevState","blocks","block","flatEntityRanges","flatten","entityMap","convertFromRaw","createWithContent","decorator","_this2","styles","editor","onDoubleClick","Draft","stripPastedStyles","nextProps","React","Component","list","reduce","b","concat","Array","isArray","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","component","ProgressBar","MediaPlayer","setCurrentTime","newCurrentTime","videoRef","current","readyState","currentTime","play","handleTimeUpdate","e","hookOnTimeUpdate","createRef","hookSeek","mediaPlayer","mediaUrl","id","playsInline","controls","src","onTimeUpdate","data-testid","ref","videoSection","TranscriptEditor","handleWordClick","startTime","container","header","TranscriptEditor_ProgressBar","nav","TranscriptEditor_MediaPlayer","foo","main","TranscriptEditor_TimedTextEditor","footer","App","kaldiTedTalkTranscript","files","console","log","file","document","canPlayType","fileURL","URL","createObjectURL","prompt","self","fr","FileReader","onload","JSON","parse","readAsText","title","href","rel","onClick","loadDemo","handleChangeLoadTranscriptJson","handleChangeLoadMedia","handleChangeLoadMediaUrl","lib_TranscriptEditor","render","src_App","getElementById","module","exports","aside"],"mappings":"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","file":"static/js/main.c11b0bbe.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  // Draft,\n  Editor,\n  EditorState,\n  // ContentState,\n  CompositeDecorator,\n  convertFromRaw\n} from 'draft-js';\n\nimport Word from './Word';\nimport bbcKaldiToDraft from './adapters/bbc-kaldi/index.js';\n\nimport styles from './index.module.css';\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData\n    };\n\n    this.onChange = editorState => this.setState({ editorState });\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState){\n    if(nextProps.transcriptData !== null){\n      return {\n        transcriptData: nextProps.transcriptData\n      }\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.transcriptData !== this.state.transcriptData){\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = bbcKaldiToDraft(this.props.transcriptData);\n      const entityRanges = blocks.map(block => block.entityRanges);\n      // eslint-disable-next-line no-use-before-define\n      const flatEntityRanges = flatten(entityRanges);\n      \n      const entityMap = {};\n\n      flatEntityRanges.forEach((data) => {\n        entityMap[ data.key ] = {\n            type: 'WORD',\n            mutability: 'MUTABLE',\n            data\n          }\n      });\n     \n      const contentState = convertFromRaw({ blocks, entityMap });\n\n      // eslint-disable-next-line no-use-before-define\n      const editorState = EditorState.createWithContent(contentState, decorator);\n\n      this.setState({ editorState });\n    }\n  }\n\n  // click on words - for navigation \n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event)=> {\n    // nativeEvent --> React giving you the DOM event \n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      //TODO: prop to jump to video <-- To connect with MediaPlayer\n      // this.props.seek(t);\n      this.props.onWordClick(t);\n      // TODO: pass current time of media to TimedTextEditor to know what text to highlight in this component  \n    }\n  }\n\n  render() {\n    return (\n        <section\n        className={ styles.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }\n        // onClick={ event => this.handleOnClick(event) }\n        >\n            <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n        />\n            {/* <button onClick={() => this.loadData()}>load data</button> */}\n        </section>\n    );\n  }\n}\n\n// converts nested arrays into one dimensional array \nconst flatten = list =>\n  list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\n// DraftJs decorator to recognize which entity is which \n// and know what to apply to what component \nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges(character => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs \n// defines what to use to render the entity \nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word\n  }\n]);\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\n\nclass Word extends PureComponent {\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n        <span data-start={ data.start } data-entity-key={ data.key } className=\"Word\">\n            {this.props.children}\n        </span>\n    );\n  }\n}\n\nexport default Word;\n","/**\n * Helper function to generate draft.js entities, \n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\nconst generateEntitiesRanges = (words) => {\n    let position = 0;\n    return words.map((word) => {\n         const result =  {\n          start: word.start,\n          end: word.end,\n          confidence: word.confidence,\n          text: word.punct,\n          offset: position,\n          length: word.punct.length,\n          key: Math.random()\n            .toString(36)\n            .substring(6)\n          }\n          // increase position counter - to determine word offset in paragraph\n          position = position + word.punct.length + 1;\n\n          return result;\n      })\n} \n\nexport default generateEntitiesRanges;","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n```\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = words => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach(word => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = bbcKaldiJson => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach(paragraph => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: 'TBC'\n      },\n      // the entities as ranges are each word in the space-joined text, \n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words)\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","import React from 'react';\n\nclass ProgressBar extends React.Component {\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return <h3>ProgressBar</h3>;\n  }\n}\n\nexport default ProgressBar;\n","import React from 'react';\nimport styles from './index.module.css';\n\n// inspired by https://github.com/bbc/nm2/blob/master/src/components/chapter/video/Video.jsx\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount(){\n    this.props.hookSeek(this.setCurrentTime)\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (this.videoRef.current  !== null) {\n      const videoRef = this.videoRef.current;\n      // videoRef.load();\n      if ( videoRef.readyState === 4 ) {\n        // it's loaded\n        videoRef.currentTime = newCurrentTime;\n        videoRef.play();\n      }\n      \n    }\n  }\n\n  handleTimeUpdate = (e)=>{\n    // eslint-disable-next-line react/prop-types\n    this.props.hookOnTimeUpdate(e.target.currentTime)\n  }\n\n  render() {\n    // conditional, if media player not defined then don't show\n    let mediaPlayer;\n    if (this.props.mediaUrl !== null) {\n      mediaPlayer = (\n          <video\n          id=\"video\"\n          playsInline\n          // autoPlay\n          controls\n          src={ this.props.mediaUrl }\n          onTimeUpdate={ this.handleTimeUpdate }\n          // TODO: video type\n          type=\"video/mp4\"\n          data-testid=\"media-player-id\"\n          ref={ this.videoRef }\n        />\n      );\n    }\n\n    return <section className={ styles.videoSection }>{mediaPlayer}</section>;\n  }\n}\n\nexport default MediaPlayer;\n","import React from 'react';\nimport styles from './index.module.css';\n\nimport TimedTextEditor from './TimedTextEditor/index.js';\nimport ProgressBar from './ProgressBar/index.js';\nimport MediaPlayer from './MediaPlayer/index.js';\n\nclass TranscriptEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n           currentTime:0\n        }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    handleWordClick = (startTime) => {\n        this.setCurrentTime(startTime);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    handleTimeUpdate = (currentTime) => {\n            this.setState({\n                currentTime: currentTime\n            })\n    }\n\n    render() {\n        return (\n            <section className={ styles.container }>\n                <header className={ styles.header }>\n                    <ProgressBar \n                    />\n                </header>\n                <nav className={ styles.nav }>\n                    <MediaPlayer \n                    hookSeek={ (foo) => this.setCurrentTime = foo }\n                    hookOnTimeUpdate={ this.handleTimeUpdate }\n                    mediaUrl={ this.props.mediaUrl } \n                    />\n                </nav>\n                <main className={ styles.main }>\n                    <TimedTextEditor \n                    transcriptData={ this.props.transcriptData } \n                    onWordClick={ this.handleWordClick }\n                    currentTime={ this.state.currentTime } \n                    />\n                </main>\n                {/* <aside className={ styles.aside }>Settings</aside> */}\n                <footer className={ styles.footer }></footer>\n            </section>\n        );\n    }\n}\n\nexport default TranscriptEditor;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { TranscriptEditor } from './lib';\n// import kaldiTranscript from './sample-data/kaldi-transcription-20181029235300.json';\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport styles from './index.module.css';\n\nconst tedTalkVideoUrl =\n  'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null\n    };\n    // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n  }\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[ 0 ];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      var fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL\n      });\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const self = this;\n    const file = files[ 0 ];\n    // let type = file.type;\n    // TODO: add checks\n    // let transcriptJsonContent = FileReader.readAsText(file)\n    var fr = new FileReader();\n    fr.onload = function(e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result));\n      self.setState({\n        transcriptData: JSON.parse(e.target.result)\n        // mediaUrl: tedTalkVideoUrl\n      });\n    };\n    fr.readAsText(file);\n  }\n\n  render() {\n    return (\n        <div className={ styles.container }>\n            <span className={ styles.title }>\n          Demo page for React Transcript Editor - Component |{' '}\n                <a\n            href=\"https://github.com/bbc/react-transcript-editor\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Github Repo\n                </a>\n            </span>\n            <br />\n            <button onClick={ () => this.loadDemo() }>load demo</button>\n            <br />\n            <label>open Transcript Json</label>\n            <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n        />\n            <br />\n            <label>Load Local Media</label>\n            <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n        />\n            <br />\n            <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n            </button>\n\n            <TranscriptEditor\n          transcriptData={ this.state.transcriptData }\n          mediaUrl={ this.state.mediaUrl }\n        />\n        </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TranscriptEditor_container__28OEI\",\"nav\":\"TranscriptEditor_nav__173Ja\",\"header\":\"TranscriptEditor_header__3t9qT\",\"main\":\"TranscriptEditor_main__2aOzn\",\"aside\":\"TranscriptEditor_aside__1f7EK\",\"footer\":\"TranscriptEditor_footer__1EQwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\",\"title\":\"src_title__1Il-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"TimedTextEditor_editor__2M5RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoSection\":\"MediaPlayer_videoSection__23OWQ\"};"],"sourceRoot":""}