{"version":3,"sources":["lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/adapters/generate-entities-ranges/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/bbc-kaldi/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/autoEdit2/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/index.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/TranscriptEditor/MediaPlayer/PlaybackRate.js","lib/TranscriptEditor/MediaPlayer/RollBack.js","lib/TranscriptEditor/MediaPlayer/ProgressBar.js","lib/TranscriptEditor/MediaPlayer/PlayerControls.js","lib/TranscriptEditor/MediaPlayer/VolumeControl.js","lib/TranscriptEditor/MediaPlayer/PauseWhileTyping.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/padTimeToTimecode.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/index.js","select-stt-json-type.js","index.js","lib/TranscriptEditor/MediaPlayer/VolumeControl.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","index.module.css","lib/TranscriptEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/PlaybackRate.module.css","lib/TranscriptEditor/MediaPlayer/RollBack.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/ProgressBar.module.css"],"names":["mutability","Word","data","this","props","entityKey","contentState","getEntity","getData","confidence","prevTimes","i","start","concat","Math","floor","react_default","a","createElement","data-start","data-end","end","data-confidence","data-prev-times","data-entity-key","key","className","children","PureComponent","generateEntitiesRanges","words","wordAttributeName","position","map","word","result","text","offset","length","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","test","punct","push","groupWordsInParagraphs","undefined","retval","draftJsContentBlockParagraph","join","type","speaker","entityRanges","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","endTime","createEntityMap","blocks","flatEntityRanges","flatten","list","reduce","b","Array","isArray","block","entityMap","sttJsonAdapter","transcriptData","sttJsonType","console","error","TimedTextEditor","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","editorState","state","getCurrentContent","isPlaying","playMedia","clearTimeout","plauseWhileTypingTimeOut","setTimeout","bind","assertThisInitialized","isEditable","setState","prevState","inputCount","localSave","mediaUrl","handleDoubleClick","event","element","nativeEvent","target","hasAttribute","parentElement","t","parseFloat","getAttribute","onWordClick","convertToRaw","localStorage","setItem","JSON","stringify","newLastLocalSavedDate","Date","setEditorContentState","convertFromRaw","EditorState","createWithContent","decorator","getEditorContent","sttType","getLatestUnplayedWord","latest","find","w","currentTime","getCurrentWord","currentWord","createEmpty","loadData","prevProps","getItem","parse","lastLocalSavedDate","_this2","time","round","styles","editor","onDoubleClick","scoped","Draft","stripPastedStyles","nextProps","React","Component","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","component","returnHotKeys","self","esc","priority","handler","helperText","ctrl+k","promptSetCurrentTime","ctrl+1","skipForward","log","ctrl+2","skipBackward","ctrl+3","decreasePlaybackRate","ctrl+4","increasePlaybackRate","ctrl+5","rollBack","PlaybackRate","helpText","playbackRateValue","playBackRate","min","value","max","step","handlePlayBackRateChange","onClick","setPlayBackRate","RollBack","rollBackValue","rollBackValueInSeconds","handleChangeReplayRollbackValue","ProgressBar","progressBar","e","buttonClick","PlayerControls","setIntervalHelperBackward","interval","setInterval","setIntervalHelperForward","clearIntervalHelper","clearInterval","setTimecodeOffSetHelper","setTimeCodeOffset","prompt","onMouseDown","onMouseUp","duration","timecodeOffset","VolumeControl","switch","defaultChecked","handleMuteVolume","slider","PauseWhileTyping","isPausedWhileTyping","handleToggle","secondsToTimecode","seconds","framePerSeconds","fps","normalisedSeconds","Number","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","isOneDigit","str","padTimeToTimecode","timecode","includes","includesFullStop","replace","timecodeToSeconds","resultPadded","MediaPlayer","hot_keys","setCurrentTime","newCurrentTime","newCurrentTimeInSeconds","videoRef","current","readyState","play","newTimeCodeOffSet","tmpDesiredCurrentTime","handleTimeUpdate","hookOnTimeUpdate","newPlaybackRate","getCurrentPlaybackRate","playbackRate","speedValue","volume","handleTogglePauseWhileTyping","paused","playPauseBool","pause","handleProgressBarClick","lengthOfBar","offsetWidth","positionPercentage","clientX","offsetLeft","totalTime","roundNewCurrentTime","getMediaCurrentTime","getMediaDuration","createRef","hotKeys","hookSeek","hookPlayMedia","hookIsPlaying","mediaPlayerEl","playerControlsSection","id","playsInline","src","onTimeUpdate","data-testid","ref","MediaPlayer_ProgressBar","MediaPlayer_PlayerControls","onSetCurrentTime","onSetTimecodeOffset","MediaPlayer_VolumeControl","MediaPlayer_PauseWhileTyping","MediaPlayer_PlaybackRate","MediaPlayer_RollBack","keyboardShortcuts","keyboardShortcutsElements","keys","shortcutKey","index","hideInMobile","videoSection","hotkeys","TranscriptEditor","handleWordClick","handlePlayMedia","bool","handleIsPlaying","refs","timedTextEditor","lastLocalSavedTime","isPresentInLocalStorage","loadLocalSavedData","container","aside","TranscriptEditor_MediaPlayer","foo","main","TranscriptEditor_TimedTextEditor","SttTypeSelect","name","handleChange","disabled","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","tmpEditorsContnet","transcriptEditor","download","content","filename","contentType","document","blob","Blob","href","window","URL","createObjectURL","click","kaldiTedTalkTranscript","files","file","canPlayType","fileURL","fr","FileReader","onload","readAsText","title","rel","loadDemo","handleChangeLoadTranscriptJson","select_stt_json_type","handleChangeLoadMedia","handleChangeLoadMediaUrl","lib_TranscriptEditor","render","src_App","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8c7f7873.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  // Draft,\n  Editor,\n  EditorState,\n  // ContentState,\n  CompositeDecorator,\n  convertFromRaw,\n  convertToRaw,\n} from 'draft-js';\n\nimport Word from './Word';\nimport sttJsonAdapter from './adapters/index.js';\nimport styles from './index.module.css';\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType,\n      inputCount: 0,\n      currentWord: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable,\n      }\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.transcriptData !== this.state.transcriptData) {\n      this.loadData();\n    }\n  }\n\n  onChange = (editorState) => {\n    // https://draftjs.org/docs/api-reference-editor-state#lastchangetype\n    // https://draftjs.org/docs/api-reference-editor-change-type\n    // doing editorStateChangeType === 'insert-characters'  is triggered even \n    // outside of draftJS eg when clicking play button so using this instead\n    // see issue https://github.com/facebook/draft-js/issues/1060\n    if(this.state.editorState.getCurrentContent() !== editorState.getCurrentContent()){\n      if(this.props.isPlaying()){\n        this.props.playMedia(false);\n        // Pause video for X seconds \n        const pauseWhileTypingIntervalInMilliseconds = 3000;\n          // resets timeout \n        clearTimeout(this.plauseWhileTypingTimeOut);\n        this.plauseWhileTypingTimeOut = setTimeout(function(){\n              // after timeout starts playing again \n          this.props.playMedia(true);\n        }.bind(this), pauseWhileTypingIntervalInMilliseconds);\n      }\n    }\n\n    if (this.state.isEditable) {\n      this.setState((prevState, props) => ({\n        editorState,\n        inputCount: prevState.inputCount + 1,\n      }), () => {\n        // Saving every 5 keystrokes\n        if (this.state.inputCount > 5) {\n          this.setState({\n            inputCount: 0,\n          });\n\n          this.localSave(this.props.mediaUrl);\n        }\n      });\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      this.setEditorContentState(blocks)\n    }\n  }\n\n  // click on words - for navigation\n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event) => {\n    // nativeEvent --> React giving you the DOM event\n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      // TODO: prop to jump to video <-- To connect with MediaPlayer\n      // this.props.seek(t);\n      this.props.onWordClick(t);\n      // TODO: pass current time of media to TimedTextEditor to know what text to highlight in this component\n    }\n  }\n\n  localSave = () => {\n    const mediaUrl = this.props.mediaUrl;\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n    localStorage.setItem(`draftJs-${ mediaUrl }`, JSON.stringify(data));\n    const newLastLocalSavedDate = new Date().toString();\n    localStorage.setItem(`timestamp-${ mediaUrl }`, newLastLocalSavedDate);\n    return newLastLocalSavedDate;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isPresentInLocalStorage(mediaUrl) {\n    const data = localStorage.getItem(`draftJs-${ mediaUrl }`);\n    if (data !== null) {\n      return true;\n    }\n    return false;\n  }\n\n  loadLocalSavedData(mediaUrl) {\n    const data = JSON.parse(localStorage.getItem(`draftJs-${ mediaUrl }`));\n    if (data !== null) {\n      const lastLocalSavedDate = localStorage.getItem(`timestamp-${ mediaUrl }`);\n      this.setEditorContentState(data)\n      return lastLocalSavedDate;\n    }\n    return ''\n  }\n\n  // set DraftJS Editor content state from blocks\n  // contains blocks and entityMap\n\n  /**\n   * @param {object} data.entityMap - draftJs entity maps - used by convertFromRaw\n   * @param {object} data.blocks - draftJs blocks - used by convertFromRaw\n   */\n  setEditorContentState = (data) => {\n    const contentState = convertFromRaw(data);\n    // eslint-disable-next-line no-use-before-define\n    const editorState = EditorState.createWithContent(contentState, decorator);\n    this.setState({ editorState });\n  }\n\n  getEditorContent = (sttType) => {\n    // sttType used in conjunction with adapter/convert\n    const type = sttType === null ? 'draftjs' : sttType;\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n\n    return data;\n  }\n\n  getLatestUnplayedWord = () => {\n    let latest = 'NA';\n\n    if (this.state.transcriptData) {\n      const wordsArray = this.state.transcriptData.retval.words;\n      const word = wordsArray.find(w => w.start < this.props.currentTime);\n\n      latest = word.start;\n    }\n\n    return latest;\n  }\n\n  getCurrentWord = () => {\n      const currentWord = {\n        start: 'NA',\n        end: 'NA'\n      };\n\n      if (this.state.transcriptData) {\n        const contentState = this.state.editorState.getCurrentContent()\n        const contentStateConvertEdToRaw = convertToRaw(contentState);\n        const entityMap = contentStateConvertEdToRaw.entityMap;\n\n        for (var entityKey in entityMap){\n          const entity = entityMap[entityKey];\n          const word = entity.data;\n          if(word.start <= this.props.currentTime && word.end >= this.props.currentTime){\n            currentWord.start = word.start;\n            currentWord.end = word.end;\n          }\n        }\n    }\n    return currentWord;\n  }\n\n  render() {\n    const currentWord = this.getCurrentWord();\n    const highlightColour = 'lightblue';\n    const unplayedColor = 'grey';\n    // const correctionBorder = '1px dotted #ff0000';\n    // temporarily switching to blue \n    const correctionBorder = '1px dotted blue';\n\n    // Time to the nearest half second\n    const time = Math.round(this.props.currentTime * 2.0) / 2.0;\n\n    return (\n      <section>\n        <section\n          className={ styles.editor }\n          onDoubleClick={ event => this.handleDoubleClick(event) }\n          // onClick={ event => this.handleOnClick(event) }\n        >\n          <style scoped>\n            {`span.Word[data-start=\"${ currentWord.start }\"] { background-color: ${ highlightColour } }`}\n            {/* {`span.Word[data-start=\"${ currentWord.start }\"]+span { background-color: ${ highlightColour } }`} */}\n            {`span.Word[data-prev-times~=\"${ time }\"] { color: ${ unplayedColor } }`}\n            {`span.Word[data-prev-times~=\"${ Math.floor(time) }\"] { color: ${ unplayedColor } }`}\n            {`span.Word[data-confidence=\"low\"] { border-bottom: ${ correctionBorder } }`}\n          </style>\n\n          <Editor\n            editorState={ this.state.editorState }\n            onChange={ this.onChange }\n            stripPastedStyles\n          />\n        </section>\n      </section>\n    );\n  }\n}\n\n// DraftJs decorator to recognize which entity is which\n// and know what to apply to what component\nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs\n// defines what to use to render the entity\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word,\n  },\n]);\n\nTimedTextEditor.propTypes = {\n  transcriptData: PropTypes.object,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  onWordClick: PropTypes.func,\n  sttJsonType: PropTypes.string,\n  isPlaying: PropTypes.func,\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.number\n};\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    const confidence = data.confidence > 0.6 ? 'high' : 'low';\n\n    let prevTimes = '';\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0.5) prevTimes += ` ${ Math.floor(data.start) }.5`;\n\n    return (\n      <span\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { confidence }\n        data-prev-times = { prevTimes }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n","/**\n * Helper function to generate draft.js entities,\n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n  let position = 0;\n  return words.map((word) => {\n    const result = {\n      start: word.start,\n      end: word.end,\n      confidence: word.confidence,\n      text: word[wordAttributeName],\n      offset: position,\n      length: word[wordAttributeName].length,\n      key: Math.random()\n        .toString(36)\n        .substring(6),\n    }\n    // increase position counter - to determine word offset in paragraph\n    position = position + word[wordAttributeName].length + 1;\n\n    return result;\n  })\n}\n\nexport default generateEntitiesRanges;\n","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n```\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach((word) => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = (bbcKaldiJson) => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: 'TBC',\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Convert autoEdit2 Json\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n * See samples folder and test file\n * for reference data structures\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = (autoEditText) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach((autoEditparagraph) => {\n    autoEditparagraph.paragraph.forEach((autoEditLine) => {\n      autoEditLine.line.forEach((word) => {\n        // adjusting time reference attributes from\n        // `startTime` `endTime` to `start` `end`\n        // for word object\n        const tmpWord = {\n          text: word.text,\n          start: word.startTime,\n          end: word.endTime,\n        };\n        //  if word contains punctuation\n        if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      })\n    })\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = (autoEdit2Json) => {\n  const results = [];\n  const tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n  // console.log(wordsByParagraphs);\n\n  wordsByParagraphs.forEach((paragraph) => {\n    // console.log(paragraph.words);\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: 'TBC',\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text'),\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;\n","import bbcKaldiToDraft from './bbc-kaldi/index';\nimport autoEdit2ToDraft from './autoEdit2/index';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\n\n // converts nested arrays into one dimensional array\nconst flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\nconst createEntityMap = (blocks) => {\n  const entityRanges = blocks.map(block => block.entityRanges);\n  // eslint-disable-next-line no-use-before-define\n  const flatEntityRanges = flatten(entityRanges);\n\n  const entityMap = {};\n\n  flatEntityRanges.forEach((data) => {\n    entityMap[data.key] = {\n      type: 'WORD',\n      mutability: 'MUTABLE',\n      data,\n    }\n  });\n  return entityMap;\n}\n\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n  let blocks;\n  switch (sttJsonType) {\n    case 'bbckaldi':\n       blocks = bbcKaldiToDraft(transcriptData);\n      return { blocks, entityMap: createEntityMap(blocks) };\n    case 'autoedit2':\n      blocks = autoEdit2ToDraft(transcriptData);\n      return { blocks, entityMap: createEntityMap(blocks) };\n    case 'draftjs':\n      return transcriptData; // (typeof transcriptData === 'string')? JSON.parse(transcriptData): transcriptData;\n    default:\n      // code block\n      console.error('not recognised the stt enginge');\n  }\n}\n\nexport default sttJsonAdapter;\n","function returnHotKeys(self) {\n  return {\n    esc: {\n      priority: 1,\n      handler: (event) => { self.playMedia(); },\n      helperText: 'Play Media',\n    },\n    'ctrl+k': { // combo from mousetrap\n      priority: 1,\n      handler: (event) => { self.promptSetCurrentTime(); },\n      helperText: 'set current time',\n    },\n    'ctrl+1': {\n      priority: 1,\n      handler: (event) => { self.skipForward(); console.log('Skip Forward'); },\n      helperText: 'Skip Forward',\n    },\n    'ctrl+2': {\n      priority: 1,\n      handler: (event) => { self.skipBackward(); console.log('Skip Backward'); },\n      helperText: 'Skip Backward',\n    },\n    'ctrl+3': {\n      priority: 1,\n      handler: (event) => { self.decreasePlaybackRate(); console.log('Speed Up - increase playbackRate'); },\n      helperText: 'Speed Up ',\n    },\n    'ctrl+4': {\n      priority: 1,\n      handler: (event) => { self.increasePlaybackRate(); console.log('Speed Down - Decrease playbackRate'); },\n      helperText: 'Speed Down',\n    },\n    'ctrl+5': {\n      priority: 1,\n      handler: (event) => { self.rollBack(); },\n      helperText: 'Roll Back',\n    }\n    // ,'ctrl+/': {\n    //     priority: 1,\n    //     handler: (event) => { console.log('show hide shortcuts');},\n    //     helperText: 'Show/Hide shortcuts'\n    // }\n    // ,'ctrl+s': {\n    //     priority: 1,\n    //     handler: (event) => { console.log('save');},\n    //     helperText: 'Save'\n    // }\n  }\n}\nexport default returnHotKeys;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './PlaybackRate.module.css';\nclass PlaybackRate extends React.Component {\n   \n    render() {\n        return (\n          <div>\n            <p className={ styles.helpText }>Playback Rate\n              <output className={ styles.playbackRateValue } >{ ` x${ this.props.playBackRate } ` }</output> \n            </p>\n            <input\n                type=\"range\"\n                min=\"0.2\"\n                value={ this.props.playBackRate }\n                max=\"3.5\"\n                step=\"0.1\"\n                onChange={ this.props.handlePlayBackRateChange }\n                />\n            <br/>\n            <button type=\"button\" onClick={ () => { this.props.setPlayBackRate(1) } }>Reset Playback Rate</button>\n          </div>\n        );\n    }\n}\n\nPlaybackRate.propTypes = {\n    handlePlayBackRateChange: PropTypes.func,\n    playBackRate: PropTypes.number,\n    setPlayBackRate: PropTypes.func\n  };\n\nexport default PlaybackRate;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './RollBack.module.css';\nclass RollBack extends React.Component {\n  \n    render() {\n        return (\n          <div>\n            <p className={ styles.helpText }>Rollback\n              <output className={ styles.rollBackValue }>{ ` x${ this.props.rollBackValueInSeconds } ` }</output> Seconds\n            </p>\n\n            <input\n                type=\"range\"\n                min=\"1\"\n                max=\"60\"\n                step=\"1\"\n                value={ this.props.rollBackValueInSeconds }\n                onChange={ this.props.handleChangeReplayRollbackValue }\n            />\n            <br/>\n            <button type=\"button\" onClick={ this.props.rollBack  }>↺</button>\n\n          </div>\n        );\n    }\n}\n\nRollBack.propTypes = {\n    rollBackValueInSeconds: PropTypes.number,\n    handleChangeReplayRollbackValue: PropTypes.func,\n    rollBack: PropTypes.func\n  };\n\nexport default RollBack;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ProgressBar.module.css';\nclass ProgressBar extends React.Component {\n\n    render() {\n        return (\n          <progress\n            className={ styles.progressBar }\n            max={ this.props.max }\n            value= { this.props.value }\n            onClick={ (e) => this.props.buttonClick(e) }\n            />\n        );\n    }\n}\n\nProgressBar.propTypes = {\n    value: PropTypes.number,\n    max: PropTypes.number,\n    buttonClick: PropTypes.func\n  };\n\nexport default ProgressBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass PlayerControls extends React.Component {\n    // to handle backward and forward mouse pressed on btn\n    // set a 300 ms  interval to repeat the \n    // backward or forward function\n    // on mouseUp the interval is cleared\n    setIntervalHelperBackward =() => {\n       this.interval =  setInterval(() => {\n                this.props.skipBackward();\n        }, 300);       \n    }\n\n    setIntervalHelperForward =() => {\n        this.interval =  setInterval(() => {\n                 this.props.skipForward();\n         }, 300);       \n     }\n\n    clearIntervalHelper = () => {\n        clearInterval( this.interval);\n    }\n\n    setTimecodeOffSetHelper = () => {\n        this.props.setTimeCodeOffset( prompt('Add a timecode offset hh:mm:ss:ff'))\n    }\n\n    render() {\n        return (\n          <div>\n            {/* Play Btn  */}\n            <button onClick={ (e) => { this.props.playMedia(e) } }> {this.props.isPlaying() ? '❚❚' : '▶'} </button> \n            {/* Backward Btn */}\n            <button \n                onMouseDown={ this.setIntervalHelperBackward }\n                onMouseUp={ this.clearIntervalHelper }\n            > {'◀◀'}\n            </button>\n            {/* Forward Btn */}\n            <button \n                onMouseDown={ this.setIntervalHelperForward }\n                onMouseUp={ this.clearIntervalHelper }\n            > {'▶▶'} \n            </button> \n            <br/>\n            {/* Timecodes  */}\n            <code>{this.props.currentTime}</code> / <code>{this.props.duration}</code>\n            <br/>\n            <button type=\"button\" \n                onClick={ this.props.promptSetCurrentTime }\n            >Jump To Time ⏱</button> \n            <br/>\n            <button type=\"button\" \n                onClick={ this.setTimecodeOffSetHelper }\n                >Set Timecode Offset ⏱</button>\n            <output><code>{this.props.timecodeOffset}</code></output>     \n          </div>\n        );\n    }\n}\n\nPlayerControls.propTypes = {\n    playMedia: PropTypes.func,\n    currentTime: PropTypes.string,\n    timecodeOffset: PropTypes.string,\n    promptSetCurrentTime: PropTypes.func\n  };\n\nexport default PlayerControls;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VolumeControl.module.css';\nclass VolumeControl extends React.Component {\n\n    render() {\n        return (\n          <div>\n            <p className={ styles.helpText }>Volume</p>\n            <label className={ styles.switch }>\n              <input type=\"checkbox\"\n                defaultChecked=\"true\"\n                onChange={ this.props.handleMuteVolume }\n                />\n              <span className={ styles.slider }></span>\n            </label>\n          </div>\n        );\n    }\n}\n\nVolumeControl.propTypes = {\n  handleMuteVolume: PropTypes.func\n};\n\nexport default VolumeControl;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VolumeControl.module.css';\nclass PauseWhileTyping extends React.Component {\n\n    render() {\n        return (\n          <div>\n            <p className={ styles.helpText }>Pause While Typing</p>\n            <label className={ styles.switch }>\n              <input type=\"checkbox\"\n                defaultChecked={ this.props.isPausedWhileTyping }\n                onChange={ this.props.handleToggle }\n                />\n              <span className={ styles.slider }></span>\n            </label>\n          </div>\n        );\n    }\n}\n\nPauseWhileTyping.propTypes = {\n  handleToggle: PropTypes.func\n};\n\nexport default PauseWhileTyping;","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames,\n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff`\n*/\n\n/**\n * Helper function\n * Rounds to the 14milliseconds boundaries\n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds\n * @param {*} fps\n */\nconst normalisePlayerTime = function (seconds, fps) {\n  return Number((1.0 / fps * Math.floor(Number((fps * seconds).toPrecision(12)))).toFixed(2))\n}\n\n/*\n* @param {*} seconds\n* @param {*} fps\n*/\nconst secondsToTimecode = function (seconds, framePerSeconds) {\n  // written for PAL non-drop timecode\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n\n  const normalisedSeconds = normalisePlayerTime(seconds, fps);\n\n  const wholeSeconds = Math.floor(normalisedSeconds)\n  const frames = ((normalisedSeconds - wholeSeconds) * fps).toFixed(2)\n\n  // prepends zero - example pads 3 to 03\n  function _padZero(n) {\n    if (n < 10) return `0${ parseInt(n) }`\n    return parseInt(n)\n  }\n\n  return `${ _padZero((wholeSeconds / 60 / 60) % 60)\n  }:${\n    _padZero((wholeSeconds / 60) % 60)\n  }:${\n    _padZero(wholeSeconds % 60)\n  }:${\n    _padZero(frames) }`\n}\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction\n * @param {*} tc\n * @param {*} fps\n */\nconst timecodeToFrames = function (tc, fps) {\n  // TODO make 29.97 fps drop-frame aware - works for 25 only.\n\n  const s = tc.split(':')\n  let frames = parseInt(s[3])\n  frames += parseInt(s[2]) * fps\n  frames += parseInt(s[1]) * (fps * 60)\n  frames += parseInt(s[0]) * (fps * 60 * 60)\n  return frames\n}\n\n/**\n * Convert broadcast timecodes to seconds\n * @param {*} tc - `hh:mm:ss:ff`\n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function (tc, framePerSeconds) {\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n  const frames = timecodeToFrames(tc, fps)\n  return Number(Number(frames / fps).toFixed(2))\n}\n\nexport default timecodeToSecondsHelper;\n","const countColon = timecode => timecode.split(':').length\n\nconst includesFullStop = timecode => timecode.includes('.')\n\nconst isOneDigit = str => str.length === 1\n\nconst padTimeToTimecode = (time) => {\n  if (typeof time === 'string') {\n    switch (countColon(time)) {\n      case 4:\n        // is already in timecode format\n        // hh:mm:ss:ff\n        return time;\n      case 2:\n        // m:ss\n        if (isOneDigit(time.split(':')[0])) {\n          return `00:0${ time }:00`;\n        }\n        // mm:ss\n        return `00:${ time }:00`;\n      case 3:\n        // hh:mm:ss\n        return `${ time }:00`;\n      default:\n        // mm.ss\n        if (includesFullStop(time)) {\n          // m.ss\n          if (isOneDigit(time.split('.')[0])) {\n            return `00:0${ time.split('.')[0] }:${ time.split('.')[1] }:00`;\n          }\n          // mm.ss\n          return `00:${ time.replace('.', ':') }:00`;\n        }\n\n        // if just int, then it's seconds\n        // s\n        if (isOneDigit(time)) {\n          return `00:00:0${ time }:00`;\n        }\n        // ss\n        return `00:00:${ time }:00`;\n    }\n    // edge case if it's number return a number coz cannot refactor\n    // TODO: might need to refactor and move this elsewhere\n  } else {\n    return time;\n  }\n}\n\nexport default padTimeToTimecode;\n","/**\n * Wrapping around \"time stamps\" and timecode conversion modules\n * To provide more support for variety of formats.\n */\nimport secondsToTimecode from './secondsToTimecode';\nimport timecodeToSecondsHelper from './timecodeToSeconds';\nimport padTimeToTimecode from './padTimeToTimecode';\n\n/**\n * @param {*} time\n * Can take as input timecodes in the following formats\n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds\n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity\n */\nconst timecodeToSeconds = (time) => {\n  if (typeof time === 'string') {\n    const resultPadded = padTimeToTimecode(time);\n    const resultConverted = timecodeToSecondsHelper(resultPadded);\n    return resultConverted;\n  }\n  // assuming it receive timecode as seconds as string '600'\n  return parseFloat(time);\n}\n\nexport { secondsToTimecode, timecodeToSeconds }\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// https://www.npmjs.com/package/react-keyboard-shortcuts\nimport { hotkeys } from 'react-keyboard-shortcuts';\nimport returnHotKeys from './defaultHotKeys';\nimport PlaybackRate from './PlaybackRate.js';\nimport RollBack from './RollBack.js';\nimport ProgressBar from './ProgressBar.js';\nimport PlayerControls from './PlayerControls.js';\nimport VolumeControl from './VolumeControl.js';\nimport PauseWhileTyping from './PauseWhileTyping.js';\n\nimport styles from './index.module.css';\n\nimport { secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/index';\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      playBackRate: 1,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0,\n      hotKeys: returnHotKeys(this),\n      isPausedWhileTyping: false\n    }\n  }\n  /*eslint-disable camel case */\n  hot_keys = returnHotKeys(this)\n\n  componentDidMount() {\n    this.props.hookSeek(this.setCurrentTime);\n    this.props.hookPlayMedia(this.playMedia);\n    this.props.hookIsPlaying(this.isPlaying)\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (newCurrentTime !== '' && newCurrentTime !== null) {\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime);\n      if (this.videoRef.current !== null) {\n        const videoRef = this.videoRef.current;\n        // videoRef.load();\n        if ( videoRef.readyState === 4 ) {\n          // it's loaded\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          videoRef.play();\n        }\n      }\n    }\n  }\n\n  promptSetCurrentTime = () => {\n    this.setCurrentTime( prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds'))\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet) => {\n    if (newTimeCodeOffSet !== '' && newTimeCodeOffSet !== null) {\n      // use similar helper function from above to convert\n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if (newTimeCodeOffSet.includes(':')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds })\n      }\n    }\n  }\n\n  rollBack = () => {\n    if (this.videoRef.current !== null) {\n      // get video duration\n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video\n      this.setCurrentTime(tmpDesiredCurrentTime);\n    }\n  }\n\n  handleTimeUpdate = (e) => {\n    // eslint-disable-next-line react/prop-types\n    this.props.hookOnTimeUpdate(e.target.currentTime)\n  }\n\n  handlePlayBackRateChange = (e) => {\n    this.setPlayBackRate(e.target.value)\n  }\n\n  increasePlaybackRate = () => {\n    const currentPlaybackRate = this.getCurrentPlaybackRate();\n    let newPlaybackRate = currentPlaybackRate + 0.1;\n    // rounding up eg 0.8-0.1 =  0.7000000000000001   => 0.7\n    newPlaybackRate = Number((newPlaybackRate).toFixed(1));\n    this.setPlayBackRate(newPlaybackRate);\n  }\n\n  decreasePlaybackRate = () => {\n    const currentPlaybackRate = this.getCurrentPlaybackRate();\n    let newPlaybackRate = currentPlaybackRate - 0.1;\n    // rounding up eg 0.8-0.1 =  0.7000000000000001   => 0.7\n    newPlaybackRate = Number((newPlaybackRate).toFixed(1));\n    this.setPlayBackRate(newPlaybackRate);\n  }\n\n  getCurrentPlaybackRate = () => {\n    if (this.videoRef.current !== null) {\n      return this.videoRef.current.playbackRate;\n    }\n  }\n\n  setPlayBackRate = (speedValue) => {\n    // value between 0.2 and 3.5\n    if (this.videoRef.current !== null) {\n      if (speedValue >= 0.2 && speedValue <= 3.5) {\n        this.setState({\n          playBackRate: speedValue,\n        }, () => {\n          this.videoRef.current.playbackRate = speedValue;\n        })\n      }\n    }\n  }\n\n  handleChangeReplayRollbackValue = (e) => {\n    if (this.videoRef.current !== null) {\n      this.setState({\n        rollBackValueInSeconds: e.target.value,\n      })\n    }\n  }\n\n  handleMuteVolume = (e) => {\n    // https://www.w3schools.com/tags/av_prop_volume.asp\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.volume > 0) {\n        this.videoRef.current.volume = 0;\n      } else {\n        this.videoRef.current.volume = 1;\n      }\n    }\n  }\n\n  handleTogglePauseWhileTyping = (e) => {\n    console.log('triggered')\n    console.log(this.state.isPausedWhileTyping)\n    this.setState((prevState, props) => {\n      console.log(prevState.isPausedWhileTyping)\n      return { isPausedWhileTyping:  !prevState.isPausedWhileTyping }\n    })\n  }\n\n  isPlaying=() => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.paused) {\n        return false;\n      }\n      return true;\n    }\n  }\n\n  /**\n   * @param {bool}  playPauseBool - is optional boolean - false -> pause | true -> play \n   * for integration with TimedTextEditor pause while typing\n   * If bool is not provided then if paused --> play | if playing --> pause\n   * Eg when triggered from play/pause btn \n   */\n  playMedia = (playPauseBool) => {\n    // checks that there is a video player element initialized\n    if (this.videoRef.current !== null) {\n      // if playMedia is being triggered by PlayerControl or Video element\n      // then it will have a target attribute\n      if(playPauseBool.target !== undefined){\n          // checks on whether to use default fallback if no param is provided\n          if (this.videoRef.current.paused) {\n            this.videoRef.current.play();\n          } else {\n            this.videoRef.current.pause();\n          }\n      }\n      else{\n         // if param is provided and if pausedWhileTyping Toggle is on\n        if(this.state.isPausedWhileTyping){\n            if (playPauseBool) {\n              this.videoRef.current.play();\n            } else {\n              this.videoRef.current.pause();\n            }\n          }\n      }\n    }\n  }\n\n  skipForward = () => {\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime + 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () => {\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime - 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) => {\n    if (this.videoRef.current !== null) {\n      // length of the bar\n      const lengthOfBar = e.target.offsetWidth;\n      // distance of the position of the lick from the start of the progress bar element\n      // location of click - start point of the bar\n      const clickLength = e.clientX - e.target.offsetLeft;\n      const positionPercentage = clickLength / lengthOfBar;\n      const totalTime = e.target.max;\n      const resultInSeconds = totalTime * positionPercentage;\n      // rounding up\n      const roundNewCurrentTime = parseFloat((resultInSeconds).toFixed(2));\n      this.setCurrentTime(roundNewCurrentTime);\n    }\n  }\n\n  getMediaCurrentTime = () => {\n   if(this.videoRef.current !== null) {\n    return secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset) \n   } \n     return '00:00:00:00';\n  }\n\n  getMediaDuration = () => {\n    if(this.videoRef.current !== null){\n      return secondsToTimecode(this.videoRef.current.duration + this.state.timecodeOffset);\n    } \n      return  '00:00:00:00';\n  }\n\n  render() {\n    // conditional, if media player not defined then don't show\n    let mediaPlayerEl;\n    if (this.props.mediaUrl !== null) {\n      mediaPlayerEl = (\n        <video\n          id=\"video\"\n          playsInline\n          // autoPlay\n          // controls\n          src={ this.props.mediaUrl }\n          onTimeUpdate={ this.handleTimeUpdate }\n          // TODO: video type - add logic to identify if video is playable and raise error if it's not\n          type=\"video/mp4\"\n          data-testid=\"media-player-id\"\n          onClick={ this.playMedia.bind(this) }\n          ref={ this.videoRef }\n        />\n      );\n    }\n\n    let playerControlsSection;\n    if(this.props.mediaUrl !== null ){\n      playerControlsSection = <section>\n\n        <ProgressBar\n          max={ this.videoRef.current !== null ? parseInt(this.videoRef.current.duration) : 100 }\n          value={ this.videoRef.current !== null ? parseInt(this.videoRef.current.currentTime) : 0 }\n          buttonClick={ this.handleProgressBarClick.bind(this) } \n        />\n        <br/>\n\n        <PlayerControls\n          playMedia={ this.playMedia.bind(this) }\n          isPlaying={ this.isPlaying.bind(this) }\n          skipBackward={ this.skipBackward.bind(this) }\n          skipForward={ this.skipForward.bind(this) }\n          currentTime={ this.getMediaCurrentTime() }\n          duration={ this.getMediaDuration() }\n          onSetCurrentTime={ '' }\n          onSetTimecodeOffset={ '' }\n          promptSetCurrentTime={ this.promptSetCurrentTime.bind(this) }\n          setTimeCodeOffset={ this.setTimeCodeOffset.bind(this) }\n          timecodeOffset={ secondsToTimecode(this.state.timecodeOffset) }\n        />\n     \n        <VolumeControl \n          handleMuteVolume={ this.handleMuteVolume.bind(this) }\n        />\n\n        <PauseWhileTyping \n          isPausedWhileTyping={ this.props.isPausedWhileTyping }\n          handleToggle={ this.handleTogglePauseWhileTyping.bind(this) }\n        />\n   \n        <PlaybackRate\n          playBackRate={ this.state.playBackRate }\n          handlePlayBackRateChange={ this.handlePlayBackRateChange.bind(this) }\n          setPlayBackRate={ this.setPlayBackRate.bind(this) }\n        />\n   \n        <RollBack\n          rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n          handleChangeReplayRollbackValue={ this.handleChangeReplayRollbackValue.bind(this) }\n          rollBack={ this.rollBack.bind(this) }\n        />  \n   \n      </section>\n    };\n\n    // list of keyboard shortcuts helper text\n    const keyboardShortcutsElements = Object.keys(this.state.hotKeys).map((shortcutKey, index) => {\n        return <p \n        className={ styles.helpText } \n        key={ shortcutKey }>\n          <code>{shortcutKey}</code> \n          <small>\n            <b> {this.state.hotKeys[shortcutKey].helperText}</b>\n          </small>\n        </p>\n      })\n\n    let keyboardShortcuts;\n    if(this.props.mediaUrl !== null ){\n      keyboardShortcuts = <section className={ styles.hideInMobile }><label>{keyboardShortcutsElements}</label>\n        <br/>\n        <small className={ styles.helpText }>Double click on a word to be taken to that time in the media.</small>\n      </section> \n    }\n\n    return (\n      <section className={ styles.videoSection }>\n\n        { mediaPlayerEl }\n\n        { playerControlsSection }\n      \n        { keyboardShortcuts }  \n      </section>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  hookSeek: PropTypes.func,\n  hookPlayMedia: PropTypes.func,\n  mediaUrl: PropTypes.string,\n  hookOnTimeUpdate: PropTypes.func\n};\n\nexport default hotkeys(MediaPlayer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TimedTextEditor from './TimedTextEditor';\nimport MediaPlayer from './MediaPlayer';\n\nimport styles from './index.module.css';\n\nclass TranscriptEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTime: 0,\n      lastLocalSavedTime: '',\n      transcriptData: null,\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData,\n      };\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.transcriptData !== this.state.transcriptData) {\n      //   this.loadData();\n      if (this.refs.timedTextEditor.isPresentInLocalStorage(this.props.mediaUrl)) {\n        console.log('was already present in local storage');\n        this.refs.timedTextEditor.loadLocalSavedData(this.props.mediaUrl);\n      } else {\n        console.log('not present in local storage');\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleWordClick = (startTime) => {\n    this.setCurrentTime(startTime);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleTimeUpdate = (currentTime) => {\n    this.setState({\n      currentTime,\n    })\n  }\n\n  handlePlayMedia = (bool) => {\n    this.playMedia(bool)\n  }\n\n  handleIsPlaying = () => {\n    return this.isPlaying()\n  }\n  getEditorContent = sttType => this.refs.timedTextEditor.getEditorContent(sttType)\n\n  render() {\n    return (\n      <section>\n        <section className={ styles.container }>\n          <aside className={ styles.aside }>\n            <MediaPlayer\n              // eslint-disable-next-line no-return-assign\n              hookSeek={ foo => this.setCurrentTime = foo }\n              hookPlayMedia={ foo => this.playMedia = foo }\n              hookIsPlaying={ foo => this.isPlaying = foo }\n              hookOnTimeUpdate={ this.handleTimeUpdate }\n              mediaUrl={ this.props.mediaUrl }\n              />\n          </aside>\n          <main className={ styles.main }>\n            <TimedTextEditor\n              transcriptData={ this.state.transcriptData }\n              onWordClick={ this.handleWordClick }\n              playMedia={ this.handlePlayMedia }\n              isPlaying={ this.handleIsPlaying }\n              currentTime={ this.state.currentTime }\n              isEditable={ this.props.isEditable }\n              sttJsonType={ this.props.sttJsonType }\n              ref={ 'timedTextEditor' }\n              mediaUrl={ this.props.mediaUrl }\n              />\n          </main>\n        </section>\n      </section>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  sttJsonType: PropTypes.string,\n};\n\nexport default TranscriptEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SttTypeSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"bbckaldi\">BBC Kaldi</option>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n  <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n  <option value=\"iiif\" disabled>IIIF</option>\n  <option value=\"autoedit2\">autoEdit 2</option>\n  <option value=\"ibm\" disabled>IBM Watson STT</option>\n  <option value=\"speechmatics\" disabled>Speechmatics</option>\n  <option value=\"assemblyai\" disabled>AssemblyAI</option>\n  <option value=\"rev\" disabled>Rev</option>\n  <option value=\"srt\" disabled>Srt</option>\n  <option value=\"vtt\" disabled>VTT</option>\n  <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n</select>)\n\nSttTypeSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default SttTypeSelect;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { TranscriptEditor } from './lib';\n// import kaldiTranscript from './sample-data/kaldi-transcription-20181029235300.json';\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport styles from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type'\n\nconst tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi',\n    };\n    // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n  }\n\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl,\n      sttType: 'bbckaldi',\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[0];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      const fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL,\n      });\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL,\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const self = this;\n    const file = files[0];\n    // let type = file.type;\n    // TODO: add checks\n    // let transcriptJsonContent = FileReader.readAsText(file)\n    const fr = new FileReader();\n    fr.onload = function (e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result));\n      self.setState({\n        transcriptData: JSON.parse(e.target.result),\n        // mediaUrl: tedTalkVideoUrl\n      });\n    };\n    fr.readAsText(file);\n  }\n\n  handleIsTextEditable = (e) => {\n    this.setState((prevState, props) => ({ isTextEditable: (prevState.isTextEditable) !== true }))\n  }\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = (event) => {\n    console.log(event.target.name, event.target.value)\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  getEditorContent = () => {\n    const tmpEditorsContnet = this.refs.transcriptEditor.getEditorContent(this.state.sttType);\n\n    this.download(JSON.stringify(tmpEditorsContnet, null, 2), `${ this.state.mediaUrl } .json`)\n  }\n\n  // https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\n   download = (content, filename, contentType) => {\n     const type = contentType || 'application/octet-stream';\n     const a = document.createElement('a');\n     const blob = new Blob([ content ], { type: type });\n\n     a.href = window.URL.createObjectURL(blob);\n     a.download = filename;\n     a.click();\n   }\n\n   render() {\n     return (\n       <div className={ styles.container }>\n         <span className={ styles.title }>\n            Demo page for <mark>React Transcript Editor</mark> - Component |{' '}\n           <a\n              href=\"https://github.com/bbc/react-transcript-editor\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n            Github Repo\n           </a>\n         </span>\n         <br />\n         <button onClick={ () => this.loadDemo() }>load demo</button>\n         <br />\n         <label>open Transcript Json</label>\n         <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n        />\n         <SttTypeSelect\n          name={ 'sttType' }\n          value={ this.state.sttType }\n          handleChange={ this.handleSttTypeChange }\n         />\n\n         <br />\n         <label>Load Local Media</label>\n         <input\n              type=\"file\"\n              onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n            />\n         <br />\n         <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n         </button>\n\n         <p>Text Is Editable\n           <label className={ styles.switch }>\n             <input type=\"checkbox\"\n              defaultChecked=\"true\"\n              onChange={ this.handleIsTextEditable }\n              />\n             <span className={ styles.slider }></span>\n           </label>\n         </p>\n         <button onClick={ () => this.getEditorContent() }>Get Data from Editor</button>\n\n         <hr/>\n\n         <TranscriptEditor\n          transcriptData={ this.state.transcriptData }\n          mediaUrl={ this.state.mediaUrl }\n          isEditable={ this.state.isTextEditable }\n          sttJsonType={ this.state.sttType }\n          ref={ 'transcriptEditor' }\n        />\n       </div>\n     );\n   }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helpText\":\"VolumeControl_helpText__1GO9z\",\"switch\":\"VolumeControl_switch__14pnI\",\"slider\":\"VolumeControl_slider__14_0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoSection\":\"MediaPlayer_videoSection__23OWQ\",\"helpText\":\"MediaPlayer_helpText__2cZmN\",\"hideInMobile\":\"MediaPlayer_hideInMobile__GbrMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TranscriptEditor_container__28OEI\",\"main\":\"TranscriptEditor_main__2aOzn\",\"aside\":\"TranscriptEditor_aside__1f7EK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helpText\":\"PlaybackRate_helpText__16RND\",\"playbackRateValue\":\"PlaybackRate_playbackRateValue__3PvaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helpText\":\"RollBack_helpText__26ZLF\",\"rollBackValue\":\"RollBack_rollBackValue__3Sp0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"TimedTextEditor_editor__2M5RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"ProgressBar_progressBar__1wjVC\"};"],"sourceRoot":""}