{"version":3,"sources":["lib/TranscriptEditor/TimedTextEditor/TimedTextEditor.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/adapters/bbc-kaldi/index.js","lib/TranscriptEditor/MediaController/ProgressBar/ProgressBar.js","lib/TranscriptEditor/MediaController/PlayerControls/PlayerControls.js","lib/TranscriptEditor/MediaController/MediaController.js","lib/TranscriptEditor/MediaPreview/MediaPreview.js","lib/TranscriptEditor/TranscriptEditor.js","index.js","lib/TranscriptEditor/TranscriptEditor.module.css","index.module.css","lib/TranscriptEditor/TimedTextEditor/TimedTextEditor.module.css","lib/TranscriptEditor/MediaPreview/MediaPreview.module.css"],"names":["mutability","Word","data","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","start","data-entity-key","key","className","children","PureComponent","groupWordsInParagraphs","words","results","paragraph","text","forEach","word","test","punct","push","bbcKaldiToDraft","bbcKaldiJson","tmpWords","undefined","retval","draftJsContentBlockParagraph","join","type","speaker","entityRanges","reduce","acc","_ref","end","confidence","position","length","Object","toConsumableArray","concat","offset","Math","random","toString","substring","TimedTextEditor","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","editorState","EditorState","createEmpty","transcriptData","onChange","setState","handleClick","bind","assertThisInitialized","loadData","nexProps","_this2","blocks","entityMap","flatten","map","block","objectSpread","defineProperty","convertFromRaw","createWithContent","decorator","event","element","nativeEvent","target","hasAttribute","parentElement","t","parseFloat","getAttribute","console","log","_this3","styles","editor","onClick","Draft","stripPastedStyles","React","Component","list","b","Array","isArray","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","component","ProgressBar","PlayerControls","MediaController","MediaController_ProgressBar_ProgressBar","MediaController_PlayerControls_PlayerControls","MediaPreview","videoRef","createRef","mediaPlayer","mediaUrl","id","playsInline","controls","src","data-testid","ref","videoSection","TranscriptEditor","container","header","TranscriptEditor_MediaController_MediaController","nav","TranscriptEditor_MediaPreview_MediaPreview","main","TranscriptEditor_TimedTextEditor_TimedTextEditor","aside","footer","App","kaldiTedTalkTranscript","files","file","document","canPlayType","fileURL","URL","createObjectURL","prompt","self","fr","FileReader","onload","e","JSON","parse","result","readAsText","title","href","rel","loadDemo","handleChangeLoadTranscriptJson","handleChangeLoadMedia","handleChangeLoadMediaUrl","lib_TranscriptEditor_TranscriptEditor","render","src_App","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e505ba6c.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  // Draft,\n  Editor,\n  EditorState,\n  // ContentState,\n  CompositeDecorator,\n  convertFromRaw\n} from \"draft-js\";\n\nimport Word from \"./Word\";\nimport bbcKaldiToDraft from \"./adapters/bbc-kaldi/index.js\";\n\nimport styles from \"./TimedTextEditor.module.css\";\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData\n    };\n\n    this.onChange = editorState => this.setState({ editorState });\n    this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentWillReceiveProps(nexProps) {\n    this.setState(\n      {\n        transcriptData: nexProps.transcriptData\n      },\n      () => {\n        this.loadData();\n      }\n    );\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== \"\") {\n      const blocks = bbcKaldiToDraft(this.props.transcriptData);\n      const entityMap = flatten(blocks.map(block => block.entityRanges)).reduce(\n        (acc, data) => ({\n          ...acc,\n          [data.key]: {\n            type: \"WORD\",\n            mutability: \"MUTABLE\",\n            data\n          }\n        }),\n        {}\n      );\n\n      const contentState = convertFromRaw({ blocks, entityMap });\n      const editorState = EditorState.createWithContent(\n        contentState,\n        decorator\n      );\n\n      this.setState({ editorState });\n    }\n  }\n\n  handleClick(event) {\n    let element = event.nativeEvent.target;\n    while (!element.hasAttribute(\"data-start\") && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute(\"data-start\")) {\n      const t = parseFloat(element.getAttribute(\"data-start\"));\n      // this.props.seek(t);\n      console.log(t);\n    }\n  }\n\n  render() {\n    return (\n      <section\n        className={styles.editor}\n        onClick={event => this.handleClick(event)}\n      >\n        <Editor\n          editorState={this.state.editorState}\n          onChange={this.onChange}\n          stripPastedStyles\n        />\n        {/* <button onClick={() => this.loadData()}>load data</button> */}\n      </section>\n    );\n  }\n}\n\nconst flatten = list =>\n  list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\nconst getEntityStrategy = mutability => (\n  contentBlock,\n  callback,\n  contentState\n) => {\n  contentBlock.findEntityRanges(character => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy(\"MUTABLE\"),\n    component: Word\n  }\n]);\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from \"react\";\n\nclass Word extends PureComponent {\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <span data-start={data.start} data-entity-key={data.key} className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nexport default Word;\n","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n```\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n */\n\nconst bbcKaldiToDraft = bbcKaldiJson => {\n  let results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  let wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n  wordsByParagraphs.forEach(paragraph => {\n    let draftJsContentBlockParagraph = {\n      text: paragraph.text.join(\" \"),\n      type: \"paragraph\",\n      data: {\n        speaker: \"TBC\"\n      },\n      entityRanges: paragraph.words.reduce(\n        (acc, { start, end, confidence, punct }) => ({\n          position: acc.position + punct.length + 1,\n          entityRanges: [\n            ...acc.entityRanges,\n            {\n              start,\n              end,\n              confidence,\n              text: punct,\n              offset: acc.position,\n              length: punct.length,\n              key: Math.random()\n                .toString(36)\n                .substring(6)\n            }\n          ]\n        }),\n        { position: 0, entityRanges: [] }\n      ).entityRanges\n    };\n\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = words => {\n  let results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach(word => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","import React from \"react\";\n\nclass ProgressBar extends React.Component {\n  render() {\n    return <h3>ProgressBar</h3>;\n  }\n}\n\nexport default ProgressBar;\n","import React from \"react\";\n\nclass PlayerControls extends React.Component {\n  render() {\n    return <h3>PlayerControls</h3>;\n  }\n}\n\nexport default PlayerControls;\n","import React from \"react\";\n\nimport ProgressBar from \"./ProgressBar/ProgressBar\";\nimport PlayerControls from \"./PlayerControls/PlayerControls\";\n\nclass MediaController extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>MediaController</h2>\n        <ProgressBar />\n\n        <PlayerControls />\n      </div>\n    );\n  }\n}\n\nexport default MediaController;\n","import React from \"react\";\nimport styles from \"./MediaPreview.module.css\";\n\n// inspired by https://github.com/bbc/nm2/blob/master/src/components/chapter/video/Video.jsx\n\nclass MediaPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n  render() {\n    // conditional, if media player not defined then don't show\n    let mediaPlayer;\n    if (this.props.mediaUrl !== \"\") {\n      mediaPlayer = (\n        <video\n          id=\"video\"\n          playsInline\n          // autoPlay\n          controls\n          src={this.props.mediaUrl}\n          type=\"video/mp4\"\n          data-testid=\"media-player-id\"\n          ref={this.videoRef}\n        />\n      );\n    }\n\n    return <section className={styles.videoSection}>{mediaPlayer}</section>;\n  }\n}\n\nexport default MediaPreview;\n","import React from \"react\";\nimport styles from \"./TranscriptEditor.module.css\";\n\nimport TimedTextEditor from \"./TimedTextEditor/TimedTextEditor\";\nimport MediaController from \"./MediaController/MediaController\";\nimport MediaPreview from \"./MediaPreview/MediaPreview\";\n\nclass TranscriptEditor extends React.Component {\n  render() {\n    return (\n      <section className={styles.container}>\n        <header className={styles.header}>\n          <MediaController mediaUrl={this.props.mediaUrl} />\n        </header>\n        <nav className={styles.nav}>\n          <MediaPreview mediaUrl={this.props.mediaUrl} />\n        </nav>\n        <main className={styles.main}>\n          <TimedTextEditor transcriptData={this.props.transcriptData} />\n        </main>\n        <aside className={styles.aside}>Settings</aside>\n        <footer className={styles.footer}>Footer</footer>\n      </section>\n    );\n  }\n}\n\nexport default TranscriptEditor;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { TranscriptEditor } from \"./lib\";\n// import kaldiTranscript from './sample-data/kaldi-transcription-20181029235300.json';\nimport kaldiTedTalkTranscript from \"./sample-data/KateDarling_2018S-bbc-kaldi.json\";\nimport styles from \"./index.module.css\";\n\nconst tedTalkVideoUrl =\n  \"https://download.ted.com/talks/KateDarling_2018S-950k.mp4\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: \"\",\n      mediaUrl: \"\"\n    };\n    // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n  }\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    let file = files[0];\n    let type = file.type;\n    // check if is playable\n    const videoNode = document.createElement(\"video\");\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      var fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL\n      });\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    let fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const self = this;\n    let file = files[0];\n    // let type = file.type;\n    // TODO: add checks\n    // let transcriptJsonContent = FileReader.readAsText(file)\n    var fr = new FileReader();\n    fr.onload = function(e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result));\n      self.setState({\n        transcriptData: JSON.parse(e.target.result)\n        // mediaUrl: tedTalkVideoUrl\n      });\n    };\n    fr.readAsText(file);\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <span className={styles.title}>\n          Demo page for React Transcript Editor - Component |{\" \"}\n          <a\n            href=\"https://github.com/bbc/react-transcript-editor\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Github Repo\n          </a>\n        </span>\n        <br />\n        <button onClick={() => this.loadDemo()}>load demo</button>\n        <br />\n        <label>open Transcript Json</label>\n        <input\n          type=\"file\"\n          onChange={e => this.handleChangeLoadTranscriptJson(e.target.files)}\n        />\n        <br />\n        <label>Load Local Media</label>\n        <input\n          type=\"file\"\n          onChange={e => this.handleChangeLoadMedia(e.target.files)}\n        />\n        <br />\n        <button onClick={() => this.handleChangeLoadMediaUrl()}>\n          Load Media From Url\n        </button>\n\n        <TranscriptEditor\n          transcriptData={this.state.transcriptData}\n          mediaUrl={this.state.mediaUrl}\n        />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TranscriptEditor_container__1xHvx\",\"nav\":\"TranscriptEditor_nav__19yQR\",\"header\":\"TranscriptEditor_header__A5dxc\",\"main\":\"TranscriptEditor_main__3i6K9\",\"aside\":\"TranscriptEditor_aside__1VrzG\",\"footer\":\"TranscriptEditor_footer__3Tsod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\",\"title\":\"src_title__1Il-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"TimedTextEditor_editor__DhFAf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoSection\":\"MediaPreview_videoSection__3uEmr\"};"],"sourceRoot":""}