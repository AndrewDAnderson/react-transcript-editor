{"version":3,"sources":["lib/TranscriptEditor/MediaPlayer/index.module.css","lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/adapters/generate-entities-ranges/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/bbc-kaldi/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/autoEdit2/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/index.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/index.js","select-stt-json-type.js","index.js","lib/TranscriptEditor/index.module.css","index.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css"],"names":["module","exports","videoSection","progressBar","switch","slider","helpText","mutability","Word","data","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","start","data-entity-key","key","className","children","PureComponent","generateEntitiesRanges","words","wordAttributeName","position","map","word","result","end","confidence","text","offset","length","Math","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","test","punct","push","groupWordsInParagraphs","undefined","retval","draftJsContentBlockParagraph","join","type","speaker","entityRanges","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","endTime","sttJsonAdapter","transcriptData","sttJsonType","console","error","TimedTextEditor","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDoubleClick","event","element","nativeEvent","target","hasAttribute","parentElement","t","parseFloat","getAttribute","onWordClick","state","editorState","EditorState","createEmpty","isEditable","onChange","setState","loadData","prevProps","prevState","blocks","block","flatEntityRanges","flatten","entityMap","convertFromRaw","createWithContent","decorator","_this2","styles","editor","onDoubleClick","Draft","stripPastedStyles","nextProps","React","Component","list","reduce","b","concat","Array","isArray","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","component","returnHotKeys","self","esc","priority","handler","playMedia","helperText","ctrl+k","promptSetCurrentTime","ctrl+1","skipForward","log","ctrl+2","skipBackward","ctrl+3","decreasePlaybackRate","ctrl+4","increasePlaybackRate","ctrl+5","rollBack","secondsToTimecode","seconds","framePerSeconds","fps","normalisedSeconds","Number","floor","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","timecodeToSeconds","time","newCurrentTimeInSeconds","includes","replace","MediaPlayer","hot_keys","assertThisInitialized","setCurrentTime","newCurrentTime","videoRef","current","readyState","currentTime","play","prompt","setTimeCodeOffset","newTimeCodeOffSet","timecodeOffset","tmpDesiredCurrentTime","rollBackValueInSeconds","handleTimeUpdate","e","hookOnTimeUpdate","handlePlayBackRateChange","setPlayBackRate","value","newPlaybackRate","getCurrentPlaybackRate","playbackRate","speedValue","playBackRate","handleChangeReplayRollbackValue","handleMuteVolume","volume","isPlaying","paused","pause","handleProgressBarClick","lengthOfBar","offsetWidth","positionPercentage","clientX","offsetLeft","totalTime","max","roundNewCurrentTime","createRef","playbackRateInputRange","hotKeys","hookSeek","mediaPlayerEl","mediaUrl","id","playsInline","src","onTimeUpdate","data-testid","onClick","ref","playerControlsSection","duration","defaultChecked","min","step","keyboardShortcutsHelp","keys","shortcutKey","index","hotkeys","TranscriptEditor","handleWordClick","container","header","nav","TranscriptEditor_MediaPlayer","foo","main","TranscriptEditor_TimedTextEditor","footer","SttTypeSelect","name","handleChange","disabled","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","sttType","kaldiTedTalkTranscript","files","file","document","canPlayType","fileURL","URL","createObjectURL","fr","FileReader","onload","JSON","parse","readAsText","title","href","rel","loadDemo","handleChangeLoadTranscriptJson","select_stt_json_type","handleChangeLoadMedia","handleChangeLoadMediaUrl","lib_TranscriptEditor","render","src_App","getElementById","aside"],"mappings":"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","file":"static/js/main.5b3e8aa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoSection\":\"MediaPlayer_videoSection__23OWQ\",\"progressBar\":\"MediaPlayer_progressBar__PxbES\",\"switch\":\"MediaPlayer_switch__3YgmV\",\"slider\":\"MediaPlayer_slider__2zorg\",\"helpText\":\"MediaPlayer_helpText__2cZmN\"};","import React from 'react';\nimport {\n  // Draft,\n  Editor,\n  EditorState,\n  // ContentState,\n  CompositeDecorator,\n  convertFromRaw\n} from 'draft-js';\n\nimport Word from './Word';\nimport sttJsonAdapter from './adapters/index.js';\nimport styles from './index.module.css';\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType\n    };\n\n    this.onChange = (editorState) =>{\n      // DraftJs option editable\n      if(this.state.isEditable){\n        this.setState({ editorState });\n      }\n    } \n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState){\n    if(nextProps.transcriptData !== null){\n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable\n      }\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.transcriptData !== this.state.transcriptData){\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      const entityRanges = blocks.map(block => block.entityRanges);\n      // eslint-disable-next-line no-use-before-define\n      const flatEntityRanges = flatten(entityRanges);\n      \n      const entityMap = {};\n\n      flatEntityRanges.forEach((data) => {\n        entityMap[ data.key ] = {\n            type: 'WORD',\n            mutability: 'MUTABLE',\n            data\n          }\n      });\n     \n      const contentState = convertFromRaw({ blocks, entityMap });\n\n      // eslint-disable-next-line no-use-before-define\n      const editorState = EditorState.createWithContent(contentState, decorator);\n\n      this.setState({ editorState });\n    }\n  }\n\n  // click on words - for navigation \n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event)=> {\n    // nativeEvent --> React giving you the DOM event \n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      //TODO: prop to jump to video <-- To connect with MediaPlayer\n      // this.props.seek(t);\n      this.props.onWordClick(t);\n      // TODO: pass current time of media to TimedTextEditor to know what text to highlight in this component  \n    }\n  }\n\n  render() {\n    return (\n        <section\n        className={ styles.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }\n        // onClick={ event => this.handleOnClick(event) }\n        >\n            <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n        />\n            {/* <button onClick={() => this.loadData()}>load data</button> */}\n        </section>\n    );\n  }\n}\n\n// converts nested arrays into one dimensional array \nconst flatten = list =>\n  list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\n// DraftJs decorator to recognize which entity is which \n// and know what to apply to what component \nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges(character => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs \n// defines what to use to render the entity \nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word\n  }\n]);\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\n\nclass Word extends PureComponent {\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n        <span data-start={ data.start } data-entity-key={ data.key } className=\"Word\">\n            {this.props.children}\n        </span>\n    );\n  }\n}\n\nexport default Word;\n","/**\n * Helper function to generate draft.js entities, \n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc. \n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n    let position = 0;\n    return words.map((word) => {\n         const result =  {\n          start: word.start,\n          end: word.end,\n          confidence: word.confidence,\n          text: word[ wordAttributeName ],\n          offset: position,\n          length: word[ wordAttributeName ].length,\n          key: Math.random()\n            .toString(36)\n            .substring(6)\n          }\n          // increase position counter - to determine word offset in paragraph\n          position = position + word[ wordAttributeName ].length + 1;\n\n          return result;\n      })\n} \n\nexport default generateEntitiesRanges;","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n```\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = words => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach(word => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = bbcKaldiJson => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach(paragraph => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: 'TBC'\n      },\n      // the entities as ranges are each word in the space-joined text, \n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct') // wordAttributeName\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Convert autoEdit2 Json\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n * See samples folder and test file \n * for reference data structures\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = autoEditText => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach(autoEditparagraph => {\n    autoEditparagraph.paragraph.forEach(autoEditLine => {\n      autoEditLine.line.forEach(word => {\n        // adjusting time reference attributes from \n        //`startTime` `endTime` to `start` `end`\n        // for word object \n        const tmpWord= { \n          text: word.text, \n          start: word.startTime, \n          end: word.endTime };\n        //  if word contains punctuation\n         if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      })\n    })\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = autoEdit2Json => {\n  const results = [];\n  const  tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n  // console.log(wordsByParagraphs);\n\n  wordsByParagraphs.forEach(paragraph => {\n    // console.log(paragraph.words);\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: 'TBC'\n      },\n      // the entities as ranges are each word in the space-joined text, \n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text')\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;","import bbcKaldiToDraft from './bbc-kaldi/index.js';\nimport autoEdit2ToDraft from './autoEdit2/index.js';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n    switch(sttJsonType) {\n        case 'bbckaldi':\n            return bbcKaldiToDraft(transcriptData);\n        case 'autoedit2':\n            return autoEdit2ToDraft(transcriptData);\n        default:\n            // code block\n            console.error('not recognised the stt enginge');\n    }\n}\n\nexport default sttJsonAdapter;","function returnHotKeys(self){\n  return {\n        'esc': { \n            priority: 1,\n            handler: (event) => { self.playMedia();},\n            helperText: 'Play Media'\n        },\n        'ctrl+k': { // combo from mousetrap\n            priority: 1,\n            handler: (event) => { self.promptSetCurrentTime();},\n            helperText: 'set current time'\n        },\n        'ctrl+1': { \n            priority: 1,\n            handler: (event) => { self.skipForward();console.log('Skip Forward');},\n            helperText: 'Skip Forward'\n        },\n        'ctrl+2': { \n            priority: 1,\n            handler: (event) => { self.skipBackward();console.log('Skip Backward');},\n            helperText: 'Skip Backward'\n        },\n        'ctrl+3': { \n            priority: 1,\n            handler: (event) => { self.decreasePlaybackRate();console.log('Speed Up - increase playbackRate');},\n            helperText: 'Speed Up '\n        },\n        'ctrl+4': { \n            priority: 1,\n            handler: (event) => { self.increasePlaybackRate(); console.log('Speed Down - Decrease playbackRate');},\n            helperText: 'Speed Down'\n        },\n        'ctrl+5': { \n            priority: 1,\n            handler: (event) => { self.rollBack();},\n            helperText: 'Roll Back'\n        }\n        // ,'ctrl+/': { \n        //     priority: 1,\n        //     handler: (event) => { console.log('show hide shortcuts');},\n        //     helperText: 'Show/Hide shortcuts'\n        // }\n        // ,'ctrl+s': { \n        //     priority: 1,\n        //     handler: (event) => { console.log('save');},\n        //     helperText: 'Save'\n        // }\n    }\n}\nexport default returnHotKeys; ","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames, \n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff` \n*/\n\n/**\n * Helper function \n * Rounds to the 14milliseconds boundaries \n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds \n * @param {*} fps \n */\nconst normalisePlayerTime = function(seconds, fps){\n    return Number((1.0/fps*Math.floor(Number((fps*seconds).toPrecision(12)))).toFixed(2))\n}\n\n/*\n* @param {*} seconds \n* @param {*} fps \n*/\nconst secondsToTimecode = function(seconds, framePerSeconds) {\n    // written for PAL non-drop timecode\n    let fps = 25;\n    if (framePerSeconds !== undefined){\n        fps = framePerSeconds;\n    }\n\n    const normalisedSeconds= normalisePlayerTime(seconds, fps);\n    \n    const wholeSeconds=Math.floor(normalisedSeconds)\n    const frames=((normalisedSeconds-wholeSeconds)*fps).toFixed(2)\n\n    // prepends zero - example pads 3 to 03\n    function _padZero(n){\n        if(n<10)return '0'+parseInt(n)\n        else return parseInt(n)\n    }\n\n    return _padZero((wholeSeconds/60/60)%60)\n        + ':'\n        + _padZero((wholeSeconds/60)%60)\n        + ':'\n        + _padZero(wholeSeconds%60)\n        + ':'\n        + _padZero(frames)\n}\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction \n * @param {*} tc \n * @param {*} fps \n */\nconst timecodeToFrames = function(tc, fps){\n    // TODO make 29.97 fps drop-frame aware - works for 25 only.\n    \n    const s=tc.split(':')\n    let frames=parseInt(s[ 3 ])\n    frames += parseInt(s[ 2 ]) * fps\n    frames += parseInt(s[ 1 ]) * (fps*60)\n    frames += parseInt(s[ 0 ]) * (fps*60*60)\n    return frames\n}\n\n/**\n * Convert broadcast timecodes to seconds \n * @param {*} tc - `hh:mm:ss:ff` \n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function(tc, framePerSeconds){\n    let fps = 25;\n    if (framePerSeconds !== undefined){\n        fps = framePerSeconds;\n    }\n    const frames = timecodeToFrames(tc, fps)\n    return Number(Number(frames/fps).toFixed(2))\n}\n\nexport default timecodeToSecondsHelper;","/**\n * Wrapping around \n * https://www.npmjs.com/package/node-timecodes \n * To provide more support for variety of formats.\n */\n// import timecodes from 'node-timecodes';\nimport secondsToTimecode  from './secondsToTimecode.js';\nimport timecodeToSecondsHelper  from './timecodeToSeconds.js';\n\n// const secondsToTimecode = (time)=>{\n//     if(typeof newCurrentTimeInSeconds !== 'number'){\n//         return timecodes.fromSeconds(parseFloat(time))\n//     }\n//     return timecodes.fromSeconds(time)   \n// }\n\n/**\n * @param {*} time \n * Can take as input timecodes in the following formats \n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds \n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity \n */\nconst timecodeToSeconds = (time)=>{\n    let newCurrentTimeInSeconds = time;\n    if(typeof newCurrentTimeInSeconds !== 'number'){\n        if( newCurrentTimeInSeconds.includes(':')){\n          // hh:mm:ss:ms --> already in right format\n          if(newCurrentTimeInSeconds.split(':').length === 4){\n            newCurrentTimeInSeconds = timecodeToSecondsHelper(newCurrentTimeInSeconds);\n          }\n           // mm:ss --> convert to hh:mm:ss:ms\n          else if(newCurrentTimeInSeconds.split(':').length === 2){\n            // if it's m:ss\n           if(newCurrentTimeInSeconds.split(':')[ 0 ].length ===1){\n            newCurrentTimeInSeconds = `0${ newCurrentTimeInSeconds.split(':')[ 0 ] }:${ newCurrentTimeInSeconds.split(':')[ 1 ] }`;\n            } \n\n            newCurrentTimeInSeconds = `00:${ newCurrentTimeInSeconds }:00`;\n            newCurrentTimeInSeconds = timecodeToSecondsHelper(newCurrentTimeInSeconds);\n          }\n          //  hh:mm:ss\n          else if(newCurrentTimeInSeconds.split(':').length === 3){\n            newCurrentTimeInSeconds = `${ newCurrentTimeInSeconds }:00`;\n            newCurrentTimeInSeconds = timecodeToSecondsHelper(newCurrentTimeInSeconds);\n            }\n        }\n        // doesn't include : and includes . instead mm.ss\n        else if( newCurrentTimeInSeconds.includes('.')){\n            if(newCurrentTimeInSeconds.split('.')[ 0 ].length ===1){\n                newCurrentTimeInSeconds = `0${ newCurrentTimeInSeconds.split('.')[ 0 ] }:${ newCurrentTimeInSeconds.split('.')[ 1 ] }`;\n                } \n                newCurrentTimeInSeconds = `00:${ newCurrentTimeInSeconds.replace('.',':') }:00`;\n                newCurrentTimeInSeconds = timecodeToSecondsHelper(newCurrentTimeInSeconds);\n        }\n        // assuming it receive timecode as seconds as string '600'\n        else {\n            return parseFloat(newCurrentTimeInSeconds)\n         }\n      }\n\n    return newCurrentTimeInSeconds;\n}\n\nexport { secondsToTimecode, timecodeToSeconds }\n","import React from 'react';\nimport styles from './index.module.css';\nimport returnHotKeys from './defaultHotKeys.js';\n// https://www.npmjs.com/package/react-keyboard-shortcuts\nimport { hotkeys } from 'react-keyboard-shortcuts';\nimport { secondsToTimecode, timecodeToSeconds  } from '../../Util/timecode-converter/index.js';\n\n// inspired by https://github.com/bbc/nm2/blob/master/src/components/chapter/video/Video.jsx\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.playbackRateInputRange = React.createRef();\n\n    this.state = {\n      playBackRate:1,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0,\n      hotKeys: returnHotKeys(this)\n    }\n  }\n\n  hot_keys = returnHotKeys(this)\n\n  componentDidMount(){\n    this.props.hookSeek(this.setCurrentTime);\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    \n    if(newCurrentTime!=='' && newCurrentTime!==null){\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime); \n\n      if (this.videoRef.current  !== null) {\n        const videoRef = this.videoRef.current;\n        // videoRef.load();\n        if ( videoRef.readyState === 4 ) {\n          // it's loaded\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          videoRef.play();\n        }\n      }\n    }\n  }\n\n  promptSetCurrentTime = () => {\n    this.setCurrentTime( prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds'))\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet)=>{\n    if(newTimeCodeOffSet!=='' && newTimeCodeOffSet!==null){\n      // use similar helper function from above to convert \n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if(newTimeCodeOffSet.includes(':')){\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds })\n      }\n    }\n  }\n\n  rollBack = () =>{\n    if (this.videoRef.current  !== null) {\n      // get video duration \n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video  \n      this.setCurrentTime(tmpDesiredCurrentTime);\n    }\n  }\n\n  handleTimeUpdate = (e)=>{\n    // eslint-disable-next-line react/prop-types\n    this.props.hookOnTimeUpdate(e.target.currentTime)\n  }\n\n  handlePlayBackRateChange = (e)=>{\n    this.setPlayBackRate(e.target.value)\n  }\n\n  increasePlaybackRate = () =>{\n    // if(this.videoRef.current!== null){\n    //   this.playbackRateInputRange.current.stepUp(1)\n    // }\n    \n    const currentPlaybackRate = this.getCurrentPlaybackRate();\n    let newPlaybackRate = currentPlaybackRate + 0.1;\n    // rounding up eg 0.8-0.1 =  0.7000000000000001   => 0.7\n    newPlaybackRate  = Number((newPlaybackRate).toFixed(1));\n    this.setPlayBackRate(newPlaybackRate);\n  }\n\n  decreasePlaybackRate = () =>{\n    // if(this.videoRef.current!== null){\n    //   this.playbackRateInputRange.current.stepDown(1)\n    // }\n    const currentPlaybackRate = this.getCurrentPlaybackRate();\n    let newPlaybackRate = currentPlaybackRate - 0.1;\n    // rounding up eg 0.8-0.1 =  0.7000000000000001   => 0.7\n    newPlaybackRate  = Number((newPlaybackRate).toFixed(1));\n    this.setPlayBackRate(newPlaybackRate);\n    \n  }\n\n  getCurrentPlaybackRate = () => {\n    if(this.videoRef.current!== null){\n      return this.videoRef.current.playbackRate;\n    }\n  }\n\n  setPlayBackRate = (speedValue) =>{\n    // value between 0.2 and 3.5\n    if(this.videoRef.current!== null){\n      if(speedValue>=0.2 && speedValue<=3.5){\n        this.setState({\n            playBackRate: speedValue\n          },()=>{\n              this.videoRef.current.playbackRate = speedValue;\n          })\n      }\n    }\n  }\n\n  handleChangeReplayRollbackValue = (e)=>{\n    if(this.videoRef.current!== null){\n        this.setState({\n          rollBackValueInSeconds: e.target.value \n        })\n    }\n  }\n\n  handleMuteVolume = (e) => {\n    // https://www.w3schools.com/tags/av_prop_volume.asp\n    if(this.videoRef.current!== null){\n      if(this.videoRef.current.volume > 0){\n        this.videoRef.current.volume  = 0;\n      }\n      else{\n        this.videoRef.current.volume =1;\n      }\n    }\n  }\n\n  isPlaying=(e)=>{\n    if(this.videoRef.current!== null){\n      if(this.videoRef.current.paused){\n        return false;\n      }else{\n       return true;\n      }\n    }\n  }\n  \n  playMedia =()=>{\n    if(this.videoRef.current!== null){\n      if(this.videoRef.current.paused){\n        this.videoRef.current.play();\n      }else{\n        this.videoRef.current.pause();\n      }\n    }\n  }\n\n  /**\n   * @todo Consider refactoring using \n   * https://stackoverflow.com/questions/48048957/react-long-press-event\n   * To enable pressing on forward of backward key to move \n   */\n  skipForward = () =>{\n    if(this.videoRef.current!== null){\n      const currentTime = this.videoRef.current.currentTime;\n      let newCurrentTime= currentTime + 5;\n      newCurrentTime  = Number((newCurrentTime).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () =>{\n    if(this.videoRef.current!== null){\n      const currentTime = this.videoRef.current.currentTime;\n      let newCurrentTime= currentTime - 5;\n      newCurrentTime  = Number((newCurrentTime).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) =>{\n    if(this.videoRef.current!== null){\n      // length of the bar\n      const lengthOfBar =  e.target.offsetWidth; \n      // distance of the position of the lick from the start of the progress bar element\n      // location of click - start point of the bar \n      const clickLength = e.clientX - e.target.offsetLeft;\n      const positionPercentage = clickLength / lengthOfBar;\n      // total time\n      const totalTime = e.target.max;\n      const resultInSeconds = totalTime * positionPercentage;  \n      // rounding up \n      const roundNewCurrentTime = parseFloat((resultInSeconds).toFixed(2));\n      this.setCurrentTime(roundNewCurrentTime);\n    }\n  }\n\n  render() {\n    // conditional, if media player not defined then don't show\n    let mediaPlayerEl;\n    if (this.props.mediaUrl !== null) {\n      mediaPlayerEl = (\n          <video\n          id=\"video\"\n          playsInline\n          // autoPlay\n          // controls\n          src={ this.props.mediaUrl }\n          onTimeUpdate={ this.handleTimeUpdate }\n          // TODO: video type\n          type=\"video/mp4\"\n          data-testid=\"media-player-id\"\n          onClick={ this.playMedia }\n          ref={ this.videoRef }\n        />\n      );\n    }\n\n    const playerControlsSection = <section>\n        {/* Progress bar  */}\n        <progress \n            className={ styles.progressBar } \n            max={ this.videoRef.current!== null? parseInt(this.videoRef.current.duration) : '100' }\n            value= { this.videoRef.current!== null? parseInt(this.videoRef.current.currentTime) : '0' }\n            onClick={ (e)=>{ this.handleProgressBarClick(e) } }\n            />\n\n        <br/>\n        {/* Play / Pause Btn  */}\n        {this.props.mediaUrl !== null? <button onClick={ ()=>{ this.playMedia()} }> {this.isPlaying()? '❚❚' : '▶'} </button>:''}\n       \n        {/* Backward Btn */}\n        {this.props.mediaUrl !== null? <button onClick={ ()=>{ this.skipBackward()} }> {'◀◀'} </button>:''}\n        {/* Forward Btn */}\n        {this.props.mediaUrl !== null? <button onClick={ ()=>{ this.skipForward()} }> {'▶▶'} </button>:''}\n\n         ️<br/>\n        {/* Display timecodes */}\n        <code>{this.videoRef.current!== null ? secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset): '00:00:00:00'}</code>\n            /\n        <code>{this.videoRef.current!== null ?  secondsToTimecode(this.videoRef.current.duration + this.state.timecodeOffset): '00:00:00:00'}</code>\n        <br/>\n\n        <button type=\"button\" onClick={ this.promptSetCurrentTime }>Jump To Time ⏱</button> <br/>\n        \n        <button type=\"button\" onClick={ ()=>{ this.setTimeCodeOffset( prompt('Add a timecode offset hh:mm:ss:ff'))} }>Set Timecode Offset ⏱</button>\n        <output><code>{secondsToTimecode(this.state.timecodeOffset)}</code></output>\n        <br/>\n        {/* <label>Supported timecode formats</label>\n        <br/>\n        <code>hh:mm:ss:ms</code>  <code>mm:ss</code>  <code>m:ss</code> <code>m.ss</code>  <code>seconds</code>  <code>hh:mm:ss</code>\n        <br/> */}\n            \n        {/* Volume Toggle */}\n        <p className={ styles.helpText }>Volume</p>\n        <label className={ styles.switch }>\n            <input type=\"checkbox\" \n                defaultChecked=\"true\" \n                onChange={ this.handleMuteVolume }\n                />\n            <span className={ styles.slider }></span>\n        </label>\n\n        {/* Playback Rate  */}\n        <p className={ styles.helpText }>Playback Rate \n            <b> <output >{  `x${ this.state.playBackRate }` }</output> </b>\n        </p>\n  \n        <input \n              type=\"range\"  \n              min=\"0.2\"\n              value={ this.state.playBackRate } \n              max=\"3.5\"  \n              step=\"0.1\"  \n              // list=\"tickmarks\"\n              onChange={ this.handlePlayBackRateChange }\n              ref={ this.playbackRateInputRange }\n              />\n              \n        <br/>\n        <button type=\"button\" onClick={ ()=> { this.setPlayBackRate(1)} }>Reset</button>\n            \n        {/* Rollback ⟲ ↺  */}\n        <p className={ styles.helpText }>Rollback  \n            <b> <output >{  `x${ this.state.rollBackValueInSeconds }` }</output></b> Seconds\n        </p>\n      \n        <input \n              type=\"range\"  \n              min=\"1\"\n              max=\"60\"  \n              step=\"1\"  \n              value={ this.state.rollBackValueInSeconds  } \n              onChange={ this.handleChangeReplayRollbackValue }\n              /> \n        <br/>\n        <button type=\"button\" onClick={ ()=> { this.rollBack()} }>↺</button>\n\n    </section>;\n\n    const keyboardShortcutsHelp = Object.keys(this.state.hotKeys).map((shortcutKey,index) =>{\n      return <p className={ styles.helpText }  key={ shortcutKey }><code>{shortcutKey}</code> <small><b>{this.state.hotKeys[ shortcutKey ].helperText}</b></small></p>;\n    })\n\n    return (\n        <section className={ styles.videoSection }>\n            {mediaPlayerEl}\n            {this.props.mediaUrl !== null?  playerControlsSection:''}\n           \n            <section><label>{this.props.mediaUrl !== null? 'Keyboard Shortcuts':''}</label>\n                {this.props.mediaUrl !== null? keyboardShortcutsHelp :''}\n            </section>  \n        </section>\n        );\n  }\n}\n\n// export default mouseTrap(MediaPlayer);\nexport default hotkeys(MediaPlayer);\n// export default MediaPlayer;\n","import React from 'react';\nimport styles from './index.module.css';\n\nimport TimedTextEditor from './TimedTextEditor/index.js';\nimport MediaPlayer from './MediaPlayer/index.js';\n\nclass TranscriptEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n           currentTime:0\n        }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    handleWordClick = (startTime) => {\n        this.setCurrentTime(startTime);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    handleTimeUpdate = (currentTime) => {\n            this.setState({\n                currentTime: currentTime\n            })\n    }\n\n    render() {\n        return (\n            <section className={ styles.container }>\n                <header className={ styles.header }>\n                  \n                </header>\n                <aside className={ styles.nav }>\n                    <MediaPlayer \n                    // eslint-disable-next-line no-return-assign\n                    hookSeek={ (foo) => this.setCurrentTime = foo }\n                    hookOnTimeUpdate={ this.handleTimeUpdate }\n                    mediaUrl={ this.props.mediaUrl } \n                    />\n                </aside>\n                <main className={ styles.main }>\n                    <TimedTextEditor \n                    transcriptData={ this.props.transcriptData } \n                    onWordClick={ this.handleWordClick }\n                    currentTime={ this.state.currentTime } \n                    isEditable={ this.props.isEditable }\n                    sttJsonType={ this.props.sttJsonType }\n                    />\n                </main>\n                {/* <aside className={ styles.aside }>Settings</aside> */}\n                <footer className={ styles.footer }></footer>\n            </section>\n        );\n    }\n}\n\nexport default TranscriptEditor;\n","import React from 'react';\nconst SttTypeSelect = (props) => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n    <option value=\"bbckaldi\">BBC Kaldi</option>\n    <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n    <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n    <option value=\"autoedit2\">autoEdit 2</option>\n    <option value=\"ibm\" disabled>IBM Watson STT</option>\n    <option value=\"speechmatics\" disabled>Speechmatics</option>\n    <option value=\"assemblyai\" disabled>AssemblyAI</option>\n    <option value=\"rev\" disabled>Rev</option>\n    <option value=\"srt\" disabled>Srt</option>\n    <option value=\"vtt\" disabled>VTT</option>\n    <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n</select>)\n\nexport default SttTypeSelect;","import React from 'react';\nimport { render } from 'react-dom';\nimport { TranscriptEditor } from './lib';\n// import kaldiTranscript from './sample-data/kaldi-transcription-20181029235300.json';\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport styles from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type.js'\n\nconst tedTalkVideoUrl =\n  'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi'\n    };\n    // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n  }\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl,\n      sttType: 'bbckaldi'\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[ 0 ];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      var fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL\n      });\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const self = this;\n    const file = files[ 0 ];\n    // let type = file.type;\n    // TODO: add checks\n    // let transcriptJsonContent = FileReader.readAsText(file)\n    var fr = new FileReader();\n    fr.onload = function(e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result));\n      self.setState({\n        transcriptData: JSON.parse(e.target.result)\n        // mediaUrl: tedTalkVideoUrl\n      });\n    };\n    fr.readAsText(file);\n  }\n\n  handleIsTextEditable = (e)=>{\n    this.setState((prevState,props) => {\n      return { isTextEditable: (prevState.isTextEditable) === true ? false: true }\n    })\n  }\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = (event) =>{\n    console.log(event.target.name ,event.target.value )\n    this.setState({ [ event.target.name ]: event.target.value });\n  }\n\n  render() {\n    return (\n        <div className={ styles.container }>\n            <span className={ styles.title }>\n            Demo page for <mark>React Transcript Editor</mark> - Component |{' '}\n                <a\n            href=\"https://github.com/bbc/react-transcript-editor\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Github Repo\n                </a>\n            </span>\n            <br />\n            <button onClick={ () => this.loadDemo() }>load demo</button>\n            <br />\n            <label>open Transcript Json</label>\n            <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n        />\n            <SttTypeSelect\n            name={ 'sttType' }\n            value={ this.state.sttType }\n            handleChange={ this.handleSttTypeChange }\n           />\n\n            <br />\n            <label>Load Local Media</label>\n            <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n        />\n            <br />\n            <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n            </button>\n\n            <p>Text Is Editable\n                <label className={ styles.switch }>\n                    <input type=\"checkbox\" \n                  defaultChecked=\"true\" \n                  onChange={ this.handleIsTextEditable }\n                  />\n                    <span className={ styles.slider }></span>\n                </label>\n            </p>\n\n            <hr/>\n\n            <TranscriptEditor\n              transcriptData={ this.state.transcriptData }\n              mediaUrl={ this.state.mediaUrl }\n              isEditable={ this.state.isTextEditable }\n              sttJsonType={ this.state.sttType }\n            />\n        </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TranscriptEditor_container__28OEI\",\"nav\":\"TranscriptEditor_nav__173Ja\",\"header\":\"TranscriptEditor_header__3t9qT\",\"main\":\"TranscriptEditor_main__2aOzn\",\"aside\":\"TranscriptEditor_aside__1f7EK\",\"footer\":\"TranscriptEditor_footer__1EQwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\",\"title\":\"src_title__1Il-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"TimedTextEditor_editor__2M5RK\"};"],"sourceRoot":""}