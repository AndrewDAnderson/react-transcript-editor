{"version":3,"sources":["lib/TranscriptEditor/TimedTextEditor/TimedTextEditor.js","lib/TranscriptEditor/MediaController/ProgressBar/ProgressBar.js","lib/TranscriptEditor/MediaController/PlayerControls/PlayerControls.js","lib/TranscriptEditor/MediaController/MediaController.js","lib/TranscriptEditor/MediaPreview/MediaPreview.js","lib/TranscriptEditor/TranscriptEditor.js","index.js","lib/TranscriptEditor/TranscriptEditor.module.css","index.module.css","lib/TranscriptEditor/TimedTextEditor/TimedTextEditor.module.css","lib/TranscriptEditor/TimedTextEditor/adapters/bbc-kaldi/index.js","lib/TranscriptEditor/MediaPreview/MediaPreview.module.css"],"names":["TimedTextEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editorState","EditorState","createEmpty","transcriptData","onChange","setState","loadData","nexProps","_this2","blocks","bbcKaldiToDraft","contentState","convertFromRaw","entityMap","createWithContent","react_default","a","createElement","className","styles","editor","Draft","React","Component","ProgressBar","PlayerControls","MediaController","MediaController_ProgressBar_ProgressBar","MediaController_PlayerControls_PlayerControls","MediaPreview","videoRef","createRef","mediaPlayer","mediaUrl","id","playsInline","controls","src","type","data-testid","ref","videoSection","TranscriptEditor","container","header","TranscriptEditor_MediaController_MediaController","nav","TranscriptEditor_MediaPreview_MediaPreview","main","TranscriptEditor_TimedTextEditor_TimedTextEditor","aside","footer","App","kaldiTedTalkTranscript","files","console","log","file","document","canPlayType","fileURL","URL","createObjectURL","prompt","self","fr","FileReader","onload","e","JSON","parse","target","result","readAsText","title","href","onClick","loadDemo","handleChangeLoadTranscriptJson","handleChangeLoadMedia","handleChangeLoadMediaUrl","lib_TranscriptEditor_TranscriptEditor","render","src_App","getElementById","module","exports","bbcKaldiJson","results","words","paragraph","text","forEach","word","test","punct","push","groupWordsInParagraphs","retval","draftJsContentBlockParagraph","join","data","speaker","entityRanges"],"mappings":"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","file":"static/js/main.6b6b741f.chunk.js","sourcesContent":["import React from 'react';\nimport \n// Draft,\n    {\n    Editor,\n    EditorState,\n    // ContentState,\n    convertFromRaw,\n  } from 'draft-js';\n\nimport styles from './TimedTextEditor.module.css';\n\nimport bbcKaldiToDraft from './adapters/bbc-kaldi/index.js';\n\n\nclass TimedTextEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editorState: EditorState.createEmpty(),\n            transcriptData: this.props.transcriptData\n        };\n    \n        this.onChange = editorState => this.setState({ editorState });\n      \n    }\n    componentDidMount(){\n        this.loadData();\n    }\n\n    componentWillReceiveProps(nexProps){\n        this.setState({\n            transcriptData:nexProps.transcriptData\n        },()=>{\n            this.loadData();\n        })\n         \n    }\n    \n    loadData() {\n        if(this.props.transcriptData!==\"\"){\n            let blocks = bbcKaldiToDraft(this.props.transcriptData);\n\n            const entityMap = {};\n    \n            const contentState = convertFromRaw({ blocks, entityMap });\n            const editorState = EditorState.createWithContent(contentState);\n    \n            this.setState({ editorState });\n        }\n       \n    }\n    \n    render() {\n        return (\n        <section className={styles.editor}>\n            <Editor editorState={this.state.editorState} onChange={this.onChange} />\n            {/* <button onClick={() => this.loadData()}>load data</button> */}\n        </section>\n        );\n    }\n}\n\nexport default TimedTextEditor;\n","import React from 'react';\n\nclass ProgressBar extends React.Component {\n    render() {\n      return <h3>ProgressBar</h3>;\n    }\n  }\n\nexport default ProgressBar;","import React from 'react';\n\nclass PlayerControls extends React.Component {\n    render() {\n      return <h3>PlayerControls</h3>;\n    }\n  }\n\nexport default PlayerControls;","import React from 'react';\n\n\nimport ProgressBar from \"./ProgressBar/ProgressBar\";\nimport PlayerControls from \"./PlayerControls/PlayerControls\";\n\nclass MediaController extends React.Component {\n    render() {\n      return (\n          <div>\n            <h2>MediaController</h2>\n            <ProgressBar/>\n           \n            <PlayerControls/>\n        </div>\n      );\n    }\n  }\n\nexport default MediaController;","import React from 'react';\nimport styles from './MediaPreview.module.css';\n\n// inspired by https://github.com/bbc/nm2/blob/master/src/components/chapter/video/Video.jsx\n\nclass MediaPreview extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n    render() {\n      // conditional, if media player not defined then don't show\n      let mediaPlayer;\n      if (this.props.mediaUrl !==\"\") {\n        mediaPlayer = <video\n        id=\"video\"\n        playsInline\n        // autoPlay\n        controls\n        src={this.props.mediaUrl}\n        type=\"video/mp4\"\n        data-testid=\"media-player-id\"\n        ref={this.videoRef}\n      />;\n      } \n    \n      return (\n        <section className={styles.videoSection}>\n         {mediaPlayer}\n        </section>\n      );\n    }\n  }\n\nexport default MediaPreview;","import React from 'react';\nimport styles from  \"./TranscriptEditor.module.css\";\n\nimport TimedTextEditor from \"./TimedTextEditor/TimedTextEditor\";\nimport MediaController from \"./MediaController/MediaController\";\nimport MediaPreview from \"./MediaPreview/MediaPreview\";\n\nclass TranscriptEditor extends React.Component {\n\n    render() {\n        return (\n            <section className={styles.container}>\n                <header className={styles.header}>\n                    <MediaController \n                    mediaUrl={this.props.mediaUrl} \n                    />\n                </header>\n                <nav  className={styles.nav}>\n                    <MediaPreview \n                    mediaUrl={this.props.mediaUrl}            \n                    />\n                </nav>\n                <main  className={styles.main}>\n                    <TimedTextEditor\n                    transcriptData={this.props.transcriptData}\n                    />\n                </main>\n                <aside className={styles.aside}>Settings</aside>\n                <footer className={styles.footer}>Footer</footer>\n        </section>\n        );\n    }\n}\n\nexport default TranscriptEditor;","  import React from 'react';\n  import { render } from \"react-dom\";\n  import { TranscriptEditor } from \"./lib\";\n  // import kaldiTranscript from './sample-data/kaldi-transcription-20181029235300.json';\n  import kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\n  import styles from './index.module.css';\n\n  const tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state={\n        transcriptData: \"\",\n        mediaUrl: \"\"\n      }\n      // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n    }\n    loadDemo(){\n      this.setState({\n        transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: tedTalkVideoUrl\n      })\n    }\n\n    // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n    handleChangeLoadMedia(files){\n      console.log(files)\n      let file = files[0]\n      let type = file.type\n      // check if is playable\n      const videoNode = document.createElement('video');\n      const canPlay = videoNode.canPlayType(type);\n      if(canPlay){\n        var fileURL = URL.createObjectURL(file)\n        // videoNode.src = fileURL\n          this.setState({\n            // transcriptData: kaldiTedTalkTranscript,\n            mediaUrl: fileURL\n          })\n      }\n    }\n\n    handleChangeLoadMediaUrl(){\n      let fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL\n      })\n    }\n\n    \n\n    handleChangeLoadTranscriptJson(files){\n      const self = this;\n      let file = files[0]\n      let type = file.type\n      // TODO: add checks\n      // let transcriptJsonContent = FileReader.readAsText(file)\n      var fr = new FileReader();\n      fr.onload = function(e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result))\n        self.setState({\n          transcriptData: JSON.parse(e.target.result)\n          // mediaUrl: tedTalkVideoUrl\n        })\n      };\n      fr.readAsText(file);\n    }\n\n    render() {\n      return (\n    <div className={styles.container}>\n    <span className={styles.title}>Demo page for React Transcript Editor - Component | <a href=\"https://github.com/bbc/react-transcript-editor\" target=\"_blank\">Github Repo</a></span>\n    <br/>\n    <button onClick={() => this.loadDemo()}>load demo</button>\n    <br/>\n    <label>open Transcript Json</label>\n    <input type=\"file\" onChange={ (e) => this.handleChangeLoadTranscriptJson(e.target.files) } />\n    <br/>\n    <label>Load Local Media</label>\n    <input type=\"file\" onChange={ (e) => this.handleChangeLoadMedia(e.target.files) } />\n    <br/>\n      <button onClick={() => this.handleChangeLoadMediaUrl()}>Load Media From Url</button>\n\n      <TranscriptEditor \n        transcriptData={this.state.transcriptData} \n        mediaUrl={this.state.mediaUrl}\n      />\n\n    </div>\n      )\n    }\n  };\n\n  render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TranscriptEditor_container__1xHvx\",\"nav\":\"TranscriptEditor_nav__19yQR\",\"header\":\"TranscriptEditor_header__A5dxc\",\"main\":\"TranscriptEditor_main__3i6K9\",\"aside\":\"TranscriptEditor_aside__1VrzG\",\"footer\":\"TranscriptEditor_footer__3Tsod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\",\"title\":\"src_title__1Il-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"TimedTextEditor_editor__DhFAf\"};","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n```\n * \n * into \n * \n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n * \n */\n\n\nfunction bbcKaldiToDraft(bbcKaldiJson){\n    let results = [];\n   let wordsByParagraphs = groupWordsInParagraphs(bbcKaldiJson.retval.words);\n   wordsByParagraphs.forEach((paragraph)=>{\n        let draftJsContentBlockParagraph = {\n            text: paragraph.text.join(' '),\n            type: 'paragraph',\n            data: {\n            speaker: 'TBC',\n            },\n            entityRanges: []\n        }\n        results.push(draftJsContentBlockParagraph);\n    })\n\n\n    return results;\n}\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */ \nfunction groupWordsInParagraphs(words){\n    let results = [];\n    let paragraph = {words:[], text:[]};\n    words.forEach((word) => {\n        // if word contains punctuation\n        if(/[.?!]/.test(word.punct)){\n            paragraph.words.push(word);\n            paragraph.text.push(word.punct);\n            results.push(paragraph);\n            // reset paragraph \n            paragraph = {words:[], text:[]};\n        }else{\n            paragraph.words.push(word);\n            paragraph.text.push(word.punct);\n        }\n    });\n    return results\n}\n\n module.exports = bbcKaldiToDraft;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoSection\":\"MediaPreview_videoSection__3uEmr\"};"],"sourceRoot":""}