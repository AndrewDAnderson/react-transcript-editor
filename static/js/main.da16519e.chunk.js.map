{"version":3,"sources":["lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/adapters/generate-entities-ranges/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/bbc-kaldi/index.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/index.js","index.js","lib/TranscriptEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","index.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css"],"names":["mutability","Word","data","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","start","data-entity-key","key","className","children","PureComponent","generateEntitiesRanges","words","position","map","word","result","end","confidence","text","punct","offset","length","Math","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","test","push","groupWordsInParagraphs","undefined","retval","draftJsContentBlockParagraph","join","type","speaker","entityRanges","TimedTextEditor","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDoubleClick","event","element","nativeEvent","target","hasAttribute","parentElement","t","parseFloat","getAttribute","onWordClick","state","editorState","EditorState","createEmpty","transcriptData","onChange","setState","loadData","prevProps","prevState","blocks","block","flatEntityRanges","flatten","entityMap","convertFromRaw","createWithContent","decorator","_this2","styles","editor","onDoubleClick","Draft","stripPastedStyles","nextProps","React","Component","list","reduce","b","concat","Array","isArray","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","component","secondsToTimecode","time","newCurrentTimeInSeconds","timecodes","fromSeconds","timecodeToSeconds","includes","split","toSeconds","replace","MediaPlayer","setCurrentTime","newCurrentTime","videoRef","current","readyState","currentTime","play","setTimeCodeOffset","newTimeCodeOffSet","timecodeOffset","rollBack","tmpDesiredCurrentTime","rollBackValueInSeconds","handleTimeUpdate","e","hookOnTimeUpdate","handlePlayBackRateChange","setPlayBackRate","value","speedValue","playBackRate","playbackRate","handleChangeReplayRollbackValue","handleMuteVolume","volume","isPlaying","paused","playMedia","pause","handleProgressBarClick","lengthOfBar","offsetWidth","positionPercentage","screenX","offsetLeft","totalTime","max","roundNewCurrentTime","toFixed","createRef","hookSeek","mediaPlayerEl","mediaUrl","id","playsInline","src","onTimeUpdate","data-testid","onClick","ref","dataListOptionValuesForPlaybackRate","i","playerControlsSection","progressBar","parseInt","duration","prompt","switch","defaultChecked","slider","min","step","videoSection","TranscriptEditor","handleWordClick","startTime","container","header","nav","TranscriptEditor_MediaPlayer","foo","main","TranscriptEditor_TimedTextEditor","footer","App","kaldiTedTalkTranscript","files","console","log","file","document","canPlayType","fileURL","URL","createObjectURL","self","fr","FileReader","onload","JSON","parse","readAsText","title","href","rel","loadDemo","handleChangeLoadTranscriptJson","handleChangeLoadMedia","handleChangeLoadMediaUrl","lib_TranscriptEditor","render","src_App","getElementById","module","exports","aside"],"mappings":"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","file":"static/js/main.da16519e.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  // Draft,\n  Editor,\n  EditorState,\n  // ContentState,\n  CompositeDecorator,\n  convertFromRaw\n} from 'draft-js';\n\nimport Word from './Word';\nimport bbcKaldiToDraft from './adapters/bbc-kaldi/index.js';\n\nimport styles from './index.module.css';\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData\n    };\n\n    this.onChange = editorState => this.setState({ editorState });\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState){\n    if(nextProps.transcriptData !== null){\n      return {\n        transcriptData: nextProps.transcriptData\n      }\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.transcriptData !== this.state.transcriptData){\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = bbcKaldiToDraft(this.props.transcriptData);\n      const entityRanges = blocks.map(block => block.entityRanges);\n      // eslint-disable-next-line no-use-before-define\n      const flatEntityRanges = flatten(entityRanges);\n      \n      const entityMap = {};\n\n      flatEntityRanges.forEach((data) => {\n        entityMap[ data.key ] = {\n            type: 'WORD',\n            mutability: 'MUTABLE',\n            data\n          }\n      });\n     \n      const contentState = convertFromRaw({ blocks, entityMap });\n\n      // eslint-disable-next-line no-use-before-define\n      const editorState = EditorState.createWithContent(contentState, decorator);\n\n      this.setState({ editorState });\n    }\n  }\n\n  // click on words - for navigation \n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event)=> {\n    // nativeEvent --> React giving you the DOM event \n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      //TODO: prop to jump to video <-- To connect with MediaPlayer\n      // this.props.seek(t);\n      this.props.onWordClick(t);\n      // TODO: pass current time of media to TimedTextEditor to know what text to highlight in this component  \n    }\n  }\n\n  render() {\n    return (\n        <section\n        className={ styles.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }\n        // onClick={ event => this.handleOnClick(event) }\n        >\n            <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n        />\n            {/* <button onClick={() => this.loadData()}>load data</button> */}\n        </section>\n    );\n  }\n}\n\n// converts nested arrays into one dimensional array \nconst flatten = list =>\n  list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\n// DraftJs decorator to recognize which entity is which \n// and know what to apply to what component \nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges(character => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs \n// defines what to use to render the entity \nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word\n  }\n]);\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\n\nclass Word extends PureComponent {\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n        <span data-start={ data.start } data-entity-key={ data.key } className=\"Word\">\n            {this.props.children}\n        </span>\n    );\n  }\n}\n\nexport default Word;\n","/**\n * Helper function to generate draft.js entities, \n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\nconst generateEntitiesRanges = (words) => {\n    let position = 0;\n    return words.map((word) => {\n         const result =  {\n          start: word.start,\n          end: word.end,\n          confidence: word.confidence,\n          text: word.punct,\n          offset: position,\n          length: word.punct.length,\n          key: Math.random()\n            .toString(36)\n            .substring(6)\n          }\n          // increase position counter - to determine word offset in paragraph\n          position = position + word.punct.length + 1;\n\n          return result;\n      })\n} \n\nexport default generateEntitiesRanges;","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n```\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = words => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach(word => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = bbcKaldiJson => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach(paragraph => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: 'TBC'\n      },\n      // the entities as ranges are each word in the space-joined text, \n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words)\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Wrapping around \n * https://www.npmjs.com/package/node-timecodes \n * To provide more support for variety of formats.\n */\nimport timecodes from 'node-timecodes';\n\nconst secondsToTimecode = (time)=>{\n    if(typeof newCurrentTimeInSeconds !== 'number'){\n        return timecodes.fromSeconds(parseFloat(time))\n    }\n    return timecodes.fromSeconds(time)   \n}\n\n/**\n * @param {*} time \n * Can take as input timecodes in the following formats \n * - hh:mm:ss:ms\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds \n * - hh:mm:ss\n * @todo could be refactored with some helper functions for clarity \n */\nconst timecodeToSeconds = (time)=>{\n    let newCurrentTimeInSeconds = time;\n    if(typeof newCurrentTimeInSeconds !== 'number'){\n        if( newCurrentTimeInSeconds.includes(':')){\n          // hh:mm:ss:ms --> already in right format\n          if(newCurrentTimeInSeconds.split(':').length === 4){\n            newCurrentTimeInSeconds = timecodes.toSeconds(newCurrentTimeInSeconds);\n          }\n           // mm:ss --> convert to hh:mm:ss:ms\n          else if(newCurrentTimeInSeconds.split(':').length === 2){\n            // if it's m:ss\n           if(newCurrentTimeInSeconds.split(':')[ 0 ].length ===1){\n            newCurrentTimeInSeconds = `0${ newCurrentTimeInSeconds.split(':')[ 0 ] }:${ newCurrentTimeInSeconds.split(':')[ 1 ] }`;\n            } \n\n            newCurrentTimeInSeconds = `00:${ newCurrentTimeInSeconds }:00`;\n            newCurrentTimeInSeconds = timecodes.toSeconds(newCurrentTimeInSeconds);\n          }\n          //  hh:mm:ss\n          else if(newCurrentTimeInSeconds.split(':').length === 3){\n            newCurrentTimeInSeconds = `${ newCurrentTimeInSeconds }:00`;\n            newCurrentTimeInSeconds = timecodes.toSeconds(newCurrentTimeInSeconds);\n            }\n        }\n        // doesn't include : and includes . instead mm.ss\n        else if( newCurrentTimeInSeconds.includes('.')){\n            if(newCurrentTimeInSeconds.split('.')[ 0 ].length ===1){\n                newCurrentTimeInSeconds = `0${ newCurrentTimeInSeconds.split('.')[ 0 ] }:${ newCurrentTimeInSeconds.split('.')[ 1 ] }`;\n                } \n                newCurrentTimeInSeconds = `00:${ newCurrentTimeInSeconds.replace('.',':') }:00`;\n                newCurrentTimeInSeconds = timecodes.toSeconds(newCurrentTimeInSeconds);\n        }\n        // assuming it receive timecode as seconds as string '600'\n        else {\n            return parseFloat(newCurrentTimeInSeconds)\n         }\n      }\n\n    return newCurrentTimeInSeconds;\n}\n\nexport { secondsToTimecode, timecodeToSeconds }\n","import React from 'react';\nimport styles from './index.module.css';\n// import timecodes from 'node-timecodes';\nimport { timecodeToSeconds, secondsToTimecode  } from '../../Util/timecode-converter/index.js';\n\n// inspired by https://github.com/bbc/nm2/blob/master/src/components/chapter/video/Video.jsx\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      playBackRate:1,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0\n    }\n  }\n\n  componentDidMount(){\n    this.props.hookSeek(this.setCurrentTime)\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if(newCurrentTime!=='' && newCurrentTime!==null){\n    // hh:mm:ss:ms - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime); \n\n      if (this.videoRef.current  !== null) {\n        const videoRef = this.videoRef.current;\n        // videoRef.load();\n        if ( videoRef.readyState === 4 ) {\n          // it's loaded\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          videoRef.play();\n        }\n      }\n    }\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet)=>{\n    if(newTimeCodeOffSet!=='' && newTimeCodeOffSet!==null){\n      // use similar helper function from above to convert \n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if(newTimeCodeOffSet.includes(':')){\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds })\n      }\n    }\n  }\n\n  rollBack = () =>{\n    if (this.videoRef.current  !== null) {\n      // get video duration \n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video  \n      this.setCurrentTime(tmpDesiredCurrentTime);\n    }\n  }\n\n  handleTimeUpdate = (e)=>{\n    // eslint-disable-next-line react/prop-types\n    this.props.hookOnTimeUpdate(e.target.currentTime)\n  }\n\n  handlePlayBackRateChange = (e)=>{\n    this.setPlayBackRate(e.target.value)\n  }\n\n  setPlayBackRate = (speedValue) =>{\n    // value between 0.2 and 3.5\n    if(this.videoRef.current!== null){\n      if(speedValue>=0.2 && speedValue<=3.5){\n        this.setState({\n            playBackRate: speedValue\n          },()=>{\n              this.videoRef.current.playbackRate = speedValue;\n            \n          })\n      }\n    }\n  }\n\n  handleChangeReplayRollbackValue = (e)=>{\n    if(this.videoRef.current!== null){\n        this.setState({\n          rollBackValueInSeconds: e.target.value \n        })\n    }\n  }\n\n  handleMuteVolume = (e) => {\n    // https://www.w3schools.com/tags/av_prop_volume.asp\n    if(this.videoRef.current!== null){\n      if(this.videoRef.current.volume > 0){\n        this.videoRef.current.volume  = 0;\n      }\n      else{\n        this.videoRef.current.volume =1;\n      }\n    }\n  }\n\n  isPlaying=(e)=>{\n    if(this.videoRef.current!== null){\n      if(this.videoRef.current.paused){\n        return false;\n      }else{\n       return true;\n      }\n    }\n  }\n  \n  playMedia =(e)=>{\n    if(this.videoRef.current!== null){\n      if(this.videoRef.current.paused){\n        this.videoRef.current.play();\n      }else{\n        this.videoRef.current.pause();\n      }\n    }\n  }\n\n  handleProgressBarClick = (e) =>{\n    if(this.videoRef.current!== null){\n      // length of the bar\n      const lengthOfBar =  e.target.offsetWidth; \n      // distance of the position of the lick from the start of the progress bar element\n      // location of click - start point of the bar \n      const clickLength = e.screenX - e.target.offsetLeft;\n      const positionPercentage = clickLength / lengthOfBar;\n      // total time\n      const totalTime = e.target.max;\n      const resultInSeconds = totalTime * positionPercentage;  \n      // rounding up \n      const roundNewCurrentTime = parseFloat((resultInSeconds).toFixed(2));\n      this.setCurrentTime(roundNewCurrentTime);\n    }\n  }\n\n  render() {\n    // conditional, if media player not defined then don't show\n    let mediaPlayerEl;\n    if (this.props.mediaUrl !== null) {\n      mediaPlayerEl = (\n          <video\n          id=\"video\"\n          playsInline\n          // autoPlay\n          // controls\n          src={ this.props.mediaUrl }\n          onTimeUpdate={ this.handleTimeUpdate }\n          // TODO: video type\n          type=\"video/mp4\"\n          data-testid=\"media-player-id\"\n          onClick={ this.playMedia }\n          ref={ this.videoRef }\n        />\n      );\n    }\n\n    let dataListOptionValuesForPlaybackRate = '';\n    for(let i = 0.2; i<=3.6;i+=0.1){\n      dataListOptionValuesForPlaybackRate += `<option value=\"${ parseFloat(i).toFixed(2) }\" />\\n`\n    }\n\n    const playerControlsSection = <section>\n        {/* Progress bar  */}\n        <progress \n            className={ styles.progressBar } \n            max={ this.videoRef.current!== null? parseInt(this.videoRef.current.duration) : '100' }\n            value= { this.videoRef.current!== null? parseInt(this.videoRef.current.currentTime) : '0' }\n            onClick={ (e)=>{ this.handleProgressBarClick(e) } }\n            />\n\n        <br/>\n        {/* Play / Pause Btn  */}\n        {this.videoRef.current!== null? <button onClick={ ()=>{ this.playMedia()} }> {this.isPlaying()? '❚❚' : '▶'} </button>:''}\n        ️\n        {/* Display timecodes */}\n        <code>{this.videoRef.current!== null ? secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset): '00:00:00:00'}</code>\n            /\n        <code>{this.videoRef.current!== null ?  secondsToTimecode(this.videoRef.current.duration + this.state.timecodeOffset): '00:00:00:00'}</code>\n\n        <button type=\"button\" onClick={ ()=>{ this.setCurrentTime( prompt('Jump to timecode'))} }>Jump To Timecode ⏱</button>\n        \n        <button type=\"button\" onClick={ ()=>{ this.setTimeCodeOffset( prompt('Add a timecode offset'))} }>Set Timecode Offset ⏱</button>\n        <output><code>{secondsToTimecode(this.state.timecodeOffset)}</code></output>\n        <br/>\n        <label>Supported timecode formats</label>\n        <br/>\n        <code>hh:mm:ss:ms</code>  <code>mm:ss</code>  <code>m:ss</code> <code>m.ss</code>  <code>seconds</code>  <code>hh:mm:ss</code>\n        <br/>\n            \n        {/* Volume Toggle */}\n        <p>Volume</p>\n        <label className={ styles.switch }>\n            <input type=\"checkbox\" \n                defaultChecked=\"true\" \n                onChange={ this.handleMuteVolume }\n                />\n            <span className={ styles.slider }></span>\n        </label>\n\n        {/* Playback Rate  */}\n        <p>Playback Rate \n            <b> <output >{  `x${ this.state.playBackRate }` }</output> </b>\n        </p>\n  \n        <input \n              type=\"range\"  \n              min=\"0.2\"\n              value={ this.state.playBackRate } \n              max=\"3.5\"  \n              step=\"0.1\"  \n              list=\"tickmarks\"\n              onChange={ this.handlePlayBackRateChange }\n              />\n\n        <datalist id=\"tickmarks\">\n            {dataListOptionValuesForPlaybackRate}\n                \n        </datalist>\n        <br/>\n        <button type=\"button\" onClick={ ()=> { this.setPlayBackRate(1)} }>Reset</button>\n            \n        {/* Rollback ⟲ ↺  */}\n        <p>Rollback  \n            <b> <output >{  `x${ this.state.rollBackValueInSeconds }` }</output></b> Seconds\n        </p>\n      \n        <input \n              type=\"range\"  \n              min=\"1\"\n              max=\"60\"  \n              value={ this.state.rollBackValueInSeconds  } \n              onChange={ this.handleChangeReplayRollbackValue }\n              /> \n        <br/>\n        <button type=\"button\" onClick={ ()=> { this.rollBack()} }>↺</button>\n\n    </section>;\n\n    return (\n        <section className={ styles.videoSection }>\n            {mediaPlayerEl}\n            {this.props.mediaUrl !== null?  playerControlsSection:''}\n        </section>\n        );\n  }\n}\n\nexport default MediaPlayer;\n","import React from 'react';\nimport styles from './index.module.css';\n\nimport TimedTextEditor from './TimedTextEditor/index.js';\nimport MediaPlayer from './MediaPlayer/index.js';\n\nclass TranscriptEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n           currentTime:0\n        }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    handleWordClick = (startTime) => {\n        this.setCurrentTime(startTime);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    handleTimeUpdate = (currentTime) => {\n            this.setState({\n                currentTime: currentTime\n            })\n    }\n\n    render() {\n        return (\n            <section className={ styles.container }>\n                <header className={ styles.header }>\n                  \n                </header>\n                <aside className={ styles.nav }>\n                    <MediaPlayer \n                    // eslint-disable-next-line no-return-assign\n                    hookSeek={ (foo) => this.setCurrentTime = foo }\n                    hookOnTimeUpdate={ this.handleTimeUpdate }\n                    mediaUrl={ this.props.mediaUrl } \n                    />\n                </aside>\n                <main className={ styles.main }>\n                    <TimedTextEditor \n                    transcriptData={ this.props.transcriptData } \n                    onWordClick={ this.handleWordClick }\n                    currentTime={ this.state.currentTime } \n                    />\n                </main>\n                {/* <aside className={ styles.aside }>Settings</aside> */}\n                <footer className={ styles.footer }></footer>\n            </section>\n        );\n    }\n}\n\nexport default TranscriptEditor;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { TranscriptEditor } from './lib';\n// import kaldiTranscript from './sample-data/kaldi-transcription-20181029235300.json';\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport styles from './index.module.css';\n\nconst tedTalkVideoUrl =\n  'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null\n    };\n    // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n  }\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[ 0 ];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      var fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL\n      });\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const self = this;\n    const file = files[ 0 ];\n    // let type = file.type;\n    // TODO: add checks\n    // let transcriptJsonContent = FileReader.readAsText(file)\n    var fr = new FileReader();\n    fr.onload = function(e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result));\n      self.setState({\n        transcriptData: JSON.parse(e.target.result)\n        // mediaUrl: tedTalkVideoUrl\n      });\n    };\n    fr.readAsText(file);\n  }\n\n  render() {\n    return (\n        <div className={ styles.container }>\n            <span className={ styles.title }>\n            Demo page for <mark>React Transcript Editor</mark> - Component |{' '}\n                <a\n            href=\"https://github.com/bbc/react-transcript-editor\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Github Repo\n                </a>\n            </span>\n            <br />\n            <button onClick={ () => this.loadDemo() }>load demo</button>\n            <br />\n            <label>open Transcript Json</label>\n            <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n        />\n            <br />\n            <label>Load Local Media</label>\n            <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n        />\n            <br />\n            <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n            </button>\n\n            <hr/>\n\n            <TranscriptEditor\n          transcriptData={ this.state.transcriptData }\n          mediaUrl={ this.state.mediaUrl }\n        />\n        </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TranscriptEditor_container__28OEI\",\"nav\":\"TranscriptEditor_nav__173Ja\",\"header\":\"TranscriptEditor_header__3t9qT\",\"main\":\"TranscriptEditor_main__2aOzn\",\"aside\":\"TranscriptEditor_aside__1f7EK\",\"footer\":\"TranscriptEditor_footer__1EQwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoSection\":\"MediaPlayer_videoSection__23OWQ\",\"progressBar\":\"MediaPlayer_progressBar__PxbES\",\"switch\":\"MediaPlayer_switch__3YgmV\",\"slider\":\"MediaPlayer_slider__2zorg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\",\"title\":\"src_title__1Il-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"TimedTextEditor_editor__2M5RK\"};"],"sourceRoot":""}