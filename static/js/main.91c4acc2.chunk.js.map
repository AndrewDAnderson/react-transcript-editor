{"version":3,"sources":["lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/adapters/generate-entities-ranges/index.js","lib/TranscriptEditor/TimedTextEditor/adapters/bbc-kaldi/index.js","lib/TranscriptEditor/ProgressBar/index.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/index.js","index.js","lib/TranscriptEditor/index.module.css","index.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css"],"names":["mutability","Word","data","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","start","data-entity-key","key","className","children","PureComponent","generateEntitiesRanges","words","position","map","word","result","end","confidence","text","punct","offset","length","Math","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","test","push","groupWordsInParagraphs","undefined","retval","draftJsContentBlockParagraph","join","type","speaker","entityRanges","TimedTextEditor","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","editorState","EditorState","createEmpty","transcriptData","onChange","setState","handleDoubleClick","bind","assertThisInitialized","loadData","nexProps","_this2","blocks","block","flatEntityRanges","flatten","entityMap","convertFromRaw","createWithContent","decorator","event","element","nativeEvent","target","hasAttribute","parentElement","t","parseFloat","getAttribute","onWordClick","console","log","_this3","styles","editor","onDoubleClick","Draft","stripPastedStyles","React","Component","list","reduce","b","concat","Array","isArray","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","component","ProgressBar","MediaPlayer","videoRef","createRef","nextProps","seekToCurrentTime","setCurrentTime","newCurrentTime","current","readyState","currentTime","play","mediaPlayer","mediaUrl","id","playsInline","controls","src","data-testid","ref","videoSection","TranscriptEditor","handleWordClick","startTime","container","header","TranscriptEditor_ProgressBar","nav","TranscriptEditor_MediaPlayer","main","TranscriptEditor_TimedTextEditor","footer","App","kaldiTedTalkTranscript","files","file","document","canPlayType","fileURL","URL","createObjectURL","prompt","self","fr","FileReader","onload","e","JSON","parse","readAsText","title","href","rel","onClick","loadDemo","handleChangeLoadTranscriptJson","handleChangeLoadMedia","handleChangeLoadMediaUrl","lib_TranscriptEditor","render","src_App","getElementById","module","exports","aside"],"mappings":"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","file":"static/js/main.91c4acc2.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  // Draft,\n  Editor,\n  EditorState,\n  // ContentState,\n  CompositeDecorator,\n  convertFromRaw\n} from 'draft-js';\n\nimport Word from './Word';\nimport bbcKaldiToDraft from './adapters/bbc-kaldi/index.js';\n\nimport styles from './index.module.css';\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData\n    };\n\n    this.onChange = editorState => this.setState({ editorState });\n    this.handleDoubleClick.bind(this);\n    // this.handleOnClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentWillReceiveProps(nexProps) {\n    this.setState({\n        transcriptData: nexProps.transcriptData\n      },\n      () => {\n        this.loadData();\n      }\n    );\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== '') {\n      const blocks = bbcKaldiToDraft(this.props.transcriptData);\n      const entityRanges = blocks.map(block => block.entityRanges);\n      const flatEntityRanges = flatten(entityRanges);\n      \n      const entityMap = {};\n\n      flatEntityRanges.forEach((data) => {\n        entityMap[ data.key ] = {\n            type: 'WORD',\n            mutability: 'MUTABLE',\n            data\n          }\n      });\n     \n      const contentState = convertFromRaw({ blocks, entityMap });\n\n      const editorState = EditorState.createWithContent(\n        contentState,\n        decorator\n      );\n\n      this.setState({ editorState });\n    }\n  }\n\n  // click on words - for navigation \n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick(event) {\n    // nativeEvent --> React giving you the DOM event \n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      //TODO: prop to jump to video <-- To connect with MediaPlayer\n      // this.props.seek(t);\n      this.props.onWordClick(t);\n      console.log('---------');\n      console.log('1.TimedTextEditor - handleOnClick ',t);\n      // TODO: pass current time of media to TimedTextEditor to know what text to highlight in this component  \n    }\n  }\n\n  render() {\n    return (\n        <section\n        className={ styles.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }\n        // onClick={ event => this.handleOnClick(event) }\n        >\n            <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n        />\n            {/* <button onClick={() => this.loadData()}>load data</button> */}\n        </section>\n    );\n  }\n}\n\n// converts nested arrays into one dimensional array \nconst flatten = list =>\n  list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\n// DraftJs decorator to recognize which entity is which \n// and know what to apply to what component \nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges(character => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs \n// defines what to use to render the entity \nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word\n  }\n]);\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\n\nclass Word extends PureComponent {\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n        <span data-start={ data.start } data-entity-key={ data.key } className=\"Word\">\n            {this.props.children}\n        </span>\n    );\n  }\n}\n\nexport default Word;\n","/**\n * Helper function to generate draft.js entities, \n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\nconst generateEntitiesRanges = (words) => {\n    let position = 0;\n    return words.map((word) => {\n         const result =  {\n          start: word.start,\n          end: word.end,\n          confidence: word.confidence,\n          text: word.punct,\n          offset: position,\n          length: word.punct.length,\n          key: Math.random()\n            .toString(36)\n            .substring(6)\n          }\n          // increase position counter - to determine word offset in paragraph\n          position = position + word.punct.length + 1;\n\n          return result;\n      })\n} \n\nexport default generateEntitiesRanges;","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n```\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = words => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach(word => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = bbcKaldiJson => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach(paragraph => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: 'TBC'\n      },\n      // the entities as ranges are each word in the space-joined text, \n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words)\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","import React from 'react';\n\nclass ProgressBar extends React.Component {\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return <h3>ProgressBar</h3>;\n  }\n}\n\nexport default ProgressBar;\n","import React from 'react';\nimport styles from './index.module.css';\n\n// inspired by https://github.com/bbc/nm2/blob/master/src/components/chapter/video/Video.jsx\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps){\n    console.log('3.MediaPreview -  componentWillReceiveProps ',nextProps.seekToCurrentTime)\n    if(nextProps.seekToCurrentTime !== undefined){\n      this.setCurrentTime(nextProps.seekToCurrentTime)\n    }\n  }\n\n  setCurrentTime(newCurrentTime){\n    if (this.videoRef.current  !== null) {\n      const videoRef = this.videoRef.current;\n      // videoRef.load();\n      if ( videoRef.readyState === 4 ) {\n        // it's loaded\n        videoRef.currentTime = newCurrentTime;\n        console.log('videoRef.currentTime',videoRef.currentTime,newCurrentTime);\n        videoRef.play();\n      }\n      \n    }\n  }\n\n  render() {\n    // conditional, if media player not defined then don't show\n    let mediaPlayer;\n    if (this.props.mediaUrl !== '') {\n      mediaPlayer = (\n          <video\n          id=\"video\"\n          playsInline\n          // autoPlay\n          controls\n          src={ this.props.mediaUrl }\n          type=\"video/mp4\"\n          data-testid=\"media-player-id\"\n          ref={ this.videoRef }\n        />\n      );\n    }\n\n    return <section className={ styles.videoSection }>{mediaPlayer}</section>;\n  }\n}\n\nexport default MediaPlayer;\n","import React from 'react';\nimport styles from './index.module.css';\n\nimport TimedTextEditor from './TimedTextEditor/index.js';\nimport ProgressBar from './ProgressBar/index.js';\nimport MediaPlayer from './MediaPlayer/index.js';\n\nclass TranscriptEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            currentTime: 0\n        }\n        // this.handleWorClick = handleWorClick.\n        this.handleWordClick = this.handleWordClick.bind(this);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    handleWordClick(startTime){\n        console.log('2.TranscriptEditor - handleWorClick ',startTime);\n        this.setState({\n            currentTime: startTime\n        })\n    }\n\n    render() {\n        return (\n            <section className={ styles.container }>\n                <header className={ styles.header }>\n                    <ProgressBar \n                    mediaUrl={ this.props.mediaUrl }  \n                    />\n                </header>\n                <nav className={ styles.nav }>\n                    <MediaPlayer \n                    seekToCurrentTime={ this.state.currentTime } \n                    mediaUrl={ this.props.mediaUrl } \n                    />\n                </nav>\n                <main className={ styles.main }>\n                    <TimedTextEditor \n                    transcriptData={ this.props.transcriptData } \n                    onWordClick={ this.handleWordClick }\n                    />\n                </main>\n                {/* <aside className={ styles.aside }>Settings</aside> */}\n                <footer className={ styles.footer }></footer>\n            </section>\n        );\n    }\n}\n\nexport default TranscriptEditor;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { TranscriptEditor } from './lib';\n// import kaldiTranscript from './sample-data/kaldi-transcription-20181029235300.json';\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport styles from './index.module.css';\n\nconst tedTalkVideoUrl =\n  'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: '',\n      mediaUrl: ''\n    };\n    // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n  }\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[ 0 ];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      var fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL\n      });\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const self = this;\n    const file = files[ 0 ];\n    // let type = file.type;\n    // TODO: add checks\n    // let transcriptJsonContent = FileReader.readAsText(file)\n    var fr = new FileReader();\n    fr.onload = function(e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result));\n      self.setState({\n        transcriptData: JSON.parse(e.target.result)\n        // mediaUrl: tedTalkVideoUrl\n      });\n    };\n    fr.readAsText(file);\n  }\n\n  render() {\n    return (\n        <div className={ styles.container }>\n            <span className={ styles.title }>\n          Demo page for React Transcript Editor - Component |{' '}\n                <a\n            href=\"https://github.com/bbc/react-transcript-editor\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Github Repo\n                </a>\n            </span>\n            <br />\n            <button onClick={ () => this.loadDemo() }>load demo</button>\n            <br />\n            <label>open Transcript Json</label>\n            <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n        />\n            <br />\n            <label>Load Local Media</label>\n            <input\n          type=\"file\"\n          onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n        />\n            <br />\n            <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n            </button>\n\n            <TranscriptEditor\n          transcriptData={ this.state.transcriptData }\n          mediaUrl={ this.state.mediaUrl }\n        />\n        </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TranscriptEditor_container__28OEI\",\"nav\":\"TranscriptEditor_nav__173Ja\",\"header\":\"TranscriptEditor_header__3t9qT\",\"main\":\"TranscriptEditor_main__2aOzn\",\"aside\":\"TranscriptEditor_aside__1f7EK\",\"footer\":\"TranscriptEditor_footer__1EQwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\",\"title\":\"src_title__1Il-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"TimedTextEditor_editor__2M5RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoSection\":\"MediaPlayer_videoSection__23OWQ\"};"],"sourceRoot":""}